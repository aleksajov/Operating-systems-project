GAS LISTING /tmp/ccM8EJa9.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv20handleSupervisorTrapEv
   9              	_ZN5Riscv20handleSupervisorTrapEv:
  10              	.LFB19:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 7/24/23.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** //sa vezbi 7
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/TCB.hpp"
   8:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/riscv.cpp **** #include "../h/print.hpp"
  10:src/riscv.cpp **** #include "../h/syscall_c.hpp"
  11:src/riscv.cpp **** #include "../test/printing.hpp"
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap(){
  12              		.loc 1 15 35
  13              		.cfi_startproc
  14 0000 130101FA 		addi	sp,sp,-96
  15              		.cfi_def_cfa_offset 96
  16 0004 233C1104 		sd	ra,88(sp)
  17 0008 23388104 		sd	s0,80(sp)
  18 000c 23349104 		sd	s1,72(sp)
  19 0010 23302105 		sd	s2,64(sp)
  20              		.cfi_offset 1, -8
  21              		.cfi_offset 8, -16
  22              		.cfi_offset 9, -24
  23              		.cfi_offset 18, -32
  24 0014 13040106 		addi	s0,sp,96
  25              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     uint64 scause=r_scause();
  26              		.loc 1 16 5
  27              	.LBB56:
  28              	.LBB57:
  29              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 7/24/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** //sa vezbi 7
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class Riscv{
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** public:
GAS LISTING /tmp/ccM8EJa9.s 			page 2


  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     //supervisor previous privileged, previousInterruptEnable
  16:src/../h/riscv.hpp ****     //mora da bude ne inline da se poziva
  17:src/../h/riscv.hpp ****     static void popSppSpie();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void pushRegs();
  20:src/../h/riscv.hpp ****     static void popRegs();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     static uint64 r_scause();
  23:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  28:src/../h/riscv.hpp ****     static uint64 r_stval();
  29:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     enum BitMaskSStatus{
  32:src/../h/riscv.hpp ****         SSTATUS_SIE=(1<<1),
  33:src/../h/riscv.hpp ****         SSTATUS_SPIE=(1<<5),
  34:src/../h/riscv.hpp ****         SSTATUS_SPP=(1<<8)
  35:src/../h/riscv.hpp ****     };
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  38:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  39:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  40:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     enum BitMasSip{
  44:src/../h/riscv.hpp ****         SIP_SSIP=(1<<1),//software interrupt pending
  45:src/../h/riscv.hpp ****         SIP_STIP=(1 << 5),
  46:src/../h/riscv.hpp ****         SIP_SEIP=(1 << 9)
  47:src/../h/riscv.hpp ****     };
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/riscv.hpp ****     static uint64 r_sip();
  52:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     static void supervisorTrap();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp **** private:
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  61:src/../h/riscv.hpp ****     static void timerInterrupt();
  62:src/../h/riscv.hpp ****     static void hardwareInterrupt();
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp **** };
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  67:src/../h/riscv.hpp ****     uint64 volatile scause;
  30              		.loc 2 67 5
  68:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
  31              		.loc 2 68 5
GAS LISTING /tmp/ccM8EJa9.s 			page 3


  32              		.loc 2 68 68 is_stmt 0
  33              	#APP
  34              	# 68 "src/../h/riscv.hpp" 1
  69              	    return scause;
  35              		csrr a5, scause
  36              	# 0 "" 2
  37              	#NO_APP
  38 001c 2330F4FA 		sd	a5,-96(s0)
  39              		.loc 2 69 5 is_stmt 1
  40              		.loc 2 69 12 is_stmt 0
  41 0020 033504FA 		ld	a0,-96(s0)
  42              	.LVL0:
  43              	.LBE57:
  44              	.LBE56:
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     volatile uint64 a0;
  45              		.loc 1 18 5 is_stmt 1
  19:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x50(fp)": "=r"(a0));
  46              		.loc 1 19 5
  47              		.loc 1 19 50 is_stmt 0
  48              	#APP
  49              	# 19 "src/riscv.cpp" 1
  20              	    volatile uint64 a1;
  50              		ld a5, 0x50(fp)
  51              	# 0 "" 2
  52              	#NO_APP
  53 0028 233CF4FC 		sd	a5,-40(s0)
  54              		.loc 1 20 5 is_stmt 1
  21:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x58(fp)": "=r"(a1));
  55              		.loc 1 21 5
  56              		.loc 1 21 50 is_stmt 0
  57              	#APP
  58              	# 21 "src/riscv.cpp" 1
  22              	    volatile uint64 a2;
  59              		ld a5, 0x58(fp)
  60              	# 0 "" 2
  61              	#NO_APP
  62 0030 2338F4FC 		sd	a5,-48(s0)
  63              		.loc 1 22 5 is_stmt 1
  23:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x60(fp)": "=r"(a2));
  64              		.loc 1 23 5
  65              		.loc 1 23 50 is_stmt 0
  66              	#APP
  67              	# 23 "src/riscv.cpp" 1
  24              	    volatile uint64 a3;
  68              		ld a5, 0x60(fp)
  69              	# 0 "" 2
  70              	#NO_APP
  71 0038 2334F4FC 		sd	a5,-56(s0)
  72              		.loc 1 24 5 is_stmt 1
  25:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x68(fp)": "=r"(a3));
  73              		.loc 1 25 5
  74              		.loc 1 25 50 is_stmt 0
  75              	#APP
  76              	# 25 "src/riscv.cpp" 1
  26              	    volatile uint64 a4;
  77              		ld a5, 0x68(fp)
GAS LISTING /tmp/ccM8EJa9.s 			page 4


  78              	# 0 "" 2
  79              	#NO_APP
  80 0040 2330F4FC 		sd	a5,-64(s0)
  81              		.loc 1 26 5 is_stmt 1
  27:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x70(fp)": "=r"(a4));
  82              		.loc 1 27 5
  83              		.loc 1 27 50 is_stmt 0
  84              	#APP
  85              	# 27 "src/riscv.cpp" 1
  28              	
  86              		ld a5, 0x70(fp)
  87              	# 0 "" 2
  88              	#NO_APP
  89 0048 233CF4FA 		sd	a5,-72(s0)
  29:src/riscv.cpp ****     if(scause==0x09UL || scause==0x08UL){
  90              		.loc 1 29 5 is_stmt 1
  91              	.LBB58:
  92              		.loc 1 29 23 is_stmt 0
  93 004c 130785FF 		addi	a4,a0,-8
  94              		.loc 1 29 5
  95 0050 93071000 		li	a5,1
  96 0054 63E0E716 		bgtu	a4,a5,.L2
  97              	.LBB59:
  30:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
  31:src/riscv.cpp ****         uint64 sepc=r_sepc()+4;
  98              		.loc 1 31 9 is_stmt 1
  99              	.LBB60:
 100              	.LBB61:
  70:src/../h/riscv.hpp **** }
  71:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  72:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]"::[scause]"r"(scause));
  73:src/../h/riscv.hpp **** }
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
  76:src/../h/riscv.hpp ****     uint64 volatile sepc;
 101              		.loc 2 76 5
  77:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 102              		.loc 2 77 5
 103              		.loc 2 77 60 is_stmt 0
 104              	#APP
 105              	# 77 "src/../h/riscv.hpp" 1
  78              	    return sepc;
 106              		csrr a5, sepc
 107              	# 0 "" 2
 108              	#NO_APP
 109 005c 2338F4FA 		sd	a5,-80(s0)
 110              		.loc 2 78 5 is_stmt 1
 111              		.loc 2 78 12 is_stmt 0
 112 0060 833404FB 		ld	s1,-80(s0)
 113              	.LBE61:
 114              	.LBE60:
 115              		.loc 1 31 30
 116 0064 93844400 		addi	s1,s1,4
 117              	.LVL1:
  32:src/riscv.cpp ****         uint64 sstatus=r_sstatus();
 118              		.loc 1 32 9 is_stmt 1
 119              	.LBB62:
GAS LISTING /tmp/ccM8EJa9.s 			page 5


 120              	.LBB63:
  79:src/../h/riscv.hpp **** }
  80:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  81:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %[sepc]"::[sepc]"r"(sepc));
  82:src/../h/riscv.hpp **** }
  83:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
  84:src/../h/riscv.hpp ****     uint64 volatile stvec;
  85:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stvec], stvec":[stvec]"=r"(stvec));
  86:src/../h/riscv.hpp ****     return stvec;
  87:src/../h/riscv.hpp **** }
  88:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  89:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %[stvec]"::[stvec]"r"(stvec));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
  92:src/../h/riscv.hpp ****     uint64 volatile stval;
  93:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
  94:src/../h/riscv.hpp ****     return stval;
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
  97:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %[stval]"::[stval]"r"(stval));
  98:src/../h/riscv.hpp **** }
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %[mask]"::[mask]"r"(mask));
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 104:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]"::[mask]"r"(mask));
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 109:src/../h/riscv.hpp ****     uint64 volatile sip;
 110:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sip], sip":[sip]"=r"(sip));
 111:src/../h/riscv.hpp ****     return sip;
 112:src/../h/riscv.hpp **** }
 113:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 114:src/../h/riscv.hpp ****     __asm__ volatile("csrw sip, %[sip]"::[sip]"r"(sip));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 118:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %[mask]"::[mask]"r"(mask));
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 122:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 121              		.loc 2 122 5
 123:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 122              		.loc 2 123 5
 123              		.loc 2 123 72 is_stmt 0
 124              	#APP
 125              	# 123 "src/../h/riscv.hpp" 1
 124              	    return sstatus;
 126              		csrr a5, sstatus
 127              	# 0 "" 2
 128              	#NO_APP
 129 006c 2334F4FA 		sd	a5,-88(s0)
 130              		.loc 2 124 5 is_stmt 1
GAS LISTING /tmp/ccM8EJa9.s 			page 6


 131              		.loc 2 124 12 is_stmt 0
 132 0070 033984FA 		ld	s2,-88(s0)
 133              	.LVL2:
 134              	.LBE63:
 135              	.LBE62:
  33:src/riscv.cpp **** 
  34:src/riscv.cpp ****         if(a0==0x01){
 136              		.loc 1 34 9 is_stmt 1
 137              	.LBB64:
 138              		.loc 1 34 14 is_stmt 0
 139 0074 033784FD 		ld	a4,-40(s0)
 140              		.loc 1 34 9
 141 0078 93071000 		li	a5,1
 142 007c 6300F706 		beq	a4,a5,.L14
 143              	.LBE64:
 144              	.LBE59:
 145              	.LBE58:
  35:src/riscv.cpp ****             //mem_alloc
  36:src/riscv.cpp ****             void *ptr=MemoryAllocator::alloc(a1);
  37:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
  38:src/riscv.cpp ****         }
  39:src/riscv.cpp ****         else if(a0==0x02){
 146              		.loc 1 39 14 is_stmt 1
 147              	.LBB111:
 148              	.LBB105:
 149              	.LBB95:
 150              	.LBB65:
 151              		.loc 1 39 19 is_stmt 0
 152 0080 033784FD 		ld	a4,-40(s0)
 153              		.loc 1 39 14
 154 0084 93072000 		li	a5,2
 155 0088 6302F708 		beq	a4,a5,.L15
 156              	.LBE65:
 157              	.LBE95:
 158              	.LBE105:
 159              	.LBE111:
  40:src/riscv.cpp ****             //mem_free
  41:src/riscv.cpp ****             int stat=MemoryAllocator::free((void*)a1);
  42:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
  43:src/riscv.cpp ****         }
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****         else if(a0==0x11){
 160              		.loc 1 45 14 is_stmt 1
 161              	.LBB112:
 162              	.LBB106:
 163              	.LBB96:
 164              	.LBB89:
 165              	.LBB66:
 166              		.loc 1 45 19 is_stmt 0
 167 008c 033784FD 		ld	a4,-40(s0)
 168              		.loc 1 45 14
 169 0090 93071001 		li	a5,17
 170 0094 6306F708 		beq	a4,a5,.L16
 171              	.LBE66:
 172              	.LBE89:
 173              	.LBE96:
 174              	.LBE106:
GAS LISTING /tmp/ccM8EJa9.s 			page 7


 175              	.LBE112:
  46:src/riscv.cpp ****             /*thread_create
  47:src/riscv.cpp ****             a1- thread_t* handle
  48:src/riscv.cpp ****              a2- *start_routine
  49:src/riscv.cpp ****              a3- void* arg
  50:src/riscv.cpp ****              a4- uint64* stack
  51:src/riscv.cpp ****             */
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             TCB* handle= TCB::createThread((TCB::Body)a2, (uint64*)a4, (void*)a3);
  54:src/riscv.cpp **** 
  55:src/riscv.cpp **** 
  56:src/riscv.cpp ****             //thread_t *han=(thread_t *)a1;
  57:src/riscv.cpp ****             if(!handle){
  58:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
  59:src/riscv.cpp ****             }
  60:src/riscv.cpp ****             else{
  61:src/riscv.cpp ****                 //*han=(thread_t)handle;
  62:src/riscv.cpp ****                 TCB** retHandle=(TCB**)a1;
  63:src/riscv.cpp ****                 *retHandle=handle;
  64:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
  65:src/riscv.cpp ****             }
  66:src/riscv.cpp **** 
  67:src/riscv.cpp ****         }
  68:src/riscv.cpp ****         else if(a0==0x12){
 176              		.loc 1 68 14 is_stmt 1
 177              	.LBB113:
 178              	.LBB107:
 179              	.LBB97:
 180              	.LBB90:
 181              	.LBB84:
 182              	.LBB67:
 183              		.loc 1 68 19 is_stmt 0
 184 0098 033784FD 		ld	a4,-40(s0)
 185              		.loc 1 68 14
 186 009c 93072001 		li	a5,18
 187 00a0 630CF70A 		beq	a4,a5,.L17
 188              	.LBE67:
 189              	.LBE84:
 190              	.LBE90:
 191              	.LBE97:
 192              	.LBE107:
 193              	.LBE113:
  69:src/riscv.cpp ****             //thread_exit()
  70:src/riscv.cpp ****             if(TCB::running->isFinished()){
  71:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
  72:src/riscv.cpp ****             }
  73:src/riscv.cpp ****             else{
  74:src/riscv.cpp ****                 //TCB* exited=TCB::running;
  75:src/riscv.cpp ****                 TCB::running->setFinished(true);
  76:src/riscv.cpp ****                 TCB::dispatch();
  77:src/riscv.cpp ****                 //delete exited; ovde se nikad ne vraca
  78:src/riscv.cpp ****             }
  79:src/riscv.cpp ****         }
  80:src/riscv.cpp ****         else if(a0==0x13){
 194              		.loc 1 80 14 is_stmt 1
 195              	.LBB114:
 196              	.LBB108:
GAS LISTING /tmp/ccM8EJa9.s 			page 8


 197              	.LBB98:
 198              	.LBB91:
 199              	.LBB85:
 200              	.LBB78:
 201              	.LBB68:
 202              		.loc 1 80 19 is_stmt 0
 203 00a4 033784FD 		ld	a4,-40(s0)
 204              		.loc 1 80 14
 205 00a8 93073001 		li	a5,19
 206 00ac 6300F70E 		beq	a4,a5,.L18
 207              	.LBE68:
 208              	.LBE78:
 209              	.LBE85:
 210              	.LBE91:
 211              	.LBE98:
 212              	.LBE108:
 213              	.LBE114:
  81:src/riscv.cpp ****             //thread_dispatch()
  82:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  83:src/riscv.cpp ****             TCB::dispatch();
  84:src/riscv.cpp ****         }
  85:src/riscv.cpp ****         else if(a0==0x41){
 214              		.loc 1 85 14 is_stmt 1
 215              	.LBB115:
 216              	.LBB109:
 217              	.LBB99:
 218              	.LBB92:
 219              	.LBB86:
 220              	.LBB79:
 221              	.LBB72:
 222              	.LBB69:
 223              		.loc 1 85 19 is_stmt 0
 224 00b0 033784FD 		ld	a4,-40(s0)
 225              		.loc 1 85 14
 226 00b4 93071004 		li	a5,65
 227 00b8 6306F70E 		beq	a4,a5,.L19
  86:src/riscv.cpp ****             //char getc();
  87:src/riscv.cpp ****             char c=__getc();
  88:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
  89:src/riscv.cpp ****         }
  90:src/riscv.cpp ****         else if(a0==0x42){
 228              		.loc 1 90 14 is_stmt 1
 229              		.loc 1 90 19 is_stmt 0
 230 00bc 033784FD 		ld	a4,-40(s0)
 231              		.loc 1 90 14
 232 00c0 93072004 		li	a5,66
 233 00c4 6314F702 		bne	a4,a5,.L4
  91:src/riscv.cpp ****             //void putc()
  92:src/riscv.cpp **** 
  93:src/riscv.cpp ****             __putc((char)a1);
 234              		.loc 1 93 13 is_stmt 1
 235              		.loc 1 93 19 is_stmt 0
 236 00c8 033504FD 		ld	a0,-48(s0)
 237              	.LVL3:
 238 00cc 1375F50F 		andi	a0,a0,0xff
 239 00d0 97000000 		call	__putc@plt
 239      E7800000 
GAS LISTING /tmp/ccM8EJa9.s 			page 9


 240              	.LVL4:
 241 00d8 6F004001 		j	.L4
 242              	.LVL5:
 243              	.L14:
 244              	.LBE69:
 245              	.LBE72:
 246              	.LBE79:
 247              	.LBE86:
 248              	.LBE92:
 249              	.LBB93:
  36:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 250              		.loc 1 36 13 is_stmt 1
  36:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 251              		.loc 1 36 45 is_stmt 0
 252 00dc 033504FD 		ld	a0,-48(s0)
 253              	.LVL6:
 254 00e0 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 254      E7800000 
 255              	.LVL7:
  37:src/riscv.cpp ****         }
 256              		.loc 1 37 13 is_stmt 1
  37:src/riscv.cpp ****         }
 257              		.loc 1 37 68 is_stmt 0
 258              	#APP
 259              	# 37 "src/riscv.cpp" 1
 260              		sd a0, 0x50(fp)
 261              	# 0 "" 2
 262              	.LVL8:
 263              	#NO_APP
 264              	.L4:
 265              	.LBE93:
 266              	.LBE99:
  94:src/riscv.cpp ****         }
  95:src/riscv.cpp **** 
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****         w_sstatus(sstatus);
 267              		.loc 1 97 9 is_stmt 1
 268              	.LBB100:
 269              	.LBB101:
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 127:src/../h/riscv.hpp ****     __asm__ volatile("csrw sstatus, %[sstatus]"::[sstatus]"r"(sstatus));
 270              		.loc 2 127 5
 271              		.loc 2 127 72 is_stmt 0
 272              	#APP
 273              	# 127 "src/../h/riscv.hpp" 1
 128              	}
 274              		csrw sstatus, s2
 275              	# 0 "" 2
 276              	.LVL9:
 277              	#NO_APP
 278              	.LBE101:
 279              	.LBE100:
  98:src/riscv.cpp ****         w_sepc(sepc);
 280              		.loc 1 98 9 is_stmt 1
 281              	.LBB102:
 282              	.LBB103:
GAS LISTING /tmp/ccM8EJa9.s 			page 10


  81:src/../h/riscv.hpp **** }
 283              		.loc 2 81 5
  81:src/../h/riscv.hpp **** }
 284              		.loc 2 81 60 is_stmt 0
 285              	#APP
 286              	# 81 "src/../h/riscv.hpp" 1
 287              		csrw sepc, s1
 288              	# 0 "" 2
 289              	.LVL10:
 290              	#NO_APP
 291              	.L1:
 292              	.LBE103:
 293              	.LBE102:
 294              	.LBE109:
 295              	.LBE115:
  99:src/riscv.cpp ****     }
 100:src/riscv.cpp **** 
 101:src/riscv.cpp ****     else{
 102:src/riscv.cpp ****         //exception
 103:src/riscv.cpp ****         //za sada nepoznato dodati odradjeni deo
 104:src/riscv.cpp ****         //print scause
 105:src/riscv.cpp ****         //print sepc
 106:src/riscv.cpp ****         //print stval
 107:src/riscv.cpp ****         printInt(scause);
 108:src/riscv.cpp ****         //while(true);
 109:src/riscv.cpp ****     }
 110:src/riscv.cpp **** 
 111:src/riscv.cpp **** }
 296              		.loc 1 111 1
 297 00f4 83308105 		ld	ra,88(sp)
 298              		.cfi_remember_state
 299              		.cfi_restore 1
 300 00f8 03340105 		ld	s0,80(sp)
 301              		.cfi_restore 8
 302              		.cfi_def_cfa 2, 96
 303 00fc 83348104 		ld	s1,72(sp)
 304              		.cfi_restore 9
 305 0100 03390104 		ld	s2,64(sp)
 306              		.cfi_restore 18
 307 0104 13010106 		addi	sp,sp,96
 308              		.cfi_def_cfa_offset 0
 309 0108 67800000 		jr	ra
 310              	.LVL11:
 311              	.L15:
 312              		.cfi_restore_state
 313              	.LBB116:
 314              	.LBB110:
 315              	.LBB104:
 316              	.LBB94:
 317              	.LBB87:
  41:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 318              		.loc 1 41 13 is_stmt 1
  41:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 319              		.loc 1 41 43 is_stmt 0
 320 010c 033504FD 		ld	a0,-48(s0)
 321              	.LVL12:
 322 0110 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
GAS LISTING /tmp/ccM8EJa9.s 			page 11


 322      E7800000 
 323              	.LVL13:
  42:src/riscv.cpp ****         }
 324              		.loc 1 42 13 is_stmt 1
  42:src/riscv.cpp ****         }
 325              		.loc 1 42 61 is_stmt 0
 326              	#APP
 327              	# 42 "src/riscv.cpp" 1
 328              		sd a0, 0x50(fp)
 329              	# 0 "" 2
 330              	#NO_APP
 331              	.LBE87:
 332 011c 6FF01FFD 		j	.L4
 333              	.LVL14:
 334              	.L16:
 335              	.LBB88:
 336              	.LBB80:
  53:src/riscv.cpp **** 
 337              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp **** 
 338              		.loc 1 53 43 is_stmt 0
 339 0120 033584FC 		ld	a0,-56(s0)
 340              	.LVL15:
 341 0124 833584FB 		ld	a1,-72(s0)
 342 0128 033604FC 		ld	a2,-64(s0)
 343 012c 97000000 		call	_ZN3TCB12createThreadEPFvPvEPmS0_@plt
 343      E7800000 
 344              	.LVL16:
  57:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 345              		.loc 1 57 13 is_stmt 1
 346              	.LBB81:
 347 0134 630C0500 		beqz	a0,.L20
 348              	.LBB82:
  62:src/riscv.cpp ****                 *retHandle=handle;
 349              		.loc 1 62 17
  62:src/riscv.cpp ****                 *retHandle=handle;
 350              		.loc 1 62 40 is_stmt 0
 351 0138 833704FD 		ld	a5,-48(s0)
 352              	.LVL17:
  63:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 353              		.loc 1 63 17 is_stmt 1
  63:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 354              		.loc 1 63 27 is_stmt 0
 355 013c 23B0A700 		sd	a0,0(a5)
  64:src/riscv.cpp ****             }
 356              		.loc 1 64 17 is_stmt 1
  64:src/riscv.cpp ****             }
 357              		.loc 1 64 62 is_stmt 0
 358 0140 93070000 		li	a5,0
 359              	.LVL18:
 360              	#APP
 361              	# 64 "src/riscv.cpp" 1
 362              		sd a5, 0x50(fp)
 363              	# 0 "" 2
 364              	#NO_APP
 365 0148 6FF05FFA 		j	.L4
 366              	.L20:
GAS LISTING /tmp/ccM8EJa9.s 			page 12


 367              	.LBE82:
  58:src/riscv.cpp ****             }
 368              		.loc 1 58 17 is_stmt 1
  58:src/riscv.cpp ****             }
 369              		.loc 1 58 63 is_stmt 0
 370 014c 9307F0FF 		li	a5,-1
 371              	#APP
 372              	# 58 "src/riscv.cpp" 1
 373              		sd a5, 0x50(fp)
 374              	# 0 "" 2
 375              	#NO_APP
 376 0154 6FF09FF9 		j	.L4
 377              	.LVL19:
 378              	.L17:
 379              	.LBE81:
 380              	.LBE80:
 381              	.LBB83:
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 382              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 383              		.loc 1 70 40 is_stmt 0
 384 0158 97070000 		la	a5,_ZN3TCB7runningE
 384      83B70700 
 385 0160 83B70700 		ld	a5,0(a5)
 386              	.LVL20:
 387              	.LBB73:
 388              	.LBB74:
 389              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 7/18/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** //sa vezbi 7
   6:src/../h/TCB.hpp **** 
   7:src/../h/TCB.hpp **** #ifndef PROJECT_BASE_TCB_HPP
   8:src/../h/TCB.hpp **** #define PROJECT_BASE_TCB_HPP
   9:src/../h/TCB.hpp **** 
  10:src/../h/TCB.hpp **** #include "../lib/hw.h"
  11:src/../h/TCB.hpp **** 
  12:src/../h/TCB.hpp **** class TCB{
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     virtual ~TCB();
  15:src/../h/TCB.hpp ****     bool isFinished() const{
  16:src/../h/TCB.hpp ****         return finished;
 390              		.loc 3 16 9 is_stmt 1
 391              		.loc 3 16 16 is_stmt 0
 392 0164 03C70703 		lbu	a4,48(a5)
 393              	.LVL21:
 394              	.LBE74:
 395              	.LBE73:
  70:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 396              		.loc 1 70 13
 397 0168 63080700 		beqz	a4,.L9
  71:src/riscv.cpp ****             }
 398              		.loc 1 71 17 is_stmt 1
  71:src/riscv.cpp ****             }
 399              		.loc 1 71 63 is_stmt 0
GAS LISTING /tmp/ccM8EJa9.s 			page 13


 400 016c 9307F0FF 		li	a5,-1
 401              	#APP
 402              	# 71 "src/riscv.cpp" 1
 403              		sd a5, 0x50(fp)
 404              	# 0 "" 2
 405              	#NO_APP
 406 0174 6FF09FF7 		j	.L4
 407              	.L9:
  75:src/riscv.cpp ****                 TCB::dispatch();
 408              		.loc 1 75 17 is_stmt 1
 409              	.LVL22:
 410              	.LBB75:
 411              	.LBB76:
  17:src/../h/TCB.hpp ****     }
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     void setFinished(bool finished){
  20:src/../h/TCB.hpp ****         TCB::finished = finished;
 412              		.loc 3 20 9
 413              		.loc 3 20 23 is_stmt 0
 414 0178 13071000 		li	a4,1
 415 017c 2388E702 		sb	a4,48(a5)
 416              	.LVL23:
 417              	.LBE76:
 418              	.LBE75:
  76:src/riscv.cpp ****                 //delete exited; ovde se nikad ne vraca
 419              		.loc 1 76 17 is_stmt 1
  76:src/riscv.cpp ****                 //delete exited; ovde se nikad ne vraca
 420              		.loc 1 76 30 is_stmt 0
 421 0180 97000000 		call	_ZN3TCB8dispatchEv@plt
 421      E7800000 
 422              	.LVL24:
 423 0188 6FF05FF6 		j	.L4
 424              	.LVL25:
 425              	.L18:
 426              	.LBB77:
  82:src/riscv.cpp ****             TCB::dispatch();
 427              		.loc 1 82 13 is_stmt 1
  82:src/riscv.cpp ****             TCB::dispatch();
 428              		.loc 1 82 34 is_stmt 0
 429 018c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 429      83B70700 
 430 0194 23B00700 		sd	zero,0(a5)
  83:src/riscv.cpp ****         }
 431              		.loc 1 83 13 is_stmt 1
  83:src/riscv.cpp ****         }
 432              		.loc 1 83 26 is_stmt 0
 433 0198 97000000 		call	_ZN3TCB8dispatchEv@plt
 433      E7800000 
 434              	.LVL26:
 435 01a0 6FF0DFF4 		j	.L4
 436              	.LVL27:
 437              	.L19:
 438              	.LBB71:
 439              	.LBB70:
  87:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
 440              		.loc 1 87 13 is_stmt 1
  87:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
GAS LISTING /tmp/ccM8EJa9.s 			page 14


 441              		.loc 1 87 26 is_stmt 0
 442 01a4 97000000 		call	__getc@plt
 442      E7800000 
 443              	.LVL28:
  88:src/riscv.cpp ****         }
 444              		.loc 1 88 13 is_stmt 1
  88:src/riscv.cpp ****         }
 445              		.loc 1 88 58 is_stmt 0
 446              	#APP
 447              	# 88 "src/riscv.cpp" 1
 448              		sd a0, 0x50(fp)
 449              	# 0 "" 2
 450              	#NO_APP
 451              	.LBE70:
 452 01b0 6FF0DFF3 		j	.L4
 453              	.LVL29:
 454              	.L2:
 455              	.LBE71:
 456              	.LBE77:
 457              	.LBE83:
 458              	.LBE88:
 459              	.LBE94:
 460              	.LBE104:
 461              	.LBE110:
 107:src/riscv.cpp ****         //while(true);
 462              		.loc 1 107 9 is_stmt 1
 107:src/riscv.cpp ****         //while(true);
 463              		.loc 1 107 17 is_stmt 0
 464 01b4 13060000 		li	a2,0
 465 01b8 9305A000 		li	a1,10
 466 01bc 1B050500 		sext.w	a0,a0
 467              	.LVL30:
 468 01c0 97000000 		call	_Z8printIntiii@plt
 468      E7800000 
 469              	.LVL31:
 470              	.LBE116:
 471              		.loc 1 111 1
 472 01c8 6FF0DFF2 		j	.L1
 473              		.cfi_endproc
 474              	.LFE19:
 476              		.align	2
 477              		.globl	_ZN5Riscv14timerInterruptEv
 479              	_ZN5Riscv14timerInterruptEv:
 480              	.LFB20:
 112:src/riscv.cpp **** 
 113:src/riscv.cpp **** void Riscv::timerInterrupt() {
 481              		.loc 1 113 30 is_stmt 1
 482              		.cfi_startproc
 483 01cc 130101FC 		addi	sp,sp,-64
 484              		.cfi_def_cfa_offset 64
 485 01d0 233C1102 		sd	ra,56(sp)
 486 01d4 23388102 		sd	s0,48(sp)
 487 01d8 23349102 		sd	s1,40(sp)
 488 01dc 23302103 		sd	s2,32(sp)
 489              		.cfi_offset 1, -8
 490              		.cfi_offset 8, -16
 491              		.cfi_offset 9, -24
GAS LISTING /tmp/ccM8EJa9.s 			page 15


 492              		.cfi_offset 18, -32
 493 01e0 13040104 		addi	s0,sp,64
 494              		.cfi_def_cfa 8, 0
 114:src/riscv.cpp ****     uint64 scause=r_scause();
 495              		.loc 1 114 5
 496              	.LBB117:
 497              	.LBB118:
  67:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 498              		.loc 2 67 5
  68:src/../h/riscv.hpp ****     return scause;
 499              		.loc 2 68 5
  68:src/../h/riscv.hpp ****     return scause;
 500              		.loc 2 68 68 is_stmt 0
 501              	#APP
 502              	# 68 "src/../h/riscv.hpp" 1
 503              		csrr a5, scause
 504              	# 0 "" 2
 505              	#NO_APP
 506 01e8 2334F4FC 		sd	a5,-56(s0)
  69:src/../h/riscv.hpp **** }
 507              		.loc 2 69 5 is_stmt 1
  69:src/../h/riscv.hpp **** }
 508              		.loc 2 69 12 is_stmt 0
 509 01ec 033784FC 		ld	a4,-56(s0)
 510              	.LVL32:
 511              	.LBE118:
 512              	.LBE117:
 115:src/riscv.cpp ****     if(scause==0x8000000000000001UL){
 513              		.loc 1 115 5 is_stmt 1
 514              	.LBB119:
 515 01f0 9307F0FF 		li	a5,-1
 516 01f4 9397F703 		slli	a5,a5,63
 517 01f8 93871700 		addi	a5,a5,1
 518 01fc 630EF700 		beq	a4,a5,.L25
 519              	.LVL33:
 520              	.L21:
 521              	.LBE119:
 116:src/riscv.cpp ****         //prekid od tajmera, softverski prekid
 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****         TCB::timeSliceCounter++;
 119:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 120:src/riscv.cpp ****             uint64 sepc=r_sepc();
 121:src/riscv.cpp ****             uint64 sstatus=r_sstatus();
 122:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 123:src/riscv.cpp ****             TCB::dispatch();
 124:src/riscv.cpp ****             w_sstatus(sstatus);
 125:src/riscv.cpp ****             w_sepc(sepc);
 126:src/riscv.cpp ****         }
 127:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 128:src/riscv.cpp ****     }
 129:src/riscv.cpp **** }
 522              		.loc 1 129 1 is_stmt 0
 523 0200 83308103 		ld	ra,56(sp)
 524              		.cfi_remember_state
 525              		.cfi_restore 1
 526 0204 03340103 		ld	s0,48(sp)
 527              		.cfi_restore 8
GAS LISTING /tmp/ccM8EJa9.s 			page 16


 528              		.cfi_def_cfa 2, 64
 529 0208 83348102 		ld	s1,40(sp)
 530              		.cfi_restore 9
 531 020c 03390102 		ld	s2,32(sp)
 532              		.cfi_restore 18
 533 0210 13010104 		addi	sp,sp,64
 534              		.cfi_def_cfa_offset 0
 535 0214 67800000 		jr	ra
 536              	.LVL34:
 537              	.L25:
 538              		.cfi_restore_state
 539              	.LBB137:
 540              	.LBB120:
 118:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 541              		.loc 1 118 9 is_stmt 1
 118:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 542              		.loc 1 118 30 is_stmt 0
 543 0218 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 543      03370700 
 544              	.LVL35:
 545 0220 83370700 		ld	a5,0(a4)
 546 0224 93871700 		addi	a5,a5,1
 547 0228 2330F700 		sd	a5,0(a4)
 119:src/riscv.cpp ****             uint64 sepc=r_sepc();
 548              		.loc 1 119 9 is_stmt 1
 549              	.LBB121:
 119:src/riscv.cpp ****             uint64 sepc=r_sepc();
 550              		.loc 1 119 61 is_stmt 0
 551 022c 17070000 		la	a4,_ZN3TCB7runningE
 551      03370700 
 552 0234 03370700 		ld	a4,0(a4)
 553              	.LVL36:
 554              	.LBB122:
 555              	.LBB123:
  21:src/../h/TCB.hpp ****     }
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     uint64 getTimeSlice() const{
  24:src/../h/TCB.hpp ****         return timeSlice;
 556              		.loc 3 24 9 is_stmt 1
 557              		.loc 3 24 16 is_stmt 0
 558 0238 03378702 		ld	a4,40(a4)
 559              	.LVL37:
 560              	.LBE123:
 561              	.LBE122:
 119:src/riscv.cpp ****             uint64 sepc=r_sepc();
 562              		.loc 1 119 9
 563 023c 63F8E700 		bgeu	a5,a4,.L26
 564              	.L23:
 565              	.LBE121:
 127:src/riscv.cpp ****     }
 566              		.loc 1 127 9 is_stmt 1
 567              	.LVL38:
 568              	.LBB133:
 569              	.LBB134:
 104:src/../h/riscv.hpp **** }
 570              		.loc 2 104 5
 104:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccM8EJa9.s 			page 17


 571              		.loc 2 104 59 is_stmt 0
 572 0240 93072000 		li	a5,2
 573              	#APP
 574              	# 104 "src/../h/riscv.hpp" 1
 575              		csrc sip, a5
 576              	# 0 "" 2
 577              	.LVL39:
 578              	#NO_APP
 579              	.LBE134:
 580              	.LBE133:
 581              	.LBE120:
 582              	.LBE137:
 583              		.loc 1 129 1
 584 0248 6FF09FFB 		j	.L21
 585              	.L26:
 586              	.LBB138:
 587              	.LBB136:
 588              	.LBB135:
 589              	.LBB124:
 120:src/riscv.cpp ****             uint64 sstatus=r_sstatus();
 590              		.loc 1 120 13 is_stmt 1
 591              	.LBB125:
 592              	.LBB126:
  76:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 593              		.loc 2 76 5
  77:src/../h/riscv.hpp ****     return sepc;
 594              		.loc 2 77 5
  77:src/../h/riscv.hpp ****     return sepc;
 595              		.loc 2 77 60 is_stmt 0
 596              	#APP
 597              	# 77 "src/../h/riscv.hpp" 1
 598              		csrr a5, sepc
 599              	# 0 "" 2
 600              	#NO_APP
 601 0250 233CF4FC 		sd	a5,-40(s0)
  78:src/../h/riscv.hpp **** }
 602              		.loc 2 78 5 is_stmt 1
  78:src/../h/riscv.hpp **** }
 603              		.loc 2 78 12 is_stmt 0
 604 0254 833484FD 		ld	s1,-40(s0)
 605              	.LVL40:
 606              	.LBE126:
 607              	.LBE125:
 121:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 608              		.loc 1 121 13 is_stmt 1
 609              	.LBB127:
 610              	.LBB128:
 122:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 611              		.loc 2 122 5
 123:src/../h/riscv.hpp ****     return sstatus;
 612              		.loc 2 123 5
 123:src/../h/riscv.hpp ****     return sstatus;
 613              		.loc 2 123 72 is_stmt 0
 614              	#APP
 615              	# 123 "src/../h/riscv.hpp" 1
 616              		csrr a5, sstatus
 617              	# 0 "" 2
GAS LISTING /tmp/ccM8EJa9.s 			page 18


 618              	#NO_APP
 619 025c 2338F4FC 		sd	a5,-48(s0)
 124:src/../h/riscv.hpp **** }
 620              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 621              		.loc 2 124 12 is_stmt 0
 622 0260 033904FD 		ld	s2,-48(s0)
 623              	.LVL41:
 624              	.LBE128:
 625              	.LBE127:
 122:src/riscv.cpp ****             TCB::dispatch();
 626              		.loc 1 122 13 is_stmt 1
 122:src/riscv.cpp ****             TCB::dispatch();
 627              		.loc 1 122 34 is_stmt 0
 628 0264 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 628      83B70700 
 629 026c 23B00700 		sd	zero,0(a5)
 123:src/riscv.cpp ****             w_sstatus(sstatus);
 630              		.loc 1 123 13 is_stmt 1
 123:src/riscv.cpp ****             w_sstatus(sstatus);
 631              		.loc 1 123 26 is_stmt 0
 632 0270 97000000 		call	_ZN3TCB8dispatchEv@plt
 632      E7800000 
 633              	.LVL42:
 124:src/riscv.cpp ****             w_sepc(sepc);
 634              		.loc 1 124 13 is_stmt 1
 635              	.LBB129:
 636              	.LBB130:
 127:src/../h/riscv.hpp **** }
 637              		.loc 2 127 5
 127:src/../h/riscv.hpp **** }
 638              		.loc 2 127 72 is_stmt 0
 639              	#APP
 640              	# 127 "src/../h/riscv.hpp" 1
 641              		csrw sstatus, s2
 642              	# 0 "" 2
 643              	.LVL43:
 644              	#NO_APP
 645              	.LBE130:
 646              	.LBE129:
 125:src/riscv.cpp ****         }
 647              		.loc 1 125 13 is_stmt 1
 648              	.LBB131:
 649              	.LBB132:
  81:src/../h/riscv.hpp **** }
 650              		.loc 2 81 5
  81:src/../h/riscv.hpp **** }
 651              		.loc 2 81 60 is_stmt 0
 652              	#APP
 653              	# 81 "src/../h/riscv.hpp" 1
  82:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 654              		csrw sepc, s1
 655              	# 0 "" 2
 656              		.loc 2 82 1
 657              	#NO_APP
 658 0280 6FF01FFC 		j	.L23
 659              	.LBE132:
GAS LISTING /tmp/ccM8EJa9.s 			page 19


 660              	.LBE131:
 661              	.LBE124:
 662              	.LBE135:
 663              	.LBE136:
 664              	.LBE138:
 665              		.cfi_endproc
 666              	.LFE20:
 668              		.align	2
 669              		.globl	_ZN5Riscv17hardwareInterruptEv
 671              	_ZN5Riscv17hardwareInterruptEv:
 672              	.LFB21:
 130:src/riscv.cpp **** 
 131:src/riscv.cpp **** void Riscv::hardwareInterrupt() {
 673              		.loc 1 131 33 is_stmt 1
 674              		.cfi_startproc
 675 0284 130101FE 		addi	sp,sp,-32
 676              		.cfi_def_cfa_offset 32
 677 0288 233C1100 		sd	ra,24(sp)
 678 028c 23388100 		sd	s0,16(sp)
 679              		.cfi_offset 1, -8
 680              		.cfi_offset 8, -16
 681 0290 13040102 		addi	s0,sp,32
 682              		.cfi_def_cfa 8, 0
 132:src/riscv.cpp ****     uint64 scause=r_scause();
 683              		.loc 1 132 5
 684              	.LBB139:
 685              	.LBB140:
  67:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 686              		.loc 2 67 5
  68:src/../h/riscv.hpp ****     return scause;
 687              		.loc 2 68 5
  68:src/../h/riscv.hpp ****     return scause;
 688              		.loc 2 68 68 is_stmt 0
 689              	#APP
 690              	# 68 "src/../h/riscv.hpp" 1
 691              		csrr a5, scause
 692              	# 0 "" 2
 693              	#NO_APP
 694 0298 2334F4FE 		sd	a5,-24(s0)
  69:src/../h/riscv.hpp **** }
 695              		.loc 2 69 5 is_stmt 1
  69:src/../h/riscv.hpp **** }
 696              		.loc 2 69 12 is_stmt 0
 697 029c 033784FE 		ld	a4,-24(s0)
 698              	.LVL44:
 699              	.LBE140:
 700              	.LBE139:
 133:src/riscv.cpp ****     if(scause==0x8000000000000009UL){
 701              		.loc 1 133 5 is_stmt 1
 702 02a0 9307F0FF 		li	a5,-1
 703 02a4 9397F703 		slli	a5,a5,63
 704 02a8 93879700 		addi	a5,a5,9
 705 02ac 630AF700 		beq	a4,a5,.L30
 706              	.LVL45:
 707              	.L27:
 134:src/riscv.cpp ****         //prekid konzola
 135:src/riscv.cpp ****         console_handler();
GAS LISTING /tmp/ccM8EJa9.s 			page 20


 136:src/riscv.cpp ****     }
 137:src/riscv.cpp **** }
 708              		.loc 1 137 1 is_stmt 0
 709 02b0 83308101 		ld	ra,24(sp)
 710              		.cfi_remember_state
 711              		.cfi_restore 1
 712 02b4 03340101 		ld	s0,16(sp)
 713              		.cfi_restore 8
 714              		.cfi_def_cfa 2, 32
 715 02b8 13010102 		addi	sp,sp,32
 716              		.cfi_def_cfa_offset 0
 717 02bc 67800000 		jr	ra
 718              	.LVL46:
 719              	.L30:
 720              		.cfi_restore_state
 135:src/riscv.cpp ****     }
 721              		.loc 1 135 9 is_stmt 1
 135:src/riscv.cpp ****     }
 722              		.loc 1 135 24 is_stmt 0
 723 02c0 97000000 		call	console_handler@plt
 723      E7800000 
 724              	.LVL47:
 725              		.loc 1 137 1
 726 02c8 6FF09FFE 		j	.L27
 727              		.cfi_endproc
 728              	.LFE21:
 730              		.align	2
 731              		.globl	_ZN5Riscv10popSppSpieEv
 733              	_ZN5Riscv10popSppSpieEv:
 734              	.LFB22:
 138:src/riscv.cpp **** 
 139:src/riscv.cpp **** 
 140:src/riscv.cpp **** 
 141:src/riscv.cpp **** void Riscv::popSppSpie() {
 735              		.loc 1 141 26 is_stmt 1
 736              		.cfi_startproc
 737 02cc 130101FF 		addi	sp,sp,-16
 738              		.cfi_def_cfa_offset 16
 739 02d0 23348100 		sd	s0,8(sp)
 740              		.cfi_offset 8, -8
 741 02d4 13040101 		addi	s0,sp,16
 742              		.cfi_def_cfa 8, 0
 142:src/riscv.cpp **** 
 143:src/riscv.cpp ****     Riscv::ms_sstatus(SSTATUS_SPIE);
 743              		.loc 1 143 5
 744              	.LVL48:
 745              	.LBB141:
 746              	.LBB142:
 118:src/../h/riscv.hpp **** }
 747              		.loc 2 118 5
 118:src/../h/riscv.hpp **** }
 748              		.loc 2 118 63 is_stmt 0
 749 02d8 93070002 		li	a5,32
 750              	#APP
 751              	# 118 "src/../h/riscv.hpp" 1
 752              		csrs sstatus, a5
 753              	# 0 "" 2
GAS LISTING /tmp/ccM8EJa9.s 			page 21


 754              	.LVL49:
 755              	#NO_APP
 756              	.LBE142:
 757              	.LBE141:
 144:src/riscv.cpp ****     //Riscv::mc_sstatus(SSTATUS_SPIE);
 145:src/riscv.cpp ****     if(TCB::newThrUserMode){
 758              		.loc 1 145 5 is_stmt 1
 759 02e0 97070000 		la	a5,_ZN3TCB14newThrUserModeE
 759      83B70700 
 760 02e8 83C70700 		lbu	a5,0(a5)
 761 02ec 63800702 		beqz	a5,.L32
 146:src/riscv.cpp ****         Riscv::mc_sstatus(SSTATUS_SPP);
 762              		.loc 1 146 9
 763              	.LVL50:
 764              	.LBB143:
 765              	.LBB144:
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 131:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %[mask]"::[mask]"r"(mask));
 766              		.loc 2 131 5
 767              		.loc 2 131 63 is_stmt 0
 768 02f0 93070010 		li	a5,256
 769              	#APP
 770              	# 131 "src/../h/riscv.hpp" 1
 132              	}
 771              		csrc sstatus, a5
 772              	# 0 "" 2
 773              	.LVL51:
 774              	#NO_APP
 775              	.L33:
 776              	.LBE144:
 777              	.LBE143:
 147:src/riscv.cpp ****     }
 148:src/riscv.cpp ****     else{
 149:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 150:src/riscv.cpp ****     }
 151:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 778              		.loc 1 151 5 is_stmt 1
 779              		.loc 1 151 38 is_stmt 0
 780              	#APP
 781              	# 151 "src/riscv.cpp" 1
 152              	    __asm__ volatile("sret");
 782              		csrw sepc, ra
 783              	# 0 "" 2
 784              		.loc 1 152 5 is_stmt 1
 785              		.loc 1 152 29 is_stmt 0
 786              	# 152 "src/riscv.cpp" 1
 153              	}...
 787              		sret
 788              	# 0 "" 2
 789              		.loc 1 153 1
 790              	#NO_APP
 791 0300 03348100 		ld	s0,8(sp)
 792              		.cfi_remember_state
 793              		.cfi_restore 8
 794              		.cfi_def_cfa 2, 16
 795 0304 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccM8EJa9.s 			page 22


 796              		.cfi_def_cfa_offset 0
 797 0308 67800000 		jr	ra
 798              	.L32:
 799              		.cfi_restore_state
 149:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 800              		.loc 1 149 9 is_stmt 1
 801              	.LVL52:
 802              	.LBB145:
 803              	.LBB146:
 118:src/../h/riscv.hpp **** }
 804              		.loc 2 118 5
 118:src/../h/riscv.hpp **** }
 805              		.loc 2 118 63 is_stmt 0
 806 030c 93070010 		li	a5,256
 807              	#APP
 808              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 809              		csrs sstatus, a5
 810              	# 0 "" 2
 811              		.loc 2 119 1
 812              	#NO_APP
 813 0314 6FF05FFE 		j	.L33
 814              	.LBE146:
 815              	.LBE145:
 816              		.cfi_endproc
 817              	.LFE22:
 819              	.Letext0:
 820              		.file 4 "src/../h/../lib/hw.h"
 821              		.file 5 "src/../h/MemoryAllocator.hpp"
 822              		.file 6 "src/../h/syscall_c.hpp"
 823              		.file 7 "src/../lib/console.h"
 824              		.file 8 "src/../test/printing.hpp"
GAS LISTING /tmp/ccM8EJa9.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccM8EJa9.s:9      .text:0000000000000000 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccM8EJa9.s:13     .text:0000000000000000 .L0 
     /tmp/ccM8EJa9.s:14     .text:0000000000000000 .L0 
     /tmp/ccM8EJa9.s:15     .text:0000000000000004 .L0 
     /tmp/ccM8EJa9.s:20     .text:0000000000000014 .L0 
     /tmp/ccM8EJa9.s:21     .text:0000000000000014 .L0 
     /tmp/ccM8EJa9.s:22     .text:0000000000000014 .L0 
     /tmp/ccM8EJa9.s:23     .text:0000000000000014 .L0 
     /tmp/ccM8EJa9.s:25     .text:0000000000000018 .L0 
     /tmp/ccM8EJa9.s:30     .text:0000000000000018 .L0 
     /tmp/ccM8EJa9.s:31     .text:0000000000000018 .L0 
     /tmp/ccM8EJa9.s:32     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:68     .text:0000000000000018 .L0 
     /tmp/ccM8EJa9.s:40     .text:0000000000000020 .L0 
     /tmp/ccM8EJa9.s:41     .text:0000000000000020 .L0 
     /tmp/ccM8EJa9.s:46     .text:0000000000000024 .L0 
     /tmp/ccM8EJa9.s:47     .text:0000000000000024 .L0 
       src/riscv.cpp:19     .text:0000000000000024 .L0 
     /tmp/ccM8EJa9.s:55     .text:000000000000002c .L0 
     /tmp/ccM8EJa9.s:56     .text:000000000000002c .L0 
       src/riscv.cpp:21     .text:000000000000002c .L0 
     /tmp/ccM8EJa9.s:64     .text:0000000000000034 .L0 
     /tmp/ccM8EJa9.s:65     .text:0000000000000034 .L0 
       src/riscv.cpp:23     .text:0000000000000034 .L0 
     /tmp/ccM8EJa9.s:73     .text:000000000000003c .L0 
     /tmp/ccM8EJa9.s:74     .text:000000000000003c .L0 
       src/riscv.cpp:25     .text:000000000000003c .L0 
     /tmp/ccM8EJa9.s:82     .text:0000000000000044 .L0 
     /tmp/ccM8EJa9.s:83     .text:0000000000000044 .L0 
       src/riscv.cpp:27     .text:0000000000000044 .L0 
     /tmp/ccM8EJa9.s:92     .text:000000000000004c .L0 
     /tmp/ccM8EJa9.s:93     .text:000000000000004c .L0 
     /tmp/ccM8EJa9.s:95     .text:0000000000000050 .L0 
     /tmp/ccM8EJa9.s:101    .text:0000000000000058 .L0 
     /tmp/ccM8EJa9.s:102    .text:0000000000000058 .L0 
     /tmp/ccM8EJa9.s:103    .text:0000000000000058 .L0 
  src/../h/riscv.hpp:77     .text:0000000000000058 .L0 
     /tmp/ccM8EJa9.s:111    .text:0000000000000060 .L0 
     /tmp/ccM8EJa9.s:112    .text:0000000000000060 .L0 
     /tmp/ccM8EJa9.s:116    .text:0000000000000064 .L0 
     /tmp/ccM8EJa9.s:121    .text:0000000000000068 .L0 
     /tmp/ccM8EJa9.s:122    .text:0000000000000068 .L0 
     /tmp/ccM8EJa9.s:123    .text:0000000000000068 .L0 
  src/../h/riscv.hpp:123    .text:0000000000000068 .L0 
     /tmp/ccM8EJa9.s:131    .text:0000000000000070 .L0 
     /tmp/ccM8EJa9.s:132    .text:0000000000000070 .L0 
     /tmp/ccM8EJa9.s:138    .text:0000000000000074 .L0 
     /tmp/ccM8EJa9.s:139    .text:0000000000000074 .L0 
     /tmp/ccM8EJa9.s:141    .text:0000000000000078 .L0 
     /tmp/ccM8EJa9.s:151    .text:0000000000000080 .L0 
     /tmp/ccM8EJa9.s:152    .text:0000000000000080 .L0 
     /tmp/ccM8EJa9.s:154    .text:0000000000000084 .L0 
     /tmp/ccM8EJa9.s:166    .text:000000000000008c .L0 
     /tmp/ccM8EJa9.s:167    .text:000000000000008c .L0 
     /tmp/ccM8EJa9.s:169    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccM8EJa9.s 			page 24


     /tmp/ccM8EJa9.s:183    .text:0000000000000098 .L0 
     /tmp/ccM8EJa9.s:184    .text:0000000000000098 .L0 
     /tmp/ccM8EJa9.s:186    .text:000000000000009c .L0 
     /tmp/ccM8EJa9.s:202    .text:00000000000000a4 .L0 
     /tmp/ccM8EJa9.s:203    .text:00000000000000a4 .L0 
     /tmp/ccM8EJa9.s:205    .text:00000000000000a8 .L0 
     /tmp/ccM8EJa9.s:223    .text:00000000000000b0 .L0 
     /tmp/ccM8EJa9.s:224    .text:00000000000000b0 .L0 
     /tmp/ccM8EJa9.s:226    .text:00000000000000b4 .L0 
     /tmp/ccM8EJa9.s:229    .text:00000000000000bc .L0 
     /tmp/ccM8EJa9.s:230    .text:00000000000000bc .L0 
     /tmp/ccM8EJa9.s:232    .text:00000000000000c0 .L0 
     /tmp/ccM8EJa9.s:235    .text:00000000000000c8 .L0 
     /tmp/ccM8EJa9.s:236    .text:00000000000000c8 .L0 
     /tmp/ccM8EJa9.s:251    .text:00000000000000dc .L0 
     /tmp/ccM8EJa9.s:252    .text:00000000000000dc .L0 
     /tmp/ccM8EJa9.s:257    .text:00000000000000e8 .L0 
       src/riscv.cpp:37     .text:00000000000000e8 .L0 
     /tmp/ccM8EJa9.s:270    .text:00000000000000ec .L0 
     /tmp/ccM8EJa9.s:271    .text:00000000000000ec .L0 
  src/../h/riscv.hpp:127    .text:00000000000000ec .L0 
     /tmp/ccM8EJa9.s:283    .text:00000000000000f0 .L0 
     /tmp/ccM8EJa9.s:284    .text:00000000000000f0 .L0 
  src/../h/riscv.hpp:81     .text:00000000000000f0 .L0 
     /tmp/ccM8EJa9.s:297    .text:00000000000000f4 .L0 
     /tmp/ccM8EJa9.s:298    .text:00000000000000f8 .L0 
     /tmp/ccM8EJa9.s:299    .text:00000000000000f8 .L0 
     /tmp/ccM8EJa9.s:301    .text:00000000000000fc .L0 
     /tmp/ccM8EJa9.s:302    .text:00000000000000fc .L0 
     /tmp/ccM8EJa9.s:304    .text:0000000000000100 .L0 
     /tmp/ccM8EJa9.s:306    .text:0000000000000104 .L0 
     /tmp/ccM8EJa9.s:308    .text:0000000000000108 .L0 
     /tmp/ccM8EJa9.s:312    .text:000000000000010c .L0 
     /tmp/ccM8EJa9.s:319    .text:000000000000010c .L0 
     /tmp/ccM8EJa9.s:320    .text:000000000000010c .L0 
     /tmp/ccM8EJa9.s:325    .text:0000000000000118 .L0 
       src/riscv.cpp:42     .text:0000000000000118 .L0 
     /tmp/ccM8EJa9.s:338    .text:0000000000000120 .L0 
     /tmp/ccM8EJa9.s:339    .text:0000000000000120 .L0 
     /tmp/ccM8EJa9.s:347    .text:0000000000000134 .L0 
     /tmp/ccM8EJa9.s:350    .text:0000000000000138 .L0 
     /tmp/ccM8EJa9.s:351    .text:0000000000000138 .L0 
     /tmp/ccM8EJa9.s:354    .text:000000000000013c .L0 
     /tmp/ccM8EJa9.s:355    .text:000000000000013c .L0 
     /tmp/ccM8EJa9.s:357    .text:0000000000000140 .L0 
     /tmp/ccM8EJa9.s:358    .text:0000000000000140 .L0 
     /tmp/ccM8EJa9.s:369    .text:000000000000014c .L0 
     /tmp/ccM8EJa9.s:370    .text:000000000000014c .L0 
     /tmp/ccM8EJa9.s:383    .text:0000000000000158 .L0 
     /tmp/ccM8EJa9.s:384    .text:0000000000000158 .L0 
     /tmp/ccM8EJa9.s:391    .text:0000000000000164 .L0 
     /tmp/ccM8EJa9.s:392    .text:0000000000000164 .L0 
     /tmp/ccM8EJa9.s:397    .text:0000000000000168 .L0 
     /tmp/ccM8EJa9.s:399    .text:000000000000016c .L0 
     /tmp/ccM8EJa9.s:400    .text:000000000000016c .L0 
     /tmp/ccM8EJa9.s:412    .text:0000000000000178 .L0 
     /tmp/ccM8EJa9.s:413    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccM8EJa9.s 			page 25


     /tmp/ccM8EJa9.s:414    .text:0000000000000178 .L0 
     /tmp/ccM8EJa9.s:420    .text:0000000000000180 .L0 
     /tmp/ccM8EJa9.s:421    .text:0000000000000180 .L0 
     /tmp/ccM8EJa9.s:428    .text:000000000000018c .L0 
     /tmp/ccM8EJa9.s:429    .text:000000000000018c .L0 
     /tmp/ccM8EJa9.s:432    .text:0000000000000198 .L0 
     /tmp/ccM8EJa9.s:433    .text:0000000000000198 .L0 
     /tmp/ccM8EJa9.s:441    .text:00000000000001a4 .L0 
     /tmp/ccM8EJa9.s:442    .text:00000000000001a4 .L0 
     /tmp/ccM8EJa9.s:445    .text:00000000000001ac .L0 
       src/riscv.cpp:88     .text:00000000000001ac .L0 
     /tmp/ccM8EJa9.s:463    .text:00000000000001b4 .L0 
     /tmp/ccM8EJa9.s:464    .text:00000000000001b4 .L0 
     /tmp/ccM8EJa9.s:472    .text:00000000000001c8 .L0 
     /tmp/ccM8EJa9.s:473    .text:00000000000001cc .L0 
     /tmp/ccM8EJa9.s:479    .text:00000000000001cc _ZN5Riscv14timerInterruptEv
     /tmp/ccM8EJa9.s:482    .text:00000000000001cc .L0 
     /tmp/ccM8EJa9.s:483    .text:00000000000001cc .L0 
     /tmp/ccM8EJa9.s:484    .text:00000000000001d0 .L0 
     /tmp/ccM8EJa9.s:489    .text:00000000000001e0 .L0 
     /tmp/ccM8EJa9.s:490    .text:00000000000001e0 .L0 
     /tmp/ccM8EJa9.s:491    .text:00000000000001e0 .L0 
     /tmp/ccM8EJa9.s:492    .text:00000000000001e0 .L0 
     /tmp/ccM8EJa9.s:494    .text:00000000000001e4 .L0 
     /tmp/ccM8EJa9.s:498    .text:00000000000001e4 .L0 
     /tmp/ccM8EJa9.s:499    .text:00000000000001e4 .L0 
     /tmp/ccM8EJa9.s:500    .text:00000000000001e4 .L0 
  src/../h/riscv.hpp:68     .text:00000000000001e4 .L0 
     /tmp/ccM8EJa9.s:508    .text:00000000000001ec .L0 
     /tmp/ccM8EJa9.s:509    .text:00000000000001ec .L0 
     /tmp/ccM8EJa9.s:515    .text:00000000000001f0 .L0 
     /tmp/ccM8EJa9.s:523    .text:0000000000000200 .L0 
     /tmp/ccM8EJa9.s:524    .text:0000000000000204 .L0 
     /tmp/ccM8EJa9.s:525    .text:0000000000000204 .L0 
     /tmp/ccM8EJa9.s:527    .text:0000000000000208 .L0 
     /tmp/ccM8EJa9.s:528    .text:0000000000000208 .L0 
     /tmp/ccM8EJa9.s:530    .text:000000000000020c .L0 
     /tmp/ccM8EJa9.s:532    .text:0000000000000210 .L0 
     /tmp/ccM8EJa9.s:534    .text:0000000000000214 .L0 
     /tmp/ccM8EJa9.s:538    .text:0000000000000218 .L0 
     /tmp/ccM8EJa9.s:542    .text:0000000000000218 .L0 
     /tmp/ccM8EJa9.s:543    .text:0000000000000218 .L0 
     /tmp/ccM8EJa9.s:550    .text:000000000000022c .L0 
     /tmp/ccM8EJa9.s:551    .text:000000000000022c .L0 
     /tmp/ccM8EJa9.s:557    .text:0000000000000238 .L0 
     /tmp/ccM8EJa9.s:558    .text:0000000000000238 .L0 
     /tmp/ccM8EJa9.s:563    .text:000000000000023c .L0 
     /tmp/ccM8EJa9.s:570    .text:0000000000000240 .L0 
     /tmp/ccM8EJa9.s:571    .text:0000000000000240 .L0 
     /tmp/ccM8EJa9.s:572    .text:0000000000000240 .L0 
     /tmp/ccM8EJa9.s:584    .text:0000000000000248 .L0 
     /tmp/ccM8EJa9.s:593    .text:000000000000024c .L0 
     /tmp/ccM8EJa9.s:594    .text:000000000000024c .L0 
     /tmp/ccM8EJa9.s:595    .text:000000000000024c .L0 
  src/../h/riscv.hpp:77     .text:000000000000024c .L0 
     /tmp/ccM8EJa9.s:603    .text:0000000000000254 .L0 
     /tmp/ccM8EJa9.s:604    .text:0000000000000254 .L0 
GAS LISTING /tmp/ccM8EJa9.s 			page 26


     /tmp/ccM8EJa9.s:611    .text:0000000000000258 .L0 
     /tmp/ccM8EJa9.s:612    .text:0000000000000258 .L0 
     /tmp/ccM8EJa9.s:613    .text:0000000000000258 .L0 
  src/../h/riscv.hpp:123    .text:0000000000000258 .L0 
     /tmp/ccM8EJa9.s:621    .text:0000000000000260 .L0 
     /tmp/ccM8EJa9.s:622    .text:0000000000000260 .L0 
     /tmp/ccM8EJa9.s:627    .text:0000000000000264 .L0 
     /tmp/ccM8EJa9.s:628    .text:0000000000000264 .L0 
     /tmp/ccM8EJa9.s:631    .text:0000000000000270 .L0 
     /tmp/ccM8EJa9.s:632    .text:0000000000000270 .L0 
     /tmp/ccM8EJa9.s:637    .text:0000000000000278 .L0 
     /tmp/ccM8EJa9.s:638    .text:0000000000000278 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000278 .L0 
     /tmp/ccM8EJa9.s:650    .text:000000000000027c .L0 
     /tmp/ccM8EJa9.s:651    .text:000000000000027c .L0 
  src/../h/riscv.hpp:81     .text:000000000000027c .L0 
     /tmp/ccM8EJa9.s:658    .text:0000000000000280 .L0 
     /tmp/ccM8EJa9.s:665    .text:0000000000000284 .L0 
     /tmp/ccM8EJa9.s:671    .text:0000000000000284 _ZN5Riscv17hardwareInterruptEv
     /tmp/ccM8EJa9.s:674    .text:0000000000000284 .L0 
     /tmp/ccM8EJa9.s:675    .text:0000000000000284 .L0 
     /tmp/ccM8EJa9.s:676    .text:0000000000000288 .L0 
     /tmp/ccM8EJa9.s:679    .text:0000000000000290 .L0 
     /tmp/ccM8EJa9.s:680    .text:0000000000000290 .L0 
     /tmp/ccM8EJa9.s:682    .text:0000000000000294 .L0 
     /tmp/ccM8EJa9.s:686    .text:0000000000000294 .L0 
     /tmp/ccM8EJa9.s:687    .text:0000000000000294 .L0 
     /tmp/ccM8EJa9.s:688    .text:0000000000000294 .L0 
  src/../h/riscv.hpp:68     .text:0000000000000294 .L0 
     /tmp/ccM8EJa9.s:696    .text:000000000000029c .L0 
     /tmp/ccM8EJa9.s:697    .text:000000000000029c .L0 
     /tmp/ccM8EJa9.s:702    .text:00000000000002a0 .L0 
     /tmp/ccM8EJa9.s:709    .text:00000000000002b0 .L0 
     /tmp/ccM8EJa9.s:710    .text:00000000000002b4 .L0 
     /tmp/ccM8EJa9.s:711    .text:00000000000002b4 .L0 
     /tmp/ccM8EJa9.s:713    .text:00000000000002b8 .L0 
     /tmp/ccM8EJa9.s:714    .text:00000000000002b8 .L0 
     /tmp/ccM8EJa9.s:716    .text:00000000000002bc .L0 
     /tmp/ccM8EJa9.s:720    .text:00000000000002c0 .L0 
     /tmp/ccM8EJa9.s:722    .text:00000000000002c0 .L0 
     /tmp/ccM8EJa9.s:723    .text:00000000000002c0 .L0 
     /tmp/ccM8EJa9.s:726    .text:00000000000002c8 .L0 
     /tmp/ccM8EJa9.s:727    .text:00000000000002cc .L0 
     /tmp/ccM8EJa9.s:733    .text:00000000000002cc _ZN5Riscv10popSppSpieEv
     /tmp/ccM8EJa9.s:736    .text:00000000000002cc .L0 
     /tmp/ccM8EJa9.s:737    .text:00000000000002cc .L0 
     /tmp/ccM8EJa9.s:738    .text:00000000000002d0 .L0 
     /tmp/ccM8EJa9.s:740    .text:00000000000002d4 .L0 
     /tmp/ccM8EJa9.s:742    .text:00000000000002d8 .L0 
     /tmp/ccM8EJa9.s:747    .text:00000000000002d8 .L0 
     /tmp/ccM8EJa9.s:748    .text:00000000000002d8 .L0 
     /tmp/ccM8EJa9.s:749    .text:00000000000002d8 .L0 
     /tmp/ccM8EJa9.s:759    .text:00000000000002e0 .L0 
     /tmp/ccM8EJa9.s:766    .text:00000000000002f0 .L0 
     /tmp/ccM8EJa9.s:767    .text:00000000000002f0 .L0 
     /tmp/ccM8EJa9.s:768    .text:00000000000002f0 .L0 
     /tmp/ccM8EJa9.s:779    .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccM8EJa9.s 			page 27


       src/riscv.cpp:151    .text:00000000000002f8 .L0 
     /tmp/ccM8EJa9.s:785    .text:00000000000002fc .L0 
       src/riscv.cpp:152    .text:00000000000002fc .L0 
     /tmp/ccM8EJa9.s:791    .text:0000000000000300 .L0 
     /tmp/ccM8EJa9.s:792    .text:0000000000000304 .L0 
     /tmp/ccM8EJa9.s:793    .text:0000000000000304 .L0 
     /tmp/ccM8EJa9.s:794    .text:0000000000000304 .L0 
     /tmp/ccM8EJa9.s:796    .text:0000000000000308 .L0 
     /tmp/ccM8EJa9.s:799    .text:000000000000030c .L0 
     /tmp/ccM8EJa9.s:804    .text:000000000000030c .L0 
     /tmp/ccM8EJa9.s:805    .text:000000000000030c .L0 
     /tmp/ccM8EJa9.s:806    .text:000000000000030c .L0 
     /tmp/ccM8EJa9.s:813    .text:0000000000000314 .L0 
     /tmp/ccM8EJa9.s:816    .text:0000000000000318 .L0 
     /tmp/ccM8EJa9.s:825    .text:0000000000000318 .L0 
     /tmp/ccM8EJa9.s:384    .text:0000000000000158 .L0 
     /tmp/ccM8EJa9.s:429    .text:000000000000018c .L0 
     /tmp/ccM8EJa9.s:543    .text:0000000000000218 .L0 
     /tmp/ccM8EJa9.s:551    .text:000000000000022c .L0 
     /tmp/ccM8EJa9.s:628    .text:0000000000000264 .L0 
     /tmp/ccM8EJa9.s:759    .text:00000000000002e0 .L0 
     /tmp/ccM8EJa9.s:454    .text:00000000000001b4 .L2
     /tmp/ccM8EJa9.s:243    .text:00000000000000dc .L14
     /tmp/ccM8EJa9.s:311    .text:000000000000010c .L15
     /tmp/ccM8EJa9.s:334    .text:0000000000000120 .L16
     /tmp/ccM8EJa9.s:378    .text:0000000000000158 .L17
     /tmp/ccM8EJa9.s:425    .text:000000000000018c .L18
     /tmp/ccM8EJa9.s:437    .text:00000000000001a4 .L19
     /tmp/ccM8EJa9.s:264    .text:00000000000000ec .L4
     /tmp/ccM8EJa9.s:366    .text:000000000000014c .L20
     /tmp/ccM8EJa9.s:407    .text:0000000000000178 .L9
     /tmp/ccM8EJa9.s:291    .text:00000000000000f4 .L1
     /tmp/ccM8EJa9.s:537    .text:0000000000000218 .L25
     /tmp/ccM8EJa9.s:585    .text:000000000000024c .L26
     /tmp/ccM8EJa9.s:520    .text:0000000000000200 .L21
     /tmp/ccM8EJa9.s:564    .text:0000000000000240 .L23
     /tmp/ccM8EJa9.s:719    .text:00000000000002c0 .L30
     /tmp/ccM8EJa9.s:707    .text:00000000000002b0 .L27
     /tmp/ccM8EJa9.s:798    .text:000000000000030c .L32
     /tmp/ccM8EJa9.s:775    .text:00000000000002f8 .L33
     /tmp/ccM8EJa9.s:2051   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccM8EJa9.s:3303   .debug_str:0000000000000564 .LASF108
     /tmp/ccM8EJa9.s:3261   .debug_str:0000000000000434 .LASF109
     /tmp/ccM8EJa9.s:3175   .debug_str:00000000000001ee .LASF110
     /tmp/ccM8EJa9.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccM8EJa9.s:819    .text:0000000000000318 .Letext0
     /tmp/ccM8EJa9.s:3109   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccM8EJa9.s:3239   .debug_str:00000000000003bd .LASF0
     /tmp/ccM8EJa9.s:3255   .debug_str:00000000000003ff .LASF1
     /tmp/ccM8EJa9.s:3225   .debug_str:000000000000036d .LASF2
     /tmp/ccM8EJa9.s:3203   .debug_str:00000000000002cd .LASF4
     /tmp/ccM8EJa9.s:3285   .debug_str:00000000000004e8 .LASF3
     /tmp/ccM8EJa9.s:3133   .debug_str:00000000000000ad .LASF5
     /tmp/ccM8EJa9.s:3259   .debug_str:0000000000000421 .LASF6
     /tmp/ccM8EJa9.s:3237   .debug_str:00000000000003aa .LASF7
     /tmp/ccM8EJa9.s:3311   .debug_str:0000000000000672 .LASF8
     /tmp/ccM8EJa9.s:3189   .debug_str:0000000000000255 .LASF9
GAS LISTING /tmp/ccM8EJa9.s 			page 28


     /tmp/ccM8EJa9.s:3267   .debug_str:000000000000045c .LASF10
     /tmp/ccM8EJa9.s:3305   .debug_str:0000000000000628 .LASF11
     /tmp/ccM8EJa9.s:3137   .debug_str:00000000000000c0 .LASF12
     /tmp/ccM8EJa9.s:3113   .debug_str:0000000000000008 .LASF13
     /tmp/ccM8EJa9.s:3145   .debug_str:000000000000010a .LASF14
     /tmp/ccM8EJa9.s:3281   .debug_str:00000000000004ba .LASF15
     /tmp/ccM8EJa9.s:3153   .debug_str:0000000000000139 .LASF16
     /tmp/ccM8EJa9.s:3251   .debug_str:00000000000003ee .LASF79
     /tmp/ccM8EJa9.s:3211   .debug_str:0000000000000308 .LASF20
     /tmp/ccM8EJa9.s:3149   .debug_str:0000000000000120 .LASF17
     /tmp/ccM8EJa9.s:3213   .debug_str:0000000000000317 .LASF18
     /tmp/ccM8EJa9.s:3135   .debug_str:00000000000000b4 .LASF19
     /tmp/ccM8EJa9.s:3147   .debug_str:0000000000000116 .LASF21
     /tmp/ccM8EJa9.s:3291   .debug_str:0000000000000510 .LASF22
     /tmp/ccM8EJa9.s:3249   .debug_str:00000000000003e5 .LASF23
     /tmp/ccM8EJa9.s:3207   .debug_str:00000000000002dd .LASF24
     /tmp/ccM8EJa9.s:3277   .debug_str:00000000000004a8 .LASF25
     /tmp/ccM8EJa9.s:3327   .debug_str:00000000000006dc .LASF27
     /tmp/ccM8EJa9.s:3193   .debug_str:0000000000000279 .LASF26
     /tmp/ccM8EJa9.s:3161   .debug_str:000000000000017a .LASF28
     /tmp/ccM8EJa9.s:3183   .debug_str:0000000000000230 .LASF29
     /tmp/ccM8EJa9.s:3215   .debug_str:0000000000000324 .LASF30
     /tmp/ccM8EJa9.s:3115   .debug_str:0000000000000018 .LASF31
     /tmp/ccM8EJa9.s:3167   .debug_str:00000000000001ad .LASF33
     /tmp/ccM8EJa9.s:3165   .debug_str:00000000000001a4 .LASF35
     /tmp/ccM8EJa9.s:3163   .debug_str:000000000000018f .LASF37
     /tmp/ccM8EJa9.s:3287   .debug_str:00000000000004fa .LASF32
     /tmp/ccM8EJa9.s:3269   .debug_str:000000000000046b .LASF34
     /tmp/ccM8EJa9.s:3301   .debug_str:000000000000055d .LASF36
     /tmp/ccM8EJa9.s:3297   .debug_str:0000000000000538 .LASF38
     /tmp/ccM8EJa9.s:3179   .debug_str:000000000000021f .LASF39
     /tmp/ccM8EJa9.s:3155   .debug_str:000000000000014f .LASF40
     /tmp/ccM8EJa9.s:3111   .debug_str:0000000000000000 .LASF41
     /tmp/ccM8EJa9.s:3195   .debug_str:0000000000000282 .LASF42
     /tmp/ccM8EJa9.s:3131   .debug_str:00000000000000a5 .LASF43
     /tmp/ccM8EJa9.s:3139   .debug_str:00000000000000d0 .LASF44
     /tmp/ccM8EJa9.s:3331   .debug_str:00000000000006ff .LASF45
     /tmp/ccM8EJa9.s:3169   .debug_str:00000000000001c2 .LASF46
     /tmp/ccM8EJa9.s:3329   .debug_str:00000000000006f4 .LASF47
     /tmp/ccM8EJa9.s:3283   .debug_str:00000000000004d0 .LASF48
     /tmp/ccM8EJa9.s:3253   .debug_str:00000000000003f4 .LASF49
     /tmp/ccM8EJa9.s:3293   .debug_str:0000000000000519 .LASF50
     /tmp/ccM8EJa9.s:3143   .debug_str:0000000000000100 .LASF51
     /tmp/ccM8EJa9.s:3199   .debug_str:000000000000029b .LASF52
     /tmp/ccM8EJa9.s:3229   .debug_str:0000000000000387 .LASF53
     /tmp/ccM8EJa9.s:3191   .debug_str:0000000000000263 .LASF54
     /tmp/ccM8EJa9.s:3241   .debug_str:00000000000003ca .LASF55
     /tmp/ccM8EJa9.s:3321   .debug_str:00000000000006bf .LASF56
     /tmp/ccM8EJa9.s:3125   .debug_str:0000000000000063 .LASF57
     /tmp/ccM8EJa9.s:3177   .debug_str:000000000000020c .LASF58
     /tmp/ccM8EJa9.s:3185   .debug_str:0000000000000238 .LASF59
     /tmp/ccM8EJa9.s:3299   .debug_str:000000000000054b .LASF60
     /tmp/ccM8EJa9.s:3121   .debug_str:000000000000004b .LASF61
     /tmp/ccM8EJa9.s:3339   .debug_str:0000000000000740 .LASF62
     /tmp/ccM8EJa9.s:3289   .debug_str:0000000000000501 .LASF63
     /tmp/ccM8EJa9.s:3141   .debug_str:00000000000000e4 .LASF64
     /tmp/ccM8EJa9.s:3313   .debug_str:0000000000000682 .LASF65
GAS LISTING /tmp/ccM8EJa9.s 			page 29


     /tmp/ccM8EJa9.s:3209   .debug_str:00000000000002e6 .LASF67
     /tmp/ccM8EJa9.s:3265   .debug_str:000000000000044d .LASF66
     /tmp/ccM8EJa9.s:3201   .debug_str:00000000000002b1 .LASF68
     /tmp/ccM8EJa9.s:3123   .debug_str:0000000000000051 .LASF69
     /tmp/ccM8EJa9.s:3307   .debug_str:0000000000000637 .LASF70
     /tmp/ccM8EJa9.s:3217   .debug_str:0000000000000338 .LASF71
     /tmp/ccM8EJa9.s:3129   .debug_str:000000000000008c .LASF73
     /tmp/ccM8EJa9.s:3227   .debug_str:000000000000037b .LASF83
     /tmp/ccM8EJa9.s:3333   .debug_str:0000000000000707 .LASF85
     /tmp/ccM8EJa9.s:3263   .debug_str:0000000000000442 .LASF72
     /tmp/ccM8EJa9.s:3187   .debug_str:000000000000023e .LASF74
     /tmp/ccM8EJa9.s:3171   .debug_str:00000000000001d6 .LASF75
     /tmp/ccM8EJa9.s:3243   .debug_str:00000000000003d1 .LASF77
     /tmp/ccM8EJa9.s:3127   .debug_str:000000000000006a .LASF76
     /tmp/ccM8EJa9.s:3151   .debug_str:000000000000012c .LASF78
     /tmp/ccM8EJa9.s:3219   .debug_str:0000000000000345 .LASF80
     /tmp/ccM8EJa9.s:3157   .debug_str:0000000000000163 .LASF111
     /tmp/ccM8EJa9.s:3273   .debug_str:0000000000000486 .LASF81
     /tmp/ccM8EJa9.s:3233   .debug_str:000000000000039b .LASF82
     /tmp/ccM8EJa9.s:3245   .debug_str:00000000000003da .LASF84
     /tmp/ccM8EJa9.s:3337   .debug_str:0000000000000723 .LASF86
     /tmp/ccM8EJa9.s:3325   .debug_str:00000000000006d7 .LASF87
     /tmp/ccM8EJa9.s:3275   .debug_str:000000000000048b .LASF88
     /tmp/ccM8EJa9.s:3223   .debug_str:0000000000000362 .LASF89
     /tmp/ccM8EJa9.s:3119   .debug_str:0000000000000028 .LASF90
     /tmp/ccM8EJa9.s:3309   .debug_str:0000000000000656 .LASF91
     /tmp/ccM8EJa9.s:3231   .debug_str:0000000000000391 .LASF112
     /tmp/ccM8EJa9.s:3315   .debug_str:0000000000000697 .LASF113
     /tmp/ccM8EJa9.s:3221   .debug_str:0000000000000355 .LASF114
     /tmp/ccM8EJa9.s:734    .text:00000000000002cc .LFB22
     /tmp/ccM8EJa9.s:817    .text:0000000000000318 .LFE22
     /tmp/ccM8EJa9.s:745    .text:00000000000002d8 .LBB141
     /tmp/ccM8EJa9.s:757    .text:00000000000002e0 .LBE141
     /tmp/ccM8EJa9.s:2882   .debug_loc:0000000000000000 .LLST18
     /tmp/ccM8EJa9.s:764    .text:00000000000002f0 .LBB143
     /tmp/ccM8EJa9.s:777    .text:00000000000002f8 .LBE143
     /tmp/ccM8EJa9.s:2891   .debug_loc:0000000000000025 .LLST19
     /tmp/ccM8EJa9.s:802    .text:000000000000030c .LBB145
     /tmp/ccM8EJa9.s:815    .text:0000000000000318 .LBE145
     /tmp/ccM8EJa9.s:672    .text:0000000000000284 .LFB21
     /tmp/ccM8EJa9.s:728    .text:00000000000002cc .LFE21
     /tmp/ccM8EJa9.s:3117   .debug_str:0000000000000021 .LASF92
     /tmp/ccM8EJa9.s:2900   .debug_loc:000000000000004b .LLST17
     /tmp/ccM8EJa9.s:684    .text:0000000000000294 .LBB139
     /tmp/ccM8EJa9.s:700    .text:00000000000002a0 .LBE139
     /tmp/ccM8EJa9.s:724    .text:00000000000002c8 .LVL47
     /tmp/ccM8EJa9.s:480    .text:00000000000001cc .LFB20
     /tmp/ccM8EJa9.s:666    .text:0000000000000284 .LFE20
     /tmp/ccM8EJa9.s:2911   .debug_loc:0000000000000081 .LLST13
     /tmp/ccM8EJa9.s:589    .text:000000000000024c .LBB124
     /tmp/ccM8EJa9.s:661    .text:0000000000000284 .LBE124
     /tmp/ccM8EJa9.s:3247   .debug_str:00000000000003e0 .LASF93
     /tmp/ccM8EJa9.s:3271   .debug_str:000000000000047e .LASF94
     /tmp/ccM8EJa9.s:591    .text:000000000000024c .LBB125
     /tmp/ccM8EJa9.s:607    .text:0000000000000258 .LBE125
     /tmp/ccM8EJa9.s:609    .text:0000000000000258 .LBB127
     /tmp/ccM8EJa9.s:625    .text:0000000000000264 .LBE127
GAS LISTING /tmp/ccM8EJa9.s 			page 30


     /tmp/ccM8EJa9.s:635    .text:0000000000000278 .LBB129
     /tmp/ccM8EJa9.s:646    .text:000000000000027c .LBE129
     /tmp/ccM8EJa9.s:2922   .debug_loc:00000000000000b7 .LLST15
     /tmp/ccM8EJa9.s:648    .text:000000000000027c .LBB131
     /tmp/ccM8EJa9.s:660    .text:0000000000000284 .LBE131
     /tmp/ccM8EJa9.s:633    .text:0000000000000278 .LVL42
     /tmp/ccM8EJa9.s:496    .text:00000000000001e4 .LBB117
     /tmp/ccM8EJa9.s:512    .text:00000000000001f0 .LBE117
     /tmp/ccM8EJa9.s:554    .text:0000000000000238 .LBB122
     /tmp/ccM8EJa9.s:561    .text:000000000000023c .LBE122
     /tmp/ccM8EJa9.s:2929   .debug_loc:00000000000000da .LLST14
     /tmp/ccM8EJa9.s:568    .text:0000000000000240 .LBB133
     /tmp/ccM8EJa9.s:580    .text:0000000000000248 .LBE133
     /tmp/ccM8EJa9.s:2936   .debug_loc:00000000000000fd .LLST16
     /tmp/ccM8EJa9.s:10     .text:0000000000000000 .LFB19
     /tmp/ccM8EJa9.s:474    .text:00000000000001cc .LFE19
     /tmp/ccM8EJa9.s:2944   .debug_loc:0000000000000121 .LLST0
     /tmp/ccM8EJa9.s:3091   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccM8EJa9.s:2985   .debug_loc:00000000000001de .LLST1
     /tmp/ccM8EJa9.s:2996   .debug_loc:0000000000000214 .LLST2
     /tmp/ccM8EJa9.s:249    .text:00000000000000dc .LBB93
     /tmp/ccM8EJa9.s:265    .text:00000000000000ec .LBE93
     /tmp/ccM8EJa9.s:3007   .debug_loc:000000000000024a .LLST10
     /tmp/ccM8EJa9.s:255    .text:00000000000000e8 .LVL7
     /tmp/ccM8EJa9.s:317    .text:000000000000010c .LBB87
     /tmp/ccM8EJa9.s:331    .text:000000000000011c .LBE87
     /tmp/ccM8EJa9.s:3317   .debug_str:00000000000006b3 .LASF95
     /tmp/ccM8EJa9.s:3014   .debug_loc:000000000000026d .LLST9
     /tmp/ccM8EJa9.s:323    .text:0000000000000118 .LVL13
     /tmp/ccM8EJa9.s:336    .text:0000000000000120 .LBB80
     /tmp/ccM8EJa9.s:380    .text:0000000000000158 .LBE80
     /tmp/ccM8EJa9.s:3295   .debug_str:0000000000000531 .LASF96
     /tmp/ccM8EJa9.s:3021   .debug_loc:0000000000000290 .LLST7
     /tmp/ccM8EJa9.s:348    .text:0000000000000138 .LBB82
     /tmp/ccM8EJa9.s:367    .text:000000000000014c .LBE82
     /tmp/ccM8EJa9.s:3235   .debug_str:00000000000003a0 .LASF97
     /tmp/ccM8EJa9.s:3028   .debug_loc:00000000000002b3 .LLST8
     /tmp/ccM8EJa9.s:344    .text:0000000000000134 .LVL16
     /tmp/ccM8EJa9.s:439    .text:00000000000001a4 .LBB70
     /tmp/ccM8EJa9.s:451    .text:00000000000001b0 .LBE70
     /tmp/ccM8EJa9.s:3035   .debug_loc:00000000000002d6 .LLST3
     /tmp/ccM8EJa9.s:443    .text:00000000000001ac .LVL28
     /tmp/ccM8EJa9.s:99     .text:0000000000000058 .LBB60
     /tmp/ccM8EJa9.s:114    .text:0000000000000064 .LBE60
     /tmp/ccM8EJa9.s:119    .text:0000000000000068 .LBB62
     /tmp/ccM8EJa9.s:135    .text:0000000000000074 .LBE62
     /tmp/ccM8EJa9.s:387    .text:0000000000000164 .LBB73
     /tmp/ccM8EJa9.s:395    .text:0000000000000168 .LBE73
     /tmp/ccM8EJa9.s:3042   .debug_loc:00000000000002f9 .LLST4
     /tmp/ccM8EJa9.s:410    .text:0000000000000178 .LBB75
     /tmp/ccM8EJa9.s:418    .text:0000000000000180 .LBE75
     /tmp/ccM8EJa9.s:3049   .debug_loc:000000000000031c .LLST5
     /tmp/ccM8EJa9.s:3057   .debug_loc:0000000000000340 .LLST6
     /tmp/ccM8EJa9.s:268    .text:00000000000000ec .LBB100
     /tmp/ccM8EJa9.s:279    .text:00000000000000f0 .LBE100
     /tmp/ccM8EJa9.s:3064   .debug_loc:0000000000000363 .LLST11
     /tmp/ccM8EJa9.s:281    .text:00000000000000f0 .LBB102
GAS LISTING /tmp/ccM8EJa9.s 			page 31


     /tmp/ccM8EJa9.s:293    .text:00000000000000f4 .LBE102
     /tmp/ccM8EJa9.s:3071   .debug_loc:0000000000000386 .LLST12
     /tmp/ccM8EJa9.s:240    .text:00000000000000d8 .LVL4
     /tmp/ccM8EJa9.s:422    .text:0000000000000188 .LVL24
     /tmp/ccM8EJa9.s:434    .text:00000000000001a0 .LVL26
     /tmp/ccM8EJa9.s:27     .text:0000000000000018 .LBB56
     /tmp/ccM8EJa9.s:44     .text:0000000000000024 .LBE56
     /tmp/ccM8EJa9.s:469    .text:00000000000001c8 .LVL31
     /tmp/ccM8EJa9.s:3197   .debug_str:0000000000000296 .LASF98
     /tmp/ccM8EJa9.s:3323   .debug_str:00000000000006d2 .LASF100
     /tmp/ccM8EJa9.s:3173   .debug_str:00000000000001e9 .LASF99
     /tmp/ccM8EJa9.s:3205   .debug_str:00000000000002d4 .LASF101
     /tmp/ccM8EJa9.s:3335   .debug_str:000000000000071e .LASF102
     /tmp/ccM8EJa9.s:3159   .debug_str:000000000000016a .LASF103
     /tmp/ccM8EJa9.s:3319   .debug_str:00000000000006b8 .LASF104
     /tmp/ccM8EJa9.s:3279   .debug_str:00000000000004b3 .LASF105
     /tmp/ccM8EJa9.s:3257   .debug_str:0000000000000412 .LASF106
     /tmp/ccM8EJa9.s:3181   .debug_str:0000000000000227 .LASF107
     /tmp/ccM8EJa9.s:744    .text:00000000000002d8 .LVL48
     /tmp/ccM8EJa9.s:754    .text:00000000000002e0 .LVL49
     /tmp/ccM8EJa9.s:763    .text:00000000000002f0 .LVL50
     /tmp/ccM8EJa9.s:773    .text:00000000000002f8 .LVL51
     /tmp/ccM8EJa9.s:698    .text:00000000000002a0 .LVL44
     /tmp/ccM8EJa9.s:706    .text:00000000000002b0 .LVL45
     /tmp/ccM8EJa9.s:718    .text:00000000000002c0 .LVL46
     /tmp/ccM8EJa9.s:510    .text:00000000000001f0 .LVL32
     /tmp/ccM8EJa9.s:519    .text:0000000000000200 .LVL33
     /tmp/ccM8EJa9.s:536    .text:0000000000000218 .LVL34
     /tmp/ccM8EJa9.s:544    .text:0000000000000220 .LVL35
     /tmp/ccM8EJa9.s:643    .text:000000000000027c .LVL43
     /tmp/ccM8EJa9.s:553    .text:0000000000000238 .LVL36
     /tmp/ccM8EJa9.s:559    .text:000000000000023c .LVL37
     /tmp/ccM8EJa9.s:567    .text:0000000000000240 .LVL38
     /tmp/ccM8EJa9.s:577    .text:0000000000000248 .LVL39
     /tmp/ccM8EJa9.s:42     .text:0000000000000024 .LVL0
     /tmp/ccM8EJa9.s:237    .text:00000000000000cc .LVL3
     /tmp/ccM8EJa9.s:242    .text:00000000000000dc .LVL5
     /tmp/ccM8EJa9.s:253    .text:00000000000000e0 .LVL6
     /tmp/ccM8EJa9.s:310    .text:000000000000010c .LVL11
     /tmp/ccM8EJa9.s:321    .text:0000000000000110 .LVL12
     /tmp/ccM8EJa9.s:333    .text:0000000000000120 .LVL14
     /tmp/ccM8EJa9.s:340    .text:0000000000000124 .LVL15
     /tmp/ccM8EJa9.s:377    .text:0000000000000158 .LVL19
     /tmp/ccM8EJa9.s:424    .text:000000000000018c .LVL25
     /tmp/ccM8EJa9.s:436    .text:00000000000001a4 .LVL27
     /tmp/ccM8EJa9.s:453    .text:00000000000001b4 .LVL29
     /tmp/ccM8EJa9.s:467    .text:00000000000001c0 .LVL30
     /tmp/ccM8EJa9.s:117    .text:0000000000000068 .LVL1
     /tmp/ccM8EJa9.s:289    .text:00000000000000f4 .LVL10
     /tmp/ccM8EJa9.s:133    .text:0000000000000074 .LVL2
     /tmp/ccM8EJa9.s:262    .text:00000000000000ec .LVL8
     /tmp/ccM8EJa9.s:352    .text:000000000000013c .LVL17
     /tmp/ccM8EJa9.s:359    .text:0000000000000144 .LVL18
     /tmp/ccM8EJa9.s:386    .text:0000000000000164 .LVL20
     /tmp/ccM8EJa9.s:393    .text:0000000000000168 .LVL21
     /tmp/ccM8EJa9.s:409    .text:0000000000000178 .LVL22
     /tmp/ccM8EJa9.s:416    .text:0000000000000180 .LVL23
GAS LISTING /tmp/ccM8EJa9.s 			page 32


     /tmp/ccM8EJa9.s:276    .text:00000000000000f0 .LVL9
     /tmp/ccM8EJa9.s:826    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccM8EJa9.s:97     .text:0000000000000058 .LBB59
     /tmp/ccM8EJa9.s:144    .text:0000000000000080 .LBE59
     /tmp/ccM8EJa9.s:148    .text:0000000000000080 .LBB105
     /tmp/ccM8EJa9.s:158    .text:000000000000008c .LBE105
     /tmp/ccM8EJa9.s:162    .text:000000000000008c .LBB106
     /tmp/ccM8EJa9.s:174    .text:0000000000000098 .LBE106
     /tmp/ccM8EJa9.s:178    .text:0000000000000098 .LBB107
     /tmp/ccM8EJa9.s:192    .text:00000000000000a4 .LBE107
     /tmp/ccM8EJa9.s:196    .text:00000000000000a4 .LBB108
     /tmp/ccM8EJa9.s:212    .text:00000000000000b0 .LBE108
     /tmp/ccM8EJa9.s:216    .text:00000000000000b0 .LBB109
     /tmp/ccM8EJa9.s:294    .text:00000000000000f4 .LBE109
     /tmp/ccM8EJa9.s:314    .text:000000000000010c .LBB110
     /tmp/ccM8EJa9.s:461    .text:00000000000001b4 .LBE110

UNDEFINED SYMBOLS
__putc
_ZN15MemoryAllocator5allocEm
_ZN15MemoryAllocator4freeEPv
_ZN3TCB12createThreadEPFvPvEPmS0_
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN3TCB16timeSliceCounterE
__getc
_Z8printIntiii
console_handler
_ZN3TCB14newThrUserModeE
