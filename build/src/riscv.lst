GAS LISTING /tmp/ccBOrECW.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv17hardwareInterruptEv
   9              	_ZN5Riscv17hardwareInterruptEv:
  10              	.LFB36:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 7/24/23.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** //sa vezbi 7
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/TCB.hpp"
   8:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/riscv.cpp **** #include "../test/printing.hpp"
  10:src/riscv.cpp **** #include "../h/_sem.hpp"
  11:src/riscv.cpp **** #include "../h/Scheduler.hpp"
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** Riscv::SleepingElem* Riscv::headSleeping=nullptr;
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::handleEcallException(){
  16:src/riscv.cpp ****     uint64 scause=r_scause();
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     uint64 volatile a0;
  19:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x50(fp)": "=r"(a0));
  20:src/riscv.cpp ****     uint64 volatile a1;
  21:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x58(fp)": "=r"(a1));
  22:src/riscv.cpp ****     uint64 volatile a2;
  23:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x60(fp)": "=r"(a2));
  24:src/riscv.cpp ****     uint64 volatile a3;
  25:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x68(fp)": "=r"(a3));
  26:src/riscv.cpp ****     uint64 volatile a4;
  27:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x70(fp)": "=r"(a4));
  28:src/riscv.cpp **** 
  29:src/riscv.cpp ****     if(scause==0x09UL || scause==0x08UL){
  30:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
  31:src/riscv.cpp ****         uint64 volatile sepc=r_sepc()+4;
  32:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
  33:src/riscv.cpp **** 
  34:src/riscv.cpp ****         if(a0==0x01){
  35:src/riscv.cpp ****             //mem_alloc
  36:src/riscv.cpp ****             void *ptr=MemoryAllocator::alloc(a1);
  37:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
  38:src/riscv.cpp ****         }
  39:src/riscv.cpp ****         else if(a0==0x02){
  40:src/riscv.cpp ****             //mem_free
  41:src/riscv.cpp ****             int stat=MemoryAllocator::free((void*)a1);
  42:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
  43:src/riscv.cpp ****         }
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****         else if(a0==0x11){
  46:src/riscv.cpp ****             /*thread_create
  47:src/riscv.cpp ****             a1- thread_t* handle
GAS LISTING /tmp/ccBOrECW.s 			page 2


  48:src/riscv.cpp ****              a2- *start_routine
  49:src/riscv.cpp ****              a3- void* arg
  50:src/riscv.cpp ****              a4- char* stack
  51:src/riscv.cpp ****             */
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             TCB* handle= TCB::createThread((TCB::Body)a2, (char*)a4, (void*)a3);
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****             if(!handle){
  56:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
  57:src/riscv.cpp ****             }
  58:src/riscv.cpp ****             else{
  59:src/riscv.cpp ****                 //*han=(thread_t)handle;
  60:src/riscv.cpp ****                 TCB** retHandle=(TCB**)a1;
  61:src/riscv.cpp ****                 *retHandle=handle;
  62:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
  63:src/riscv.cpp ****             }
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****         }
  66:src/riscv.cpp ****         else if(a0==0x12){
  67:src/riscv.cpp ****             //thread_exit()
  68:src/riscv.cpp ****             /*if(TCB::running->isFinished()){
  69:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
  70:src/riscv.cpp ****             }
  71:src/riscv.cpp ****             else{
  72:src/riscv.cpp ****                 //TCB* exited=TCB::running;
  73:src/riscv.cpp ****                 TCB::running->setFinished(true);
  74:src/riscv.cpp ****                 TCB::dispatch();
  75:src/riscv.cpp ****                 //delete exited; ovde se nikad ne vraca
  76:src/riscv.cpp ****             }*/
  77:src/riscv.cpp ****             int stat=TCB::exit();
  78:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
  79:src/riscv.cpp ****         }
  80:src/riscv.cpp ****         else if(a0==0x13){
  81:src/riscv.cpp ****             //thread_dispatch()
  82:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  83:src/riscv.cpp ****             TCB::dispatch();
  84:src/riscv.cpp ****         }
  85:src/riscv.cpp ****         else if(a0==0x41){
  86:src/riscv.cpp ****             //char getc();
  87:src/riscv.cpp ****             char c=__getc();
  88:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
  89:src/riscv.cpp ****         }
  90:src/riscv.cpp ****         else if(a0==0x42){
  91:src/riscv.cpp ****             //void putc()
  92:src/riscv.cpp **** 
  93:src/riscv.cpp ****             __putc((char)a1);
  94:src/riscv.cpp ****         }
  95:src/riscv.cpp ****         else if(a0==0x21){
  96:src/riscv.cpp ****             //sem_open
  97:src/riscv.cpp ****             //a1 - sem_t* handle
  98:src/riscv.cpp ****             //a2 - unsigned int init
  99:src/riscv.cpp ****             _sem* handle=_sem::open((int)a2);
 100:src/riscv.cpp ****             if(!handle){
 101:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 102:src/riscv.cpp ****             }
 103:src/riscv.cpp ****             else{
 104:src/riscv.cpp ****                 _sem** retHandle=(_sem**)a1;
GAS LISTING /tmp/ccBOrECW.s 			page 3


 105:src/riscv.cpp ****                 *retHandle=handle;
 106:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 107:src/riscv.cpp ****             }
 108:src/riscv.cpp ****         }
 109:src/riscv.cpp ****         else if(a0==0x23){
 110:src/riscv.cpp ****             //sem_wait(sem_t id)
 111:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 112:src/riscv.cpp ****             int stat=handle->wait();
 113:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 114:src/riscv.cpp ****         }
 115:src/riscv.cpp ****         else if(a0==0x22){
 116:src/riscv.cpp ****             //sem_close(sem_t handle)
 117:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 118:src/riscv.cpp ****             int stat=handle->close();
 119:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 120:src/riscv.cpp ****         }
 121:src/riscv.cpp ****         else if(a0==0x24){
 122:src/riscv.cpp ****             //sem_signal(sem_t id)
 123:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 124:src/riscv.cpp ****             int stat=handle->signal();
 125:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 126:src/riscv.cpp ****         }
 127:src/riscv.cpp ****         else if(a0==0x14){
 128:src/riscv.cpp ****             //thread_join(thread_t)
 129:src/riscv.cpp ****             TCB::join((TCB*)a1);
 130:src/riscv.cpp ****         }
 131:src/riscv.cpp ****         else if(a0==0x31){
 132:src/riscv.cpp ****             //time_sleep(time_t)
 133:src/riscv.cpp ****             time_t time=(time_t)a1;
 134:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 135:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 136:src/riscv.cpp ****         }
 137:src/riscv.cpp **** 
 138:src/riscv.cpp ****         w_sstatus(sstatus);
 139:src/riscv.cpp ****         w_sepc(sepc);
 140:src/riscv.cpp ****     }
 141:src/riscv.cpp **** 
 142:src/riscv.cpp ****     else{
 143:src/riscv.cpp ****         printString("GRESKA:");
 144:src/riscv.cpp ****         printInt(scause);
 145:src/riscv.cpp ****         printString("\nsepc:");
 146:src/riscv.cpp ****         printInt(r_sepc());
 147:src/riscv.cpp ****         printString("\n");
 148:src/riscv.cpp ****         while(true);
 149:src/riscv.cpp ****     }
 150:src/riscv.cpp **** 
 151:src/riscv.cpp **** }
 152:src/riscv.cpp **** 
 153:src/riscv.cpp **** void Riscv::timerInterrupt() {
 154:src/riscv.cpp ****     uint64 scause=r_scause();
 155:src/riscv.cpp ****     if(scause==0x8000000000000001UL){
 156:src/riscv.cpp ****         //prekid od tajmera, softverski prekid
 157:src/riscv.cpp **** 
 158:src/riscv.cpp ****         updateSleepingList();
 159:src/riscv.cpp **** 
 160:src/riscv.cpp ****         TCB::timeSliceCounter++;
 161:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
GAS LISTING /tmp/ccBOrECW.s 			page 4


 162:src/riscv.cpp ****             uint64 volatile sepc=r_sepc();
 163:src/riscv.cpp ****             uint64 volatile sstatus=r_sstatus();
 164:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 165:src/riscv.cpp ****             TCB::dispatch();
 166:src/riscv.cpp ****             w_sstatus(sstatus);
 167:src/riscv.cpp ****             w_sepc(sepc);
 168:src/riscv.cpp ****         }
 169:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 170:src/riscv.cpp ****     }
 171:src/riscv.cpp **** }
 172:src/riscv.cpp **** 
 173:src/riscv.cpp **** void Riscv::hardwareInterrupt() {
  12              		.loc 1 173 33
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
 174:src/riscv.cpp ****     uint64 scause=r_scause();
  22              		.loc 1 174 5
  23              	.LBB81:
  24              	.LBB82:
  25              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 7/24/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../h/TCB.hpp"
  10:src/../h/riscv.hpp **** //sa vezbi 7
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** class Riscv{
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp **** public:
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //supervisor previous privileged, previousInterruptEnable
  17:src/../h/riscv.hpp ****     //mora da bude ne inline da se poziva
  18:src/../h/riscv.hpp ****     static void popSppSpie();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static uint64 r_scause();
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/riscv.hpp ****     static uint64 r_stvec();
  25:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  26:src/../h/riscv.hpp ****     static uint64 r_stval();
  27:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     enum BitMaskSStatus{
  30:src/../h/riscv.hpp ****         SSTATUS_SIE=(1<<1),
GAS LISTING /tmp/ccBOrECW.s 			page 5


  31:src/../h/riscv.hpp ****         SSTATUS_SPIE=(1<<5),
  32:src/../h/riscv.hpp ****         SSTATUS_SPP=(1<<8)
  33:src/../h/riscv.hpp ****     };
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  36:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  37:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  38:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip{
  42:src/../h/riscv.hpp ****         SIP_SSIP=(1<<1),//software interrupt pending
  43:src/../h/riscv.hpp ****         SIP_STIP=(1 << 5),
  44:src/../h/riscv.hpp ****         SIP_SEIP=(1 << 9)
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  48:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  49:src/../h/riscv.hpp ****     static uint64 r_sip();
  50:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     static void supervisorTrap();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     struct SleepingElem{
  55:src/../h/riscv.hpp ****         TCB* thr;
  56:src/../h/riscv.hpp ****         time_t toSleepRel;
  57:src/../h/riscv.hpp ****         SleepingElem* next;
  58:src/../h/riscv.hpp ****     };
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     static int putToSleep(time_t);
  61:src/../h/riscv.hpp ****     static void updateSleepingList();
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp **** private:
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     static void handleEcallException();
  66:src/../h/riscv.hpp ****     static void timerInterrupt();
  67:src/../h/riscv.hpp ****     static void hardwareInterrupt();
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     static SleepingElem* headSleeping;
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp **** };
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  74:src/../h/riscv.hpp ****     uint64 volatile scause;
  26              		.loc 2 74 5
  75:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
  27              		.loc 2 75 5
  28              		.loc 2 75 68 is_stmt 0
  29              	#APP
  30              	# 75 "src/../h/riscv.hpp" 1
  76              	    return scause;
  31              		csrr a5, scause
  32              	# 0 "" 2
  33              	#NO_APP
  34 0014 2334F4FE 		sd	a5,-24(s0)
  35              		.loc 2 76 5 is_stmt 1
  36              		.loc 2 76 12 is_stmt 0
GAS LISTING /tmp/ccBOrECW.s 			page 6


  37 0018 033784FE 		ld	a4,-24(s0)
  38              	.LVL0:
  39              	.LBE82:
  40              	.LBE81:
 175:src/riscv.cpp ****     if(scause==0x8000000000000009UL){
  41              		.loc 1 175 5 is_stmt 1
  42 001c 9307F0FF 		li	a5,-1
  43 0020 9397F703 		slli	a5,a5,63
  44 0024 93879700 		addi	a5,a5,9
  45 0028 630AF700 		beq	a4,a5,.L4
  46              	.LVL1:
  47              	.L1:
 176:src/riscv.cpp ****         //prekid konzola
 177:src/riscv.cpp ****         console_handler();
 178:src/riscv.cpp ****     }
 179:src/riscv.cpp **** }
  48              		.loc 1 179 1 is_stmt 0
  49 002c 83308101 		ld	ra,24(sp)
  50              		.cfi_remember_state
  51              		.cfi_restore 1
  52 0030 03340101 		ld	s0,16(sp)
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 32
  55 0034 13010102 		addi	sp,sp,32
  56              		.cfi_def_cfa_offset 0
  57 0038 67800000 		jr	ra
  58              	.LVL2:
  59              	.L4:
  60              		.cfi_restore_state
 177:src/riscv.cpp ****     }
  61              		.loc 1 177 9 is_stmt 1
 177:src/riscv.cpp ****     }
  62              		.loc 1 177 24 is_stmt 0
  63 003c 97000000 		call	console_handler@plt
  63      E7800000 
  64              	.LVL3:
  65              		.loc 1 179 1
  66 0044 6FF09FFE 		j	.L1
  67              		.cfi_endproc
  68              	.LFE36:
  70              		.align	2
  71              		.globl	_ZN5Riscv10popSppSpieEv
  73              	_ZN5Riscv10popSppSpieEv:
  74              	.LFB37:
 180:src/riscv.cpp **** 
 181:src/riscv.cpp **** 
 182:src/riscv.cpp **** 
 183:src/riscv.cpp **** void Riscv::popSppSpie() {
  75              		.loc 1 183 26 is_stmt 1
  76              		.cfi_startproc
  77 0048 130101FF 		addi	sp,sp,-16
  78              		.cfi_def_cfa_offset 16
  79 004c 23348100 		sd	s0,8(sp)
  80              		.cfi_offset 8, -8
  81 0050 13040101 		addi	s0,sp,16
  82              		.cfi_def_cfa 8, 0
 184:src/riscv.cpp **** 
GAS LISTING /tmp/ccBOrECW.s 			page 7


 185:src/riscv.cpp **** 
 186:src/riscv.cpp ****     //Riscv::mc_sstatus(SSTATUS_SPIE);
 187:src/riscv.cpp ****     /*if(TCB::newThrUserMode){
 188:src/riscv.cpp ****         Riscv::mc_sstatus(SSTATUS_SPP);
 189:src/riscv.cpp ****     }
 190:src/riscv.cpp ****     else{
 191:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 192:src/riscv.cpp ****     }*/
 193:src/riscv.cpp ****     Riscv::ms_sstatus(SSTATUS_SPIE);
  83              		.loc 1 193 5
  84              	.LVL4:
  85              	.LBB83:
  86              	.LBB84:
  77:src/../h/riscv.hpp **** }
  78:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  79:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]"::[scause]"r"(scause));
  80:src/../h/riscv.hpp **** }
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
  83:src/../h/riscv.hpp ****     uint64 volatile sepc;
  84:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
  85:src/../h/riscv.hpp ****     return sepc;
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %[sepc]"::[sepc]"r"(sepc));
  89:src/../h/riscv.hpp **** }
  90:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
  91:src/../h/riscv.hpp ****     uint64 volatile stvec;
  92:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stvec], stvec":[stvec]"=r"(stvec));
  93:src/../h/riscv.hpp ****     return stvec;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  96:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %[stvec]"::[stvec]"r"(stvec));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
  99:src/../h/riscv.hpp ****     uint64 volatile stval;
 100:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
 101:src/../h/riscv.hpp ****     return stval;
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 104:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %[stval]"::[stval]"r"(stval));
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 108:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %[mask]"::[mask]"r"(mask));
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 111:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]"::[mask]"r"(mask));
 112:src/../h/riscv.hpp **** }
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 116:src/../h/riscv.hpp ****     uint64 volatile sip;
 117:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sip], sip":[sip]"=r"(sip));
 118:src/../h/riscv.hpp ****     return sip;
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
GAS LISTING /tmp/ccBOrECW.s 			page 8


 121:src/../h/riscv.hpp ****     __asm__ volatile("csrw sip, %[sip]"::[sip]"r"(sip));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 125:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %[mask]"::[mask]"r"(mask));
  87              		.loc 2 125 5
  88              		.loc 2 125 63 is_stmt 0
  89 0054 93070002 		li	a5,32
  90              	#APP
  91              	# 125 "src/../h/riscv.hpp" 1
 126              	}
  92              		csrs sstatus, a5
  93              	# 0 "" 2
  94              	.LVL5:
  95              	#NO_APP
  96              	.LBE84:
  97              	.LBE83:
 194:src/riscv.cpp ****     if(TCB::running->userMode){
  98              		.loc 1 194 5 is_stmt 1
  99              		.loc 1 194 22 is_stmt 0
 100 005c 97070000 		la	a5,_ZN3TCB7runningE
 100      83B70700 
 101 0064 83B70700 		ld	a5,0(a5)
 102 0068 83C72704 		lbu	a5,66(a5)
 103              		.loc 1 194 5
 104 006c 63800702 		beqz	a5,.L6
 195:src/riscv.cpp ****         Riscv::mc_sstatus(SSTATUS_SPP);
 105              		.loc 1 195 9 is_stmt 1
 106              	.LVL6:
 107              	.LBB85:
 108              	.LBB86:
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 129:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 131:src/../h/riscv.hpp ****     return sstatus;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrw sstatus, %[sstatus]"::[sstatus]"r"(sstatus));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 138:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %[mask]"::[mask]"r"(mask));
 109              		.loc 2 138 5
 110              		.loc 2 138 63 is_stmt 0
 111 0070 93070010 		li	a5,256
 112              	#APP
 113              	# 138 "src/../h/riscv.hpp" 1
 139              	}
 114              		csrc sstatus, a5
 115              	# 0 "" 2
 116              	.LVL7:
 117              	#NO_APP
 118              	.L7:
 119              	.LBE86:
 120              	.LBE85:
 196:src/riscv.cpp ****     }
GAS LISTING /tmp/ccBOrECW.s 			page 9


 197:src/riscv.cpp ****     else{
 198:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 199:src/riscv.cpp ****     }
 200:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 121              		.loc 1 200 5 is_stmt 1
 122              		.loc 1 200 38 is_stmt 0
 123              	#APP
 124              	# 200 "src/riscv.cpp" 1
 201              	    __asm__ volatile("sret");
 125              		csrw sepc, ra
 126              	# 0 "" 2
 127              		.loc 1 201 5 is_stmt 1
 128              		.loc 1 201 29 is_stmt 0
 129              	# 201 "src/riscv.cpp" 1
 202              	}
 130              		sret
 131              	# 0 "" 2
 132              		.loc 1 202 1
 133              	#NO_APP
 134 0080 03348100 		ld	s0,8(sp)
 135              		.cfi_remember_state
 136              		.cfi_restore 8
 137              		.cfi_def_cfa 2, 16
 138 0084 13010101 		addi	sp,sp,16
 139              		.cfi_def_cfa_offset 0
 140 0088 67800000 		jr	ra
 141              	.L6:
 142              		.cfi_restore_state
 198:src/riscv.cpp ****     }
 143              		.loc 1 198 9 is_stmt 1
 144              	.LVL8:
 145              	.LBB87:
 146              	.LBB88:
 125:src/../h/riscv.hpp **** }
 147              		.loc 2 125 5
 125:src/../h/riscv.hpp **** }
 148              		.loc 2 125 63 is_stmt 0
 149 008c 93070010 		li	a5,256
 150              	#APP
 151              	# 125 "src/../h/riscv.hpp" 1
 126:src/../h/riscv.hpp **** 
 152              		csrs sstatus, a5
 153              	# 0 "" 2
 154              		.loc 2 126 1
 155              	#NO_APP
 156 0094 6FF05FFE 		j	.L7
 157              	.LBE88:
 158              	.LBE87:
 159              		.cfi_endproc
 160              	.LFE37:
 162              		.align	2
 163              		.globl	_ZN5Riscv10putToSleepEm
 165              	_ZN5Riscv10putToSleepEm:
 166              	.LFB38:
 203:src/riscv.cpp **** 
 204:src/riscv.cpp **** 
 205:src/riscv.cpp **** int Riscv::putToSleep(time_t time) {
GAS LISTING /tmp/ccBOrECW.s 			page 10


 167              		.loc 1 205 36 is_stmt 1
 168              		.cfi_startproc
 169              	.LVL9:
 206:src/riscv.cpp ****     if(time<=0)return -1;
 170              		.loc 1 206 5
 171 0098 63040510 		beqz	a0,.L18
 205:src/riscv.cpp ****     if(time<=0)return -1;
 172              		.loc 1 205 36 is_stmt 0
 173 009c 130101FE 		addi	sp,sp,-32
 174              		.cfi_def_cfa_offset 32
 175 00a0 233C1100 		sd	ra,24(sp)
 176 00a4 23388100 		sd	s0,16(sp)
 177 00a8 23349100 		sd	s1,8(sp)
 178 00ac 23302101 		sd	s2,0(sp)
 179              		.cfi_offset 1, -8
 180              		.cfi_offset 8, -16
 181              		.cfi_offset 9, -24
 182              		.cfi_offset 18, -32
 183 00b0 13040102 		addi	s0,sp,32
 184              		.cfi_def_cfa 8, 0
 185 00b4 93040500 		mv	s1,a0
 207:src/riscv.cpp ****     TCB::running->setSleeping(true);
 186              		.loc 1 207 5 is_stmt 1
 187              		.loc 1 207 30 is_stmt 0
 188 00b8 17090000 		la	s2,_ZN3TCB7runningE
 188      03390900 
 189 00c0 83370900 		ld	a5,0(s2)
 190              	.LVL10:
 191              	.LBB89:
 192              	.LBB90:
 193              		.file 3 "src/../h/../h/TCB.hpp"
   1:src/../h/../h/TCB.hpp **** //
   2:src/../h/../h/TCB.hpp **** // Created by os on 7/18/23.
   3:src/../h/../h/TCB.hpp **** //
   4:src/../h/../h/TCB.hpp **** 
   5:src/../h/../h/TCB.hpp **** //sa vezbi 7
   6:src/../h/../h/TCB.hpp **** 
   7:src/../h/../h/TCB.hpp **** #ifndef PROJECT_BASE_TCB_HPP
   8:src/../h/../h/TCB.hpp **** #define PROJECT_BASE_TCB_HPP
   9:src/../h/../h/TCB.hpp **** 
  10:src/../h/../h/TCB.hpp **** #include "../lib/hw.h"
  11:src/../h/../h/TCB.hpp **** 
  12:src/../h/../h/TCB.hpp **** class TCB{
  13:src/../h/../h/TCB.hpp **** public:
  14:src/../h/../h/TCB.hpp ****     virtual ~TCB();
  15:src/../h/../h/TCB.hpp **** 
  16:src/../h/../h/TCB.hpp ****     bool isBlocked() const {
  17:src/../h/../h/TCB.hpp ****         return blocked;
  18:src/../h/../h/TCB.hpp ****     }
  19:src/../h/../h/TCB.hpp **** 
  20:src/../h/../h/TCB.hpp ****     void setBlocked(bool blocked) {
  21:src/../h/../h/TCB.hpp ****         TCB::blocked = blocked;
  22:src/../h/../h/TCB.hpp ****     }
  23:src/../h/../h/TCB.hpp **** 
  24:src/../h/../h/TCB.hpp ****     bool isFinished() const{
  25:src/../h/../h/TCB.hpp ****         return finished;
  26:src/../h/../h/TCB.hpp ****     }
GAS LISTING /tmp/ccBOrECW.s 			page 11


  27:src/../h/../h/TCB.hpp **** 
  28:src/../h/../h/TCB.hpp ****     void setFinished(bool finished){
  29:src/../h/../h/TCB.hpp ****         TCB::finished = finished;
  30:src/../h/../h/TCB.hpp ****     }
  31:src/../h/../h/TCB.hpp **** 
  32:src/../h/../h/TCB.hpp ****     uint64 getTimeSlice() const{
  33:src/../h/../h/TCB.hpp ****         return timeSlice;
  34:src/../h/../h/TCB.hpp ****     }
  35:src/../h/../h/TCB.hpp **** 
  36:src/../h/../h/TCB.hpp ****     bool isSleeping() const {
  37:src/../h/../h/TCB.hpp ****         return sleeping;
  38:src/../h/../h/TCB.hpp ****     }
  39:src/../h/../h/TCB.hpp **** 
  40:src/../h/../h/TCB.hpp ****     void setSleeping(bool sleeping) {
  41:src/../h/../h/TCB.hpp ****         TCB::sleeping = sleeping;
 194              		.loc 3 41 9 is_stmt 1
 195              		.loc 3 41 23 is_stmt 0
 196 00c4 13071000 		li	a4,1
 197 00c8 A380E704 		sb	a4,65(a5)
 198              	.LVL11:
 199              	.LBE90:
 200              	.LBE89:
 208:src/riscv.cpp **** 
 209:src/riscv.cpp ****     SleepingElem* newElem=(SleepingElem*)MemoryAllocator::alloc((sizeof(SleepingElem)+MEM_BLOCK_SIZ
 201              		.loc 1 209 5 is_stmt 1
 202              		.loc 1 209 64 is_stmt 0
 203 00cc 13051000 		li	a0,1
 204              	.LVL12:
 205 00d0 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 205      E7800000 
 206              	.LVL13:
 210:src/riscv.cpp ****     newElem->thr=TCB::running;
 207              		.loc 1 210 5 is_stmt 1
 208              		.loc 1 210 17 is_stmt 0
 209 00d8 83370900 		ld	a5,0(s2)
 210 00dc 2330F500 		sd	a5,0(a0)
 211:src/riscv.cpp **** 
 212:src/riscv.cpp ****     if(!Riscv::headSleeping){
 211              		.loc 1 212 5 is_stmt 1
 212              	.LBB91:
 213              		.loc 1 212 8 is_stmt 0
 214 00e0 17060000 		ld	a2,.LANCHOR0
 214      03360600 
 215              		.loc 1 212 5
 216 00e8 630C0604 		beqz	a2,.L23
 217              	.LBE91:
 213:src/riscv.cpp ****         newElem->toSleepRel=time;
 214:src/riscv.cpp ****         newElem->next=nullptr;
 215:src/riscv.cpp ****         headSleeping=newElem;
 216:src/riscv.cpp ****     }
 217:src/riscv.cpp ****     else{
 218:src/riscv.cpp ****         if(time<=Riscv::headSleeping->toSleepRel){
 218              		.loc 1 218 9 is_stmt 1
 219              	.LBB95:
 220              	.LBB92:
 221              		.loc 1 218 39 is_stmt 0
 222 00ec 03378600 		ld	a4,8(a2)
GAS LISTING /tmp/ccBOrECW.s 			page 12


 223              		.loc 1 218 9
 224 00f0 63629706 		bltu	a4,s1,.L13
 219:src/riscv.cpp ****             newElem->toSleepRel=time;
 225              		.loc 1 219 13 is_stmt 1
 226              		.loc 1 219 32 is_stmt 0
 227 00f4 23349500 		sd	s1,8(a0)
 220:src/riscv.cpp ****             newElem->next=Riscv::headSleeping;
 228              		.loc 1 220 13 is_stmt 1
 229              		.loc 1 220 26 is_stmt 0
 230 00f8 2338C500 		sd	a2,16(a0)
 221:src/riscv.cpp ****             headSleeping->toSleepRel-=time;
 231              		.loc 1 221 13 is_stmt 1
 232              		.loc 1 221 37 is_stmt 0
 233 00fc 03378600 		ld	a4,8(a2)
 234 0100 33079740 		sub	a4,a4,s1
 235 0104 2334E600 		sd	a4,8(a2)
 222:src/riscv.cpp ****             headSleeping=newElem;
 236              		.loc 1 222 13 is_stmt 1
 237              		.loc 1 222 25 is_stmt 0
 238 0108 97070000 		sd	a0,.LANCHOR0,a5
 238      23B0A700 
 239              	.L12:
 240              	.LBE92:
 241              	.LBE95:
 223:src/riscv.cpp ****         }
 224:src/riscv.cpp ****         else{
 225:src/riscv.cpp ****             time_t relTime=time-Riscv::headSleeping->toSleepRel;
 226:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 227:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 228:src/riscv.cpp ****             while(pom!=nullptr && relTime>pom->toSleepRel){
 229:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 230:src/riscv.cpp ****                 prev=pom;
 231:src/riscv.cpp ****                 pom=pom->next;
 232:src/riscv.cpp ****             }
 233:src/riscv.cpp ****             if(pom==nullptr){
 234:src/riscv.cpp ****                 newElem->next= nullptr;
 235:src/riscv.cpp ****             }
 236:src/riscv.cpp ****             else{
 237:src/riscv.cpp ****                 newElem->next=pom;
 238:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 239:src/riscv.cpp ****             }
 240:src/riscv.cpp ****             newElem->toSleepRel=relTime;
 241:src/riscv.cpp ****             prev->next=newElem;
 242:src/riscv.cpp ****         }
 243:src/riscv.cpp ****     }
 244:src/riscv.cpp **** 
 245:src/riscv.cpp ****     TCB::timeSliceCounter=0;
 242              		.loc 1 245 5 is_stmt 1
 243              		.loc 1 245 26 is_stmt 0
 244 0110 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 244      83B70700 
 245 0118 23B00700 		sd	zero,0(a5)
 246:src/riscv.cpp ****     TCB::dispatch();
 246              		.loc 1 246 5 is_stmt 1
 247              		.loc 1 246 18 is_stmt 0
 248 011c 97000000 		call	_ZN3TCB8dispatchEv@plt
 248      E7800000 
GAS LISTING /tmp/ccBOrECW.s 			page 13


 249              	.LVL14:
 247:src/riscv.cpp ****     return 0;
 250              		.loc 1 247 5 is_stmt 1
 251              		.loc 1 247 12 is_stmt 0
 252 0124 13050000 		li	a0,0
 248:src/riscv.cpp **** }
 253              		.loc 1 248 1
 254 0128 83308101 		ld	ra,24(sp)
 255              		.cfi_remember_state
 256              		.cfi_restore 1
 257 012c 03340101 		ld	s0,16(sp)
 258              		.cfi_restore 8
 259              		.cfi_def_cfa 2, 32
 260 0130 83348100 		ld	s1,8(sp)
 261              		.cfi_restore 9
 262              	.LVL15:
 263 0134 03390100 		ld	s2,0(sp)
 264              		.cfi_restore 18
 265 0138 13010102 		addi	sp,sp,32
 266              		.cfi_def_cfa_offset 0
 267 013c 67800000 		jr	ra
 268              	.LVL16:
 269              	.L23:
 270              		.cfi_restore_state
 271              	.LBB96:
 213:src/riscv.cpp ****         newElem->next=nullptr;
 272              		.loc 1 213 9 is_stmt 1
 213:src/riscv.cpp ****         newElem->next=nullptr;
 273              		.loc 1 213 28 is_stmt 0
 274 0140 23349500 		sd	s1,8(a0)
 214:src/riscv.cpp ****         headSleeping=newElem;
 275              		.loc 1 214 9 is_stmt 1
 214:src/riscv.cpp ****         headSleeping=newElem;
 276              		.loc 1 214 22 is_stmt 0
 277 0144 23380500 		sd	zero,16(a0)
 215:src/riscv.cpp ****     }
 278              		.loc 1 215 9 is_stmt 1
 215:src/riscv.cpp ****     }
 279              		.loc 1 215 21 is_stmt 0
 280 0148 97070000 		sd	a0,.LANCHOR0,a5
 280      23B0A700 
 281 0150 6FF01FFC 		j	.L12
 282              	.L13:
 283              	.LBB94:
 284              	.LBB93:
 225:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 285              		.loc 1 225 13 is_stmt 1
 225:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 286              		.loc 1 225 20 is_stmt 0
 287 0154 3387E440 		sub	a4,s1,a4
 288              	.LVL17:
 226:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 289              		.loc 1 226 13 is_stmt 1
 226:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 290              		.loc 1 226 27 is_stmt 0
 291 0158 83370601 		ld	a5,16(a2)
 292              	.LVL18:
GAS LISTING /tmp/ccBOrECW.s 			page 14


 227:src/riscv.cpp ****             while(pom!=nullptr && relTime>pom->toSleepRel){
 293              		.loc 1 227 13 is_stmt 1
 294              	.L15:
 228:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 295              		.loc 1 228 13
 228:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 296              		.loc 1 228 32
 297 015c 638E0700 		beqz	a5,.L14
 228:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 298              		.loc 1 228 48 is_stmt 0 discriminator 1
 299 0160 83B68700 		ld	a3,8(a5)
 228:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 300              		.loc 1 228 32 discriminator 1
 301 0164 63FAE600 		bgeu	a3,a4,.L14
 229:src/riscv.cpp ****                 prev=pom;
 302              		.loc 1 229 17 is_stmt 1
 229:src/riscv.cpp ****                 prev=pom;
 303              		.loc 1 229 24 is_stmt 0
 304 0168 3307D740 		sub	a4,a4,a3
 305              	.LVL19:
 230:src/riscv.cpp ****                 pom=pom->next;
 306              		.loc 1 230 17 is_stmt 1
 231:src/riscv.cpp ****             }
 307              		.loc 1 231 17
 230:src/riscv.cpp ****                 pom=pom->next;
 308              		.loc 1 230 21 is_stmt 0
 309 016c 13860700 		mv	a2,a5
 231:src/riscv.cpp ****             }
 310              		.loc 1 231 20
 311 0170 83B70701 		ld	a5,16(a5)
 312              	.LVL20:
 228:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 313              		.loc 1 228 13
 314 0174 6FF09FFE 		j	.L15
 315              	.L14:
 233:src/riscv.cpp ****                 newElem->next= nullptr;
 316              		.loc 1 233 13 is_stmt 1
 317 0178 63800702 		beqz	a5,.L24
 237:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 318              		.loc 1 237 17
 237:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 319              		.loc 1 237 30 is_stmt 0
 320 017c 2338F500 		sd	a5,16(a0)
 238:src/riscv.cpp ****             }
 321              		.loc 1 238 17 is_stmt 1
 238:src/riscv.cpp ****             }
 322              		.loc 1 238 32 is_stmt 0
 323 0180 83B68700 		ld	a3,8(a5)
 324 0184 B386E640 		sub	a3,a3,a4
 325 0188 23B4D700 		sd	a3,8(a5)
 326              	.L17:
 240:src/riscv.cpp ****             prev->next=newElem;
 327              		.loc 1 240 13 is_stmt 1
 240:src/riscv.cpp ****             prev->next=newElem;
 328              		.loc 1 240 32 is_stmt 0
 329 018c 2334E500 		sd	a4,8(a0)
 241:src/riscv.cpp ****         }
GAS LISTING /tmp/ccBOrECW.s 			page 15


 330              		.loc 1 241 13 is_stmt 1
 241:src/riscv.cpp ****         }
 331              		.loc 1 241 23 is_stmt 0
 332 0190 2338A600 		sd	a0,16(a2)
 333 0194 6FF0DFF7 		j	.L12
 334              	.L24:
 234:src/riscv.cpp ****             }
 335              		.loc 1 234 17 is_stmt 1
 234:src/riscv.cpp ****             }
 336              		.loc 1 234 30 is_stmt 0
 337 0198 23380500 		sd	zero,16(a0)
 338 019c 6FF01FFF 		j	.L17
 339              	.LVL21:
 340              	.L18:
 341              		.cfi_def_cfa_register 2
 342              		.cfi_restore 1
 343              		.cfi_restore 8
 344              		.cfi_restore 9
 345              		.cfi_restore 18
 346              	.LBE93:
 347              	.LBE94:
 348              	.LBE96:
 206:src/riscv.cpp ****     TCB::running->setSleeping(true);
 349              		.loc 1 206 24
 350 01a0 1305F0FF 		li	a0,-1
 351              	.LVL22:
 352              		.loc 1 248 1
 353 01a4 67800000 		ret
 354              		.cfi_endproc
 355              	.LFE38:
 357              		.section	.rodata.str1.8,"aMS",@progbits,1
 358              		.align	3
 359              	.LC0:
 360 0000 47524553 		.string	"GRESKA:"
 360      4B413A00 
 361              		.align	3
 362              	.LC1:
 363 0008 0A736570 		.string	"\nsepc:"
 363      633A00
 364 000f 00       		.align	3
 365              	.LC2:
 366 0010 0A00     		.string	"\n"
 367              		.text
 368              		.align	2
 369              		.globl	_ZN5Riscv20handleEcallExceptionEv
 371              	_ZN5Riscv20handleEcallExceptionEv:
 372              	.LFB34:
  15:src/riscv.cpp ****     uint64 scause=r_scause();
 373              		.loc 1 15 35 is_stmt 1
 374              		.cfi_startproc
 375 01a8 130101F9 		addi	sp,sp,-112
 376              		.cfi_def_cfa_offset 112
 377 01ac 23341106 		sd	ra,104(sp)
 378 01b0 23308106 		sd	s0,96(sp)
 379 01b4 233C9104 		sd	s1,88(sp)
 380              		.cfi_offset 1, -8
 381              		.cfi_offset 8, -16
GAS LISTING /tmp/ccBOrECW.s 			page 16


 382              		.cfi_offset 9, -24
 383 01b8 13040107 		addi	s0,sp,112
 384              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp **** 
 385              		.loc 1 16 5
 386              	.LBB97:
 387              	.LBB98:
  74:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 388              		.loc 2 74 5
  75:src/../h/riscv.hpp ****     return scause;
 389              		.loc 2 75 5
  75:src/../h/riscv.hpp ****     return scause;
 390              		.loc 2 75 68 is_stmt 0
 391              	#APP
 392              	# 75 "src/../h/riscv.hpp" 1
 393              		csrr a5, scause
 394              	# 0 "" 2
 395              	#NO_APP
 396 01c0 2330F4FA 		sd	a5,-96(s0)
  76:src/../h/riscv.hpp **** }
 397              		.loc 2 76 5 is_stmt 1
  76:src/../h/riscv.hpp **** }
 398              		.loc 2 76 12 is_stmt 0
 399 01c4 833404FA 		ld	s1,-96(s0)
 400              	.LVL23:
 401              	.LBE98:
 402              	.LBE97:
  18:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x50(fp)": "=r"(a0));
 403              		.loc 1 18 5 is_stmt 1
  19:src/riscv.cpp ****     uint64 volatile a1;
 404              		.loc 1 19 5
  19:src/riscv.cpp ****     uint64 volatile a1;
 405              		.loc 1 19 50 is_stmt 0
 406              	#APP
 407              	# 19 "src/riscv.cpp" 1
 408              		ld a5, 0x50(fp)
 409              	# 0 "" 2
 410              	#NO_APP
 411 01cc 233CF4FC 		sd	a5,-40(s0)
  20:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x58(fp)": "=r"(a1));
 412              		.loc 1 20 5 is_stmt 1
  21:src/riscv.cpp ****     uint64 volatile a2;
 413              		.loc 1 21 5
  21:src/riscv.cpp ****     uint64 volatile a2;
 414              		.loc 1 21 50 is_stmt 0
 415              	#APP
 416              	# 21 "src/riscv.cpp" 1
 417              		ld a5, 0x58(fp)
 418              	# 0 "" 2
 419              	#NO_APP
 420 01d4 2338F4FC 		sd	a5,-48(s0)
  22:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x60(fp)": "=r"(a2));
 421              		.loc 1 22 5 is_stmt 1
  23:src/riscv.cpp ****     uint64 volatile a3;
 422              		.loc 1 23 5
  23:src/riscv.cpp ****     uint64 volatile a3;
 423              		.loc 1 23 50 is_stmt 0
GAS LISTING /tmp/ccBOrECW.s 			page 17


 424              	#APP
 425              	# 23 "src/riscv.cpp" 1
 426              		ld a5, 0x60(fp)
 427              	# 0 "" 2
 428              	#NO_APP
 429 01dc 2334F4FC 		sd	a5,-56(s0)
  24:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x68(fp)": "=r"(a3));
 430              		.loc 1 24 5 is_stmt 1
  25:src/riscv.cpp ****     uint64 volatile a4;
 431              		.loc 1 25 5
  25:src/riscv.cpp ****     uint64 volatile a4;
 432              		.loc 1 25 50 is_stmt 0
 433              	#APP
 434              	# 25 "src/riscv.cpp" 1
 435              		ld a5, 0x68(fp)
 436              	# 0 "" 2
 437              	#NO_APP
 438 01e4 2330F4FC 		sd	a5,-64(s0)
  26:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x70(fp)": "=r"(a4));
 439              		.loc 1 26 5 is_stmt 1
  27:src/riscv.cpp **** 
 440              		.loc 1 27 5
  27:src/riscv.cpp **** 
 441              		.loc 1 27 50 is_stmt 0
 442              	#APP
 443              	# 27 "src/riscv.cpp" 1
 444              		ld a5, 0x70(fp)
 445              	# 0 "" 2
 446              	#NO_APP
 447 01ec 233CF4FA 		sd	a5,-72(s0)
  29:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 448              		.loc 1 29 5 is_stmt 1
 449              	.LBB99:
  29:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 450              		.loc 1 29 23 is_stmt 0
 451 01f0 138784FF 		addi	a4,s1,-8
  29:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 452              		.loc 1 29 5
 453 01f4 93071000 		li	a5,1
 454 01f8 63E2E722 		bgtu	a4,a5,.L26
 455              	.LBB100:
  31:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 456              		.loc 1 31 9 is_stmt 1
 457              	.LBB101:
 458              	.LBB102:
  83:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 459              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return sepc;
 460              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return sepc;
 461              		.loc 2 84 60 is_stmt 0
 462              	#APP
 463              	# 84 "src/../h/riscv.hpp" 1
 464              		csrr a5, sepc
 465              	# 0 "" 2
 466              	#NO_APP
 467 0200 2338F4FA 		sd	a5,-80(s0)
GAS LISTING /tmp/ccBOrECW.s 			page 18


  85:src/../h/riscv.hpp **** }
 468              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 469              		.loc 2 85 12 is_stmt 0
 470 0204 833704FB 		ld	a5,-80(s0)
 471              	.LBE102:
 472              	.LBE101:
  31:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 473              		.loc 1 31 38
 474 0208 93874700 		addi	a5,a5,4
  31:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 475              		.loc 1 31 39
 476 020c 2338F4F8 		sd	a5,-112(s0)
  32:src/riscv.cpp **** 
 477              		.loc 1 32 9 is_stmt 1
 478              	.LBB103:
 479              	.LBB104:
 129:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 480              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return sstatus;
 481              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return sstatus;
 482              		.loc 2 130 72 is_stmt 0
 483              	#APP
 484              	# 130 "src/../h/riscv.hpp" 1
 485              		csrr a5, sstatus
 486              	# 0 "" 2
 487              	#NO_APP
 488 0214 2334F4FA 		sd	a5,-88(s0)
 131:src/../h/riscv.hpp **** }
 489              		.loc 2 131 5 is_stmt 1
 131:src/../h/riscv.hpp **** }
 490              		.loc 2 131 12 is_stmt 0
 491 0218 833784FA 		ld	a5,-88(s0)
 492              	.LBE104:
 493              	.LBE103:
  32:src/riscv.cpp **** 
 494              		.loc 1 32 43
 495 021c 233CF4F8 		sd	a5,-104(s0)
  34:src/riscv.cpp ****             //mem_alloc
 496              		.loc 1 34 9 is_stmt 1
 497              	.LBB105:
  34:src/riscv.cpp ****             //mem_alloc
 498              		.loc 1 34 14 is_stmt 0
 499 0220 033784FD 		ld	a4,-40(s0)
  34:src/riscv.cpp ****             //mem_alloc
 500              		.loc 1 34 9
 501 0224 93071000 		li	a5,1
 502 0228 6304F70A 		beq	a4,a5,.L45
 503              	.LBE105:
 504              	.LBE100:
 505              	.LBE99:
  39:src/riscv.cpp ****             //mem_free
 506              		.loc 1 39 14 is_stmt 1
 507              	.LBB241:
 508              	.LBB226:
 509              	.LBB209:
GAS LISTING /tmp/ccBOrECW.s 			page 19


 510              	.LBB106:
  39:src/riscv.cpp ****             //mem_free
 511              		.loc 1 39 19 is_stmt 0
 512 022c 033784FD 		ld	a4,-40(s0)
  39:src/riscv.cpp ****             //mem_free
 513              		.loc 1 39 14
 514 0230 93072000 		li	a5,2
 515 0234 6308F70C 		beq	a4,a5,.L46
 516              	.LBE106:
 517              	.LBE209:
 518              	.LBE226:
 519              	.LBE241:
  45:src/riscv.cpp ****             /*thread_create
 520              		.loc 1 45 14 is_stmt 1
 521              	.LBB242:
 522              	.LBB227:
 523              	.LBB210:
 524              	.LBB196:
 525              	.LBB107:
  45:src/riscv.cpp ****             /*thread_create
 526              		.loc 1 45 19 is_stmt 0
 527 0238 033784FD 		ld	a4,-40(s0)
  45:src/riscv.cpp ****             /*thread_create
 528              		.loc 1 45 14
 529 023c 93071001 		li	a5,17
 530 0240 630CF70C 		beq	a4,a5,.L47
 531              	.LBE107:
 532              	.LBE196:
 533              	.LBE210:
 534              	.LBE227:
 535              	.LBE242:
  66:src/riscv.cpp ****             //thread_exit()
 536              		.loc 1 66 14 is_stmt 1
 537              	.LBB243:
 538              	.LBB228:
 539              	.LBB211:
 540              	.LBB197:
 541              	.LBB184:
 542              	.LBB108:
  66:src/riscv.cpp ****             //thread_exit()
 543              		.loc 1 66 19 is_stmt 0
 544 0244 033784FD 		ld	a4,-40(s0)
  66:src/riscv.cpp ****             //thread_exit()
 545              		.loc 1 66 14
 546 0248 93072001 		li	a5,18
 547 024c 6302F710 		beq	a4,a5,.L48
 548              	.LBE108:
 549              	.LBE184:
 550              	.LBE197:
 551              	.LBE211:
 552              	.LBE228:
 553              	.LBE243:
  80:src/riscv.cpp ****             //thread_dispatch()
 554              		.loc 1 80 14 is_stmt 1
 555              	.LBB244:
 556              	.LBB229:
 557              	.LBB212:
GAS LISTING /tmp/ccBOrECW.s 			page 20


 558              	.LBB198:
 559              	.LBB185:
 560              	.LBB171:
 561              	.LBB109:
  80:src/riscv.cpp ****             //thread_dispatch()
 562              		.loc 1 80 19 is_stmt 0
 563 0250 033784FD 		ld	a4,-40(s0)
  80:src/riscv.cpp ****             //thread_dispatch()
 564              		.loc 1 80 14
 565 0254 93073001 		li	a5,19
 566 0258 6304F710 		beq	a4,a5,.L49
 567              	.LBE109:
 568              	.LBE171:
 569              	.LBE185:
 570              	.LBE198:
 571              	.LBE212:
 572              	.LBE229:
 573              	.LBE244:
  85:src/riscv.cpp ****             //char getc();
 574              		.loc 1 85 14 is_stmt 1
 575              	.LBB245:
 576              	.LBB230:
 577              	.LBB213:
 578              	.LBB199:
 579              	.LBB186:
 580              	.LBB172:
 581              	.LBB161:
 582              	.LBB110:
  85:src/riscv.cpp ****             //char getc();
 583              		.loc 1 85 19 is_stmt 0
 584 025c 033784FD 		ld	a4,-40(s0)
  85:src/riscv.cpp ****             //char getc();
 585              		.loc 1 85 14
 586 0260 93071004 		li	a5,65
 587 0264 630AF710 		beq	a4,a5,.L50
 588              	.LBE110:
 589              	.LBE161:
 590              	.LBE172:
 591              	.LBE186:
 592              	.LBE199:
 593              	.LBE213:
 594              	.LBE230:
 595              	.LBE245:
  90:src/riscv.cpp ****             //void putc()
 596              		.loc 1 90 14 is_stmt 1
 597              	.LBB246:
 598              	.LBB231:
 599              	.LBB214:
 600              	.LBB200:
 601              	.LBB187:
 602              	.LBB173:
 603              	.LBB162:
 604              	.LBB153:
 605              	.LBB111:
  90:src/riscv.cpp ****             //void putc()
 606              		.loc 1 90 19 is_stmt 0
 607 0268 033784FD 		ld	a4,-40(s0)
GAS LISTING /tmp/ccBOrECW.s 			page 21


  90:src/riscv.cpp ****             //void putc()
 608              		.loc 1 90 14
 609 026c 93072004 		li	a5,66
 610 0270 630CF710 		beq	a4,a5,.L51
 611              	.LBE111:
 612              	.LBE153:
 613              	.LBE162:
 614              	.LBE173:
 615              	.LBE187:
 616              	.LBE200:
 617              	.LBE214:
 618              	.LBE231:
 619              	.LBE246:
  95:src/riscv.cpp ****             //sem_open
 620              		.loc 1 95 14 is_stmt 1
 621              	.LBB247:
 622              	.LBB232:
 623              	.LBB215:
 624              	.LBB201:
 625              	.LBB188:
 626              	.LBB174:
 627              	.LBB163:
 628              	.LBB154:
 629              	.LBB145:
 630              	.LBB112:
  95:src/riscv.cpp ****             //sem_open
 631              		.loc 1 95 19 is_stmt 0
 632 0274 033784FD 		ld	a4,-40(s0)
  95:src/riscv.cpp ****             //sem_open
 633              		.loc 1 95 14
 634 0278 93071002 		li	a5,33
 635 027c 6300F712 		beq	a4,a5,.L52
 636              	.LBE112:
 637              	.LBE145:
 638              	.LBE154:
 639              	.LBE163:
 640              	.LBE174:
 641              	.LBE188:
 642              	.LBE201:
 643              	.LBE215:
 644              	.LBE232:
 645              	.LBE247:
 109:src/riscv.cpp ****             //sem_wait(sem_t id)
 646              		.loc 1 109 14 is_stmt 1
 647              	.LBB248:
 648              	.LBB233:
 649              	.LBB216:
 650              	.LBB202:
 651              	.LBB189:
 652              	.LBB175:
 653              	.LBB164:
 654              	.LBB155:
 655              	.LBB146:
 656              	.LBB139:
 657              	.LBB113:
 109:src/riscv.cpp ****             //sem_wait(sem_t id)
 658              		.loc 1 109 19 is_stmt 0
GAS LISTING /tmp/ccBOrECW.s 			page 22


 659 0280 033784FD 		ld	a4,-40(s0)
 109:src/riscv.cpp ****             //sem_wait(sem_t id)
 660              		.loc 1 109 14
 661 0284 93073002 		li	a5,35
 662 0288 6304F714 		beq	a4,a5,.L53
 663              	.LBE113:
 664              	.LBE139:
 665              	.LBE146:
 666              	.LBE155:
 667              	.LBE164:
 668              	.LBE175:
 669              	.LBE189:
 670              	.LBE202:
 671              	.LBE216:
 672              	.LBE233:
 673              	.LBE248:
 115:src/riscv.cpp ****             //sem_close(sem_t handle)
 674              		.loc 1 115 14 is_stmt 1
 675              	.LBB249:
 676              	.LBB234:
 677              	.LBB217:
 678              	.LBB203:
 679              	.LBB190:
 680              	.LBB176:
 681              	.LBB165:
 682              	.LBB156:
 683              	.LBB147:
 684              	.LBB140:
 685              	.LBB131:
 686              	.LBB114:
 115:src/riscv.cpp ****             //sem_close(sem_t handle)
 687              		.loc 1 115 19 is_stmt 0
 688 028c 033784FD 		ld	a4,-40(s0)
 115:src/riscv.cpp ****             //sem_close(sem_t handle)
 689              		.loc 1 115 14
 690 0290 93072002 		li	a5,34
 691 0294 6308F714 		beq	a4,a5,.L54
 692              	.LBE114:
 693              	.LBE131:
 694              	.LBE140:
 695              	.LBE147:
 696              	.LBE156:
 697              	.LBE165:
 698              	.LBE176:
 699              	.LBE190:
 700              	.LBE203:
 701              	.LBE217:
 702              	.LBE234:
 703              	.LBE249:
 121:src/riscv.cpp ****             //sem_signal(sem_t id)
 704              		.loc 1 121 14 is_stmt 1
 705              	.LBB250:
 706              	.LBB235:
 707              	.LBB218:
 708              	.LBB204:
 709              	.LBB191:
 710              	.LBB177:
GAS LISTING /tmp/ccBOrECW.s 			page 23


 711              	.LBB166:
 712              	.LBB157:
 713              	.LBB148:
 714              	.LBB141:
 715              	.LBB132:
 716              	.LBB126:
 717              	.LBB115:
 121:src/riscv.cpp ****             //sem_signal(sem_t id)
 718              		.loc 1 121 19 is_stmt 0
 719 0298 033784FD 		ld	a4,-40(s0)
 121:src/riscv.cpp ****             //sem_signal(sem_t id)
 720              		.loc 1 121 14
 721 029c 93074002 		li	a5,36
 722 02a0 630CF714 		beq	a4,a5,.L55
 723              	.LBE115:
 724              	.LBE126:
 725              	.LBE132:
 726              	.LBE141:
 727              	.LBE148:
 728              	.LBE157:
 729              	.LBE166:
 730              	.LBE177:
 731              	.LBE191:
 732              	.LBE204:
 733              	.LBE218:
 734              	.LBE235:
 735              	.LBE250:
 127:src/riscv.cpp ****             //thread_join(thread_t)
 736              		.loc 1 127 14 is_stmt 1
 737              	.LBB251:
 738              	.LBB236:
 739              	.LBB219:
 740              	.LBB205:
 741              	.LBB192:
 742              	.LBB178:
 743              	.LBB167:
 744              	.LBB158:
 745              	.LBB149:
 746              	.LBB142:
 747              	.LBB133:
 748              	.LBB127:
 749              	.LBB122:
 750              	.LBB116:
 127:src/riscv.cpp ****             //thread_join(thread_t)
 751              		.loc 1 127 19 is_stmt 0
 752 02a4 033784FD 		ld	a4,-40(s0)
 127:src/riscv.cpp ****             //thread_join(thread_t)
 753              		.loc 1 127 14
 754 02a8 93074001 		li	a5,20
 755 02ac 6300F716 		beq	a4,a5,.L56
 756              	.LBE116:
 757              	.LBE122:
 758              	.LBE127:
 759              	.LBE133:
 760              	.LBE142:
 761              	.LBE149:
 762              	.LBE158:
GAS LISTING /tmp/ccBOrECW.s 			page 24


 763              	.LBE167:
 764              	.LBE178:
 765              	.LBE192:
 766              	.LBE205:
 767              	.LBE219:
 768              	.LBE236:
 769              	.LBE251:
 131:src/riscv.cpp ****             //time_sleep(time_t)
 770              		.loc 1 131 14 is_stmt 1
 771              	.LBB252:
 772              	.LBB237:
 773              	.LBB220:
 774              	.LBB206:
 775              	.LBB193:
 776              	.LBB179:
 777              	.LBB168:
 778              	.LBB159:
 779              	.LBB150:
 780              	.LBB143:
 781              	.LBB134:
 782              	.LBB128:
 783              	.LBB123:
 784              	.LBB119:
 785              	.LBB117:
 131:src/riscv.cpp ****             //time_sleep(time_t)
 786              		.loc 1 131 19 is_stmt 0
 787 02b0 033784FD 		ld	a4,-40(s0)
 131:src/riscv.cpp ****             //time_sleep(time_t)
 788              		.loc 1 131 14
 789 02b4 93071003 		li	a5,49
 790 02b8 6314F702 		bne	a4,a5,.L28
 791              	.LBB118:
 133:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 792              		.loc 1 133 13 is_stmt 1
 133:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 793              		.loc 1 133 33 is_stmt 0
 794 02bc 033504FD 		ld	a0,-48(s0)
 795              	.LVL24:
 134:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 796              		.loc 1 134 13 is_stmt 1
 134:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 797              		.loc 1 134 39 is_stmt 0
 798 02c0 97000000 		call	_ZN5Riscv10putToSleepEm
 798      E7800000 
 799              	.LVL25:
 135:src/riscv.cpp ****         }
 800              		.loc 1 135 13 is_stmt 1
 135:src/riscv.cpp ****         }
 801              		.loc 1 135 61 is_stmt 0
 802              	#APP
 803              	# 135 "src/riscv.cpp" 1
 804              		sd a0, 0x50(fp)
 805              	# 0 "" 2
 806              	#NO_APP
 807              	.LBE118:
 808 02cc 6F004001 		j	.L28
 809              	.LVL26:
GAS LISTING /tmp/ccBOrECW.s 			page 25


 810              	.L45:
 811              	.LBE117:
 812              	.LBE119:
 813              	.LBE123:
 814              	.LBE128:
 815              	.LBE134:
 816              	.LBE143:
 817              	.LBE150:
 818              	.LBE159:
 819              	.LBE168:
 820              	.LBE179:
 821              	.LBE193:
 822              	.LBE206:
 823              	.LBB207:
  36:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 824              		.loc 1 36 13 is_stmt 1
  36:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 825              		.loc 1 36 45 is_stmt 0
 826 02d0 033504FD 		ld	a0,-48(s0)
 827 02d4 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 827      E7800000 
 828              	.LVL27:
  37:src/riscv.cpp ****         }
 829              		.loc 1 37 13 is_stmt 1
  37:src/riscv.cpp ****         }
 830              		.loc 1 37 68 is_stmt 0
 831              	#APP
 832              	# 37 "src/riscv.cpp" 1
 833              		sd a0, 0x50(fp)
 834              	# 0 "" 2
 835              	.LVL28:
 836              	#NO_APP
 837              	.L28:
 838              	.LBE207:
 839              	.LBE220:
 138:src/riscv.cpp ****         w_sepc(sepc);
 840              		.loc 1 138 9 is_stmt 1
 138:src/riscv.cpp ****         w_sepc(sepc);
 841              		.loc 1 138 18 is_stmt 0
 842 02e0 833784F9 		ld	a5,-104(s0)
 843              	.LVL29:
 844              	.LBB221:
 845              	.LBB222:
 134:src/../h/riscv.hpp **** }
 846              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 847              		.loc 2 134 72 is_stmt 0
 848              	#APP
 849              	# 134 "src/../h/riscv.hpp" 1
 850              		csrw sstatus, a5
 851              	# 0 "" 2
 852              	.LVL30:
 853              	#NO_APP
 854              	.LBE222:
 855              	.LBE221:
 139:src/riscv.cpp ****     }
 856              		.loc 1 139 9 is_stmt 1
GAS LISTING /tmp/ccBOrECW.s 			page 26


 139:src/riscv.cpp ****     }
 857              		.loc 1 139 15 is_stmt 0
 858 02e8 833704F9 		ld	a5,-112(s0)
 859              	.LVL31:
 860              	.LBB223:
 861              	.LBB224:
  88:src/../h/riscv.hpp **** }
 862              		.loc 2 88 5 is_stmt 1
  88:src/../h/riscv.hpp **** }
 863              		.loc 2 88 60 is_stmt 0
 864              	#APP
 865              	# 88 "src/../h/riscv.hpp" 1
 866              		csrw sepc, a5
 867              	# 0 "" 2
 868              	.LVL32:
 869              	#NO_APP
 870              	.LBE224:
 871              	.LBE223:
 872              	.LBE237:
 873              	.LBE252:
 151:src/riscv.cpp **** 
 874              		.loc 1 151 1
 875 02f0 83308106 		ld	ra,104(sp)
 876              		.cfi_remember_state
 877              		.cfi_restore 1
 878 02f4 03340106 		ld	s0,96(sp)
 879              		.cfi_restore 8
 880              		.cfi_def_cfa 2, 112
 881 02f8 83348105 		ld	s1,88(sp)
 882              		.cfi_restore 9
 883              	.LVL33:
 884 02fc 13010107 		addi	sp,sp,112
 885              		.cfi_def_cfa_offset 0
 886 0300 67800000 		jr	ra
 887              	.LVL34:
 888              	.L46:
 889              		.cfi_restore_state
 890              	.LBB253:
 891              	.LBB238:
 892              	.LBB225:
 893              	.LBB208:
 894              	.LBB194:
  41:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 895              		.loc 1 41 13 is_stmt 1
  41:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 896              		.loc 1 41 43 is_stmt 0
 897 0304 033504FD 		ld	a0,-48(s0)
 898 0308 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 898      E7800000 
 899              	.LVL35:
  42:src/riscv.cpp ****         }
 900              		.loc 1 42 13 is_stmt 1
  42:src/riscv.cpp ****         }
 901              		.loc 1 42 61 is_stmt 0
 902              	#APP
 903              	# 42 "src/riscv.cpp" 1
 904              		sd a0, 0x50(fp)
GAS LISTING /tmp/ccBOrECW.s 			page 27


 905              	# 0 "" 2
 906              	#NO_APP
 907              	.LBE194:
 908 0314 6FF0DFFC 		j	.L28
 909              	.LVL36:
 910              	.L47:
 911              	.LBB195:
 912              	.LBB180:
  53:src/riscv.cpp **** 
 913              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp **** 
 914              		.loc 1 53 43 is_stmt 0
 915 0318 033584FC 		ld	a0,-56(s0)
 916 031c 833584FB 		ld	a1,-72(s0)
 917 0320 033604FC 		ld	a2,-64(s0)
 918 0324 97000000 		call	_ZN3TCB12createThreadEPFvPvEPcS0_@plt
 918      E7800000 
 919              	.LVL37:
  55:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 920              		.loc 1 55 13 is_stmt 1
 921              	.LBB181:
 922 032c 630C0500 		beqz	a0,.L57
 923              	.LBB182:
  60:src/riscv.cpp ****                 *retHandle=handle;
 924              		.loc 1 60 17
  60:src/riscv.cpp ****                 *retHandle=handle;
 925              		.loc 1 60 40 is_stmt 0
 926 0330 033704FD 		ld	a4,-48(s0)
 927              	.LVL38:
  61:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 928              		.loc 1 61 17 is_stmt 1
  61:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 929              		.loc 1 61 27 is_stmt 0
 930 0334 2330A700 		sd	a0,0(a4)
  62:src/riscv.cpp ****             }
 931              		.loc 1 62 17 is_stmt 1
  62:src/riscv.cpp ****             }
 932              		.loc 1 62 62 is_stmt 0
 933 0338 93070000 		li	a5,0
 934              	#APP
 935              	# 62 "src/riscv.cpp" 1
 936              		sd a5, 0x50(fp)
 937              	# 0 "" 2
 938              	#NO_APP
 939 0340 6FF01FFA 		j	.L28
 940              	.LVL39:
 941              	.L57:
 942              	.LBE182:
  56:src/riscv.cpp ****             }
 943              		.loc 1 56 17 is_stmt 1
  56:src/riscv.cpp ****             }
 944              		.loc 1 56 63 is_stmt 0
 945 0344 9307F0FF 		li	a5,-1
 946              	#APP
 947              	# 56 "src/riscv.cpp" 1
 948              		sd a5, 0x50(fp)
 949              	# 0 "" 2
GAS LISTING /tmp/ccBOrECW.s 			page 28


 950              	#NO_APP
 951 034c 6FF05FF9 		j	.L28
 952              	.LVL40:
 953              	.L48:
 954              	.LBE181:
 955              	.LBE180:
 956              	.LBB183:
 957              	.LBB169:
  77:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 958              		.loc 1 77 13 is_stmt 1
  77:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 959              		.loc 1 77 31 is_stmt 0
 960 0350 97000000 		call	_ZN3TCB4exitEv@plt
 960      E7800000 
 961              	.LVL41:
  78:src/riscv.cpp ****         }
 962              		.loc 1 78 13 is_stmt 1
  78:src/riscv.cpp ****         }
 963              		.loc 1 78 61 is_stmt 0
 964              	#APP
 965              	# 78 "src/riscv.cpp" 1
 966              		sd a0, 0x50(fp)
 967              	# 0 "" 2
 968              	#NO_APP
 969              	.LBE169:
 970 035c 6FF05FF8 		j	.L28
 971              	.LVL42:
 972              	.L49:
 973              	.LBB170:
  82:src/riscv.cpp ****             TCB::dispatch();
 974              		.loc 1 82 13 is_stmt 1
  82:src/riscv.cpp ****             TCB::dispatch();
 975              		.loc 1 82 34 is_stmt 0
 976 0360 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 976      83B70700 
 977 0368 23B00700 		sd	zero,0(a5)
  83:src/riscv.cpp ****         }
 978              		.loc 1 83 13 is_stmt 1
  83:src/riscv.cpp ****         }
 979              		.loc 1 83 26 is_stmt 0
 980 036c 97000000 		call	_ZN3TCB8dispatchEv@plt
 980      E7800000 
 981              	.LVL43:
 982 0374 6FF0DFF6 		j	.L28
 983              	.L50:
 984              	.LBB160:
 985              	.LBB151:
  87:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
 986              		.loc 1 87 13 is_stmt 1
  87:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
 987              		.loc 1 87 26 is_stmt 0
 988 0378 97000000 		call	__getc@plt
 988      E7800000 
 989              	.LVL44:
  88:src/riscv.cpp ****         }
 990              		.loc 1 88 13 is_stmt 1
  88:src/riscv.cpp ****         }
GAS LISTING /tmp/ccBOrECW.s 			page 29


 991              		.loc 1 88 58 is_stmt 0
 992              	#APP
 993              	# 88 "src/riscv.cpp" 1
 994              		sd a0, 0x50(fp)
 995              	# 0 "" 2
 996              	#NO_APP
 997              	.LBE151:
 998 0384 6FF0DFF5 		j	.L28
 999              	.LVL45:
 1000              	.L51:
 1001              	.LBB152:
  93:src/riscv.cpp ****         }
 1002              		.loc 1 93 13 is_stmt 1
  93:src/riscv.cpp ****         }
 1003              		.loc 1 93 19 is_stmt 0
 1004 0388 033504FD 		ld	a0,-48(s0)
 1005 038c 1375F50F 		andi	a0,a0,0xff
 1006 0390 97000000 		call	__putc@plt
 1006      E7800000 
 1007              	.LVL46:
 1008 0398 6FF09FF4 		j	.L28
 1009              	.L52:
 1010              	.LBB144:
 1011              	.LBB135:
  99:src/riscv.cpp ****             if(!handle){
 1012              		.loc 1 99 13 is_stmt 1
  99:src/riscv.cpp ****             if(!handle){
 1013              		.loc 1 99 36 is_stmt 0
 1014 039c 033584FC 		ld	a0,-56(s0)
 1015 03a0 1B050500 		sext.w	a0,a0
 1016 03a4 97000000 		call	_ZN4_sem4openEi@plt
 1016      E7800000 
 1017              	.LVL47:
 100:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 1018              		.loc 1 100 13 is_stmt 1
 1019              	.LBB136:
 1020 03ac 630C0500 		beqz	a0,.L58
 1021              	.LBB137:
 104:src/riscv.cpp ****                 *retHandle=handle;
 1022              		.loc 1 104 17
 104:src/riscv.cpp ****                 *retHandle=handle;
 1023              		.loc 1 104 42 is_stmt 0
 1024 03b0 033704FD 		ld	a4,-48(s0)
 1025              	.LVL48:
 105:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 1026              		.loc 1 105 17 is_stmt 1
 105:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 1027              		.loc 1 105 27 is_stmt 0
 1028 03b4 2330A700 		sd	a0,0(a4)
 106:src/riscv.cpp ****             }
 1029              		.loc 1 106 17 is_stmt 1
 106:src/riscv.cpp ****             }
 1030              		.loc 1 106 62 is_stmt 0
 1031 03b8 93070000 		li	a5,0
 1032              	#APP
 1033              	# 106 "src/riscv.cpp" 1
 1034              		sd a5, 0x50(fp)
GAS LISTING /tmp/ccBOrECW.s 			page 30


 1035              	# 0 "" 2
 1036              	#NO_APP
 1037 03c0 6FF01FF2 		j	.L28
 1038              	.LVL49:
 1039              	.L58:
 1040              	.LBE137:
 101:src/riscv.cpp ****             }
 1041              		.loc 1 101 17 is_stmt 1
 101:src/riscv.cpp ****             }
 1042              		.loc 1 101 63 is_stmt 0
 1043 03c4 9307F0FF 		li	a5,-1
 1044              	#APP
 1045              	# 101 "src/riscv.cpp" 1
 1046              		sd a5, 0x50(fp)
 1047              	# 0 "" 2
 1048              	#NO_APP
 1049 03cc 6FF05FF1 		j	.L28
 1050              	.LVL50:
 1051              	.L53:
 1052              	.LBE136:
 1053              	.LBE135:
 1054              	.LBB138:
 1055              	.LBB129:
 111:src/riscv.cpp ****             int stat=handle->wait();
 1056              		.loc 1 111 13 is_stmt 1
 111:src/riscv.cpp ****             int stat=handle->wait();
 1057              		.loc 1 111 34 is_stmt 0
 1058 03d0 033504FD 		ld	a0,-48(s0)
 1059              	.LVL51:
 112:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1060              		.loc 1 112 13 is_stmt 1
 112:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1061              		.loc 1 112 34 is_stmt 0
 1062 03d4 97000000 		call	_ZN4_sem4waitEv@plt
 1062      E7800000 
 1063              	.LVL52:
 113:src/riscv.cpp ****         }
 1064              		.loc 1 113 13 is_stmt 1
 113:src/riscv.cpp ****         }
 1065              		.loc 1 113 61 is_stmt 0
 1066              	#APP
 1067              	# 113 "src/riscv.cpp" 1
 1068              		sd a0, 0x50(fp)
 1069              	# 0 "" 2
 1070              	#NO_APP
 1071              	.LBE129:
 1072 03e0 6FF01FF0 		j	.L28
 1073              	.LVL53:
 1074              	.L54:
 1075              	.LBB130:
 1076              	.LBB124:
 117:src/riscv.cpp ****             int stat=handle->close();
 1077              		.loc 1 117 13 is_stmt 1
 117:src/riscv.cpp ****             int stat=handle->close();
 1078              		.loc 1 117 34 is_stmt 0
 1079 03e4 033504FD 		ld	a0,-48(s0)
 1080              	.LVL54:
GAS LISTING /tmp/ccBOrECW.s 			page 31


 118:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1081              		.loc 1 118 13 is_stmt 1
 118:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1082              		.loc 1 118 35 is_stmt 0
 1083 03e8 97000000 		call	_ZN4_sem5closeEv@plt
 1083      E7800000 
 1084              	.LVL55:
 119:src/riscv.cpp ****         }
 1085              		.loc 1 119 13 is_stmt 1
 119:src/riscv.cpp ****         }
 1086              		.loc 1 119 61 is_stmt 0
 1087              	#APP
 1088              	# 119 "src/riscv.cpp" 1
 1089              		sd a0, 0x50(fp)
 1090              	# 0 "" 2
 1091              	#NO_APP
 1092              	.LBE124:
 1093 03f4 6FF0DFEE 		j	.L28
 1094              	.LVL56:
 1095              	.L55:
 1096              	.LBB125:
 1097              	.LBB120:
 123:src/riscv.cpp ****             int stat=handle->signal();
 1098              		.loc 1 123 13 is_stmt 1
 123:src/riscv.cpp ****             int stat=handle->signal();
 1099              		.loc 1 123 34 is_stmt 0
 1100 03f8 033504FD 		ld	a0,-48(s0)
 1101              	.LVL57:
 124:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1102              		.loc 1 124 13 is_stmt 1
 124:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1103              		.loc 1 124 36 is_stmt 0
 1104 03fc 97000000 		call	_ZN4_sem6signalEv@plt
 1104      E7800000 
 1105              	.LVL58:
 125:src/riscv.cpp ****         }
 1106              		.loc 1 125 13 is_stmt 1
 125:src/riscv.cpp ****         }
 1107              		.loc 1 125 61 is_stmt 0
 1108              	#APP
 1109              	# 125 "src/riscv.cpp" 1
 1110              		sd a0, 0x50(fp)
 1111              	# 0 "" 2
 1112              	#NO_APP
 1113              	.LBE120:
 1114 0408 6FF09FED 		j	.L28
 1115              	.LVL59:
 1116              	.L56:
 1117              	.LBB121:
 129:src/riscv.cpp ****         }
 1118              		.loc 1 129 13 is_stmt 1
 129:src/riscv.cpp ****         }
 1119              		.loc 1 129 22 is_stmt 0
 1120 040c 033504FD 		ld	a0,-48(s0)
 1121 0410 97000000 		call	_ZN3TCB4joinEPS_@plt
 1121      E7800000 
 1122              	.LVL60:
GAS LISTING /tmp/ccBOrECW.s 			page 32


 1123 0418 6FF09FEC 		j	.L28
 1124              	.L26:
 1125              	.LBE121:
 1126              	.LBE125:
 1127              	.LBE130:
 1128              	.LBE138:
 1129              	.LBE144:
 1130              	.LBE152:
 1131              	.LBE160:
 1132              	.LBE170:
 1133              	.LBE183:
 1134              	.LBE195:
 1135              	.LBE208:
 1136              	.LBE225:
 1137              	.LBE238:
 143:src/riscv.cpp ****         printInt(scause);
 1138              		.loc 1 143 9 is_stmt 1
 143:src/riscv.cpp ****         printInt(scause);
 1139              		.loc 1 143 20 is_stmt 0
 1140 041c 17050000 		lla	a0,.LC0
 1140      13050500 
 1141 0424 97000000 		call	_Z11printStringPKc@plt
 1141      E7800000 
 1142              	.LVL61:
 144:src/riscv.cpp ****         printString("\nsepc:");
 1143              		.loc 1 144 9 is_stmt 1
 144:src/riscv.cpp ****         printString("\nsepc:");
 1144              		.loc 1 144 17 is_stmt 0
 1145 042c 13060000 		li	a2,0
 1146 0430 9305A000 		li	a1,10
 1147 0434 1B850400 		sext.w	a0,s1
 1148 0438 97000000 		call	_Z8printIntiii@plt
 1148      E7800000 
 1149              	.LVL62:
 145:src/riscv.cpp ****         printInt(r_sepc());
 1150              		.loc 1 145 9 is_stmt 1
 145:src/riscv.cpp ****         printInt(r_sepc());
 1151              		.loc 1 145 20 is_stmt 0
 1152 0440 17050000 		lla	a0,.LC1
 1152      13050500 
 1153 0448 97000000 		call	_Z11printStringPKc@plt
 1153      E7800000 
 1154              	.LVL63:
 146:src/riscv.cpp ****         printString("\n");
 1155              		.loc 1 146 9 is_stmt 1
 1156              	.LBB239:
 1157              	.LBB240:
  83:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 1158              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return sepc;
 1159              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return sepc;
 1160              		.loc 2 84 60 is_stmt 0
 1161              	#APP
 1162              	# 84 "src/../h/riscv.hpp" 1
 1163              		csrr a5, sepc
 1164              	# 0 "" 2
GAS LISTING /tmp/ccBOrECW.s 			page 33


 1165              	#NO_APP
 1166 0454 2338F4FA 		sd	a5,-80(s0)
  85:src/../h/riscv.hpp **** }
 1167              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 1168              		.loc 2 85 12 is_stmt 0
 1169 0458 033504FB 		ld	a0,-80(s0)
 1170              	.LBE240:
 1171              	.LBE239:
 146:src/riscv.cpp ****         printString("\n");
 1172              		.loc 1 146 17
 1173 045c 13060000 		li	a2,0
 1174 0460 9305A000 		li	a1,10
 1175 0464 1B050500 		sext.w	a0,a0
 1176 0468 97000000 		call	_Z8printIntiii@plt
 1176      E7800000 
 1177              	.LVL64:
 147:src/riscv.cpp ****         while(true);
 1178              		.loc 1 147 9 is_stmt 1
 147:src/riscv.cpp ****         while(true);
 1179              		.loc 1 147 20 is_stmt 0
 1180 0470 17050000 		lla	a0,.LC2
 1180      13050500 
 1181 0478 97000000 		call	_Z11printStringPKc@plt
 1181      E7800000 
 1182              	.LVL65:
 1183              	.L42:
 148:src/riscv.cpp ****     }
 1184              		.loc 1 148 9 is_stmt 1 discriminator 1
 148:src/riscv.cpp ****     }
 1185              		.loc 1 148 9 discriminator 1
 1186 0480 6F000000 		j	.L42
 1187              	.LBE253:
 1188              		.cfi_endproc
 1189              	.LFE34:
 1191              		.align	2
 1192              		.globl	_ZN5Riscv18updateSleepingListEv
 1194              	_ZN5Riscv18updateSleepingListEv:
 1195              	.LFB39:
 249:src/riscv.cpp **** 
 250:src/riscv.cpp **** void Riscv::updateSleepingList() {
 1196              		.loc 1 250 34
 1197              		.cfi_startproc
 251:src/riscv.cpp ****     if(headSleeping!=nullptr){
 1198              		.loc 1 251 5
 1199              	.LBB254:
 1200              		.loc 1 251 20 is_stmt 0
 1201 0484 97070000 		ld	a5,.LANCHOR0
 1201      83B70700 
 1202              		.loc 1 251 5
 1203 048c 638A0700 		beqz	a5,.L63
 1204              	.LBE254:
 252:src/riscv.cpp ****         if(--headSleeping->toSleepRel==0){
 1205              		.loc 1 252 9 is_stmt 1
 1206              	.LBB262:
 1207              	.LBB255:
 1208              		.loc 1 252 28 is_stmt 0
GAS LISTING /tmp/ccBOrECW.s 			page 34


 1209 0490 03B78700 		ld	a4,8(a5)
 1210              		.loc 1 252 12
 1211 0494 1307F7FF 		addi	a4,a4,-1
 1212              		.loc 1 252 38
 1213 0498 23B4E700 		sd	a4,8(a5)
 1214              		.loc 1 252 9
 1215 049c 63040700 		beqz	a4,.L66
 1216              	.L63:
 1217 04a0 67800000 		ret
 1218              	.L66:
 1219              	.LBE255:
 1220              	.LBE262:
 250:src/riscv.cpp ****     if(headSleeping!=nullptr){
 1221              		.loc 1 250 34
 1222 04a4 130101FF 		addi	sp,sp,-16
 1223              		.cfi_def_cfa_offset 16
 1224 04a8 23341100 		sd	ra,8(sp)
 1225 04ac 23308100 		sd	s0,0(sp)
 1226              		.cfi_offset 1, -8
 1227              		.cfi_offset 8, -16
 1228 04b0 13040101 		addi	s0,sp,16
 1229              		.cfi_def_cfa 8, 0
 1230              	.LBB263:
 1231              	.LBB261:
 1232              	.LBB256:
 253:src/riscv.cpp ****             headSleeping->thr->setSleeping(false);
 1233              		.loc 1 253 13 is_stmt 1
 1234              		.loc 1 253 27 is_stmt 0
 1235 04b4 03B70700 		ld	a4,0(a5)
 1236              	.LVL66:
 1237              	.LBB257:
 1238              	.LBB258:
 1239              		.loc 3 41 9 is_stmt 1
 1240              		.loc 3 41 23 is_stmt 0
 1241 04b8 A3000704 		sb	zero,65(a4)
 1242              	.LVL67:
 1243              	.LBE258:
 1244              	.LBE257:
 254:src/riscv.cpp ****             Scheduler::put(headSleeping->thr);
 1245              		.loc 1 254 13 is_stmt 1
 1246              		.loc 1 254 27 is_stmt 0
 1247 04bc 03B50700 		ld	a0,0(a5)
 1248 04c0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1248      E7800000 
 1249              	.LVL68:
 255:src/riscv.cpp ****             SleepingElem* old=headSleeping;
 1250              		.loc 1 255 13 is_stmt 1
 1251              		.loc 1 255 27 is_stmt 0
 1252 04c8 97070000 		lla	a5,.LANCHOR0
 1252      93870700 
 1253 04d0 03B50700 		ld	a0,0(a5)
 1254              	.LVL69:
 256:src/riscv.cpp ****             headSleeping=headSleeping->next;
 1255              		.loc 1 256 13 is_stmt 1
 1256              		.loc 1 256 40 is_stmt 0
 1257 04d4 03370501 		ld	a4,16(a0)
 1258              		.loc 1 256 25
GAS LISTING /tmp/ccBOrECW.s 			page 35


 1259 04d8 23B0E700 		sd	a4,0(a5)
 257:src/riscv.cpp ****             MemoryAllocator::free(old);
 1260              		.loc 1 257 13 is_stmt 1
 1261              		.loc 1 257 34 is_stmt 0
 1262 04dc 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 1262      E7800000 
 1263              	.LVL70:
 1264              	.L61:
 258:src/riscv.cpp ****             while(headSleeping!=nullptr && headSleeping->toSleepRel==0){
 1265              		.loc 1 258 13 is_stmt 1
 1266              		.loc 1 258 41
 1267              		.loc 1 258 31 is_stmt 0
 1268 04e4 97070000 		ld	a5,.LANCHOR0
 1268      83B70700 
 1269              		.loc 1 258 41
 1270 04ec 63800704 		beqz	a5,.L59
 1271              		.loc 1 258 58 discriminator 1
 1272 04f0 03B78700 		ld	a4,8(a5)
 1273              		.loc 1 258 41 discriminator 1
 1274 04f4 631C0702 		bnez	a4,.L59
 259:src/riscv.cpp ****                 headSleeping->thr->setSleeping(false);
 1275              		.loc 1 259 17 is_stmt 1
 1276              		.loc 1 259 31 is_stmt 0
 1277 04f8 03B70700 		ld	a4,0(a5)
 1278              	.LVL71:
 1279              	.LBB259:
 1280              	.LBB260:
 1281              		.loc 3 41 9 is_stmt 1
 1282              		.loc 3 41 23 is_stmt 0
 1283 04fc A3000704 		sb	zero,65(a4)
 1284              	.LVL72:
 1285              	.LBE260:
 1286              	.LBE259:
 260:src/riscv.cpp ****                 Scheduler::put(headSleeping->thr);
 1287              		.loc 1 260 17 is_stmt 1
 1288              		.loc 1 260 31 is_stmt 0
 1289 0500 03B50700 		ld	a0,0(a5)
 1290 0504 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1290      E7800000 
 1291              	.LVL73:
 261:src/riscv.cpp ****                 old=headSleeping;
 1292              		.loc 1 261 17 is_stmt 1
 1293              		.loc 1 261 20 is_stmt 0
 1294 050c 97070000 		lla	a5,.LANCHOR0
 1294      93870700 
 1295 0514 03B50700 		ld	a0,0(a5)
 1296              	.LVL74:
 262:src/riscv.cpp ****                 headSleeping=headSleeping->next;
 1297              		.loc 1 262 17 is_stmt 1
 1298              		.loc 1 262 44 is_stmt 0
 1299 0518 03370501 		ld	a4,16(a0)
 1300              		.loc 1 262 29
 1301 051c 23B0E700 		sd	a4,0(a5)
 263:src/riscv.cpp ****                 MemoryAllocator::free(old);
 1302              		.loc 1 263 17 is_stmt 1
 1303              		.loc 1 263 38 is_stmt 0
 1304 0520 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
GAS LISTING /tmp/ccBOrECW.s 			page 36


 1304      E7800000 
 1305              	.LVL75:
 258:src/riscv.cpp ****                 headSleeping->thr->setSleeping(false);
 1306              		.loc 1 258 13
 1307 0528 6FF0DFFB 		j	.L61
 1308              	.L59:
 1309              	.LBE256:
 1310              	.LBE261:
 1311              	.LBE263:
 264:src/riscv.cpp ****             }
 265:src/riscv.cpp ****         }
 266:src/riscv.cpp ****     }
 267:src/riscv.cpp **** }
 1312              		.loc 1 267 1
 1313 052c 83308100 		ld	ra,8(sp)
 1314              		.cfi_restore 1
 1315 0530 03340100 		ld	s0,0(sp)
 1316              		.cfi_restore 8
 1317              		.cfi_def_cfa 2, 16
 1318 0534 13010101 		addi	sp,sp,16
 1319              		.cfi_def_cfa_offset 0
 1320 0538 67800000 		jr	ra
 1321              		.cfi_endproc
 1322              	.LFE39:
 1324              		.align	2
 1325              		.globl	_ZN5Riscv14timerInterruptEv
 1327              	_ZN5Riscv14timerInterruptEv:
 1328              	.LFB35:
 153:src/riscv.cpp ****     uint64 scause=r_scause();
 1329              		.loc 1 153 30 is_stmt 1
 1330              		.cfi_startproc
 1331 053c 130101FC 		addi	sp,sp,-64
 1332              		.cfi_def_cfa_offset 64
 1333 0540 233C1102 		sd	ra,56(sp)
 1334 0544 23388102 		sd	s0,48(sp)
 1335              		.cfi_offset 1, -8
 1336              		.cfi_offset 8, -16
 1337 0548 13040104 		addi	s0,sp,64
 1338              		.cfi_def_cfa 8, 0
 154:src/riscv.cpp ****     if(scause==0x8000000000000001UL){
 1339              		.loc 1 154 5
 1340              	.LBB264:
 1341              	.LBB265:
  74:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 1342              		.loc 2 74 5
  75:src/../h/riscv.hpp ****     return scause;
 1343              		.loc 2 75 5
  75:src/../h/riscv.hpp ****     return scause;
 1344              		.loc 2 75 68 is_stmt 0
 1345              	#APP
 1346              	# 75 "src/../h/riscv.hpp" 1
 1347              		csrr a5, scause
 1348              	# 0 "" 2
 1349              	#NO_APP
 1350 0550 233CF4FC 		sd	a5,-40(s0)
  76:src/../h/riscv.hpp **** }
 1351              		.loc 2 76 5 is_stmt 1
GAS LISTING /tmp/ccBOrECW.s 			page 37


  76:src/../h/riscv.hpp **** }
 1352              		.loc 2 76 12 is_stmt 0
 1353 0554 033784FD 		ld	a4,-40(s0)
 1354              	.LVL76:
 1355              	.LBE265:
 1356              	.LBE264:
 155:src/riscv.cpp ****         //prekid od tajmera, softverski prekid
 1357              		.loc 1 155 5 is_stmt 1
 1358              	.LBB266:
 1359 0558 9307F0FF 		li	a5,-1
 1360 055c 9397F703 		slli	a5,a5,63
 1361 0560 93871700 		addi	a5,a5,1
 1362 0564 630AF700 		beq	a4,a5,.L71
 1363              	.LVL77:
 1364              	.L67:
 1365              	.LBE266:
 171:src/riscv.cpp **** 
 1366              		.loc 1 171 1 is_stmt 0
 1367 0568 83308103 		ld	ra,56(sp)
 1368              		.cfi_remember_state
 1369              		.cfi_restore 1
 1370 056c 03340103 		ld	s0,48(sp)
 1371              		.cfi_restore 8
 1372              		.cfi_def_cfa 2, 64
 1373 0570 13010104 		addi	sp,sp,64
 1374              		.cfi_def_cfa_offset 0
 1375 0574 67800000 		jr	ra
 1376              	.LVL78:
 1377              	.L71:
 1378              		.cfi_restore_state
 1379              	.LBB284:
 1380              	.LBB267:
 158:src/riscv.cpp **** 
 1381              		.loc 1 158 9 is_stmt 1
 158:src/riscv.cpp **** 
 1382              		.loc 1 158 27 is_stmt 0
 1383 0578 97000000 		call	_ZN5Riscv18updateSleepingListEv
 1383      E7800000 
 1384              	.LVL79:
 160:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 1385              		.loc 1 160 9 is_stmt 1
 160:src/riscv.cpp ****         if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 1386              		.loc 1 160 30 is_stmt 0
 1387 0580 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 1387      03370700 
 1388 0588 83370700 		ld	a5,0(a4)
 1389 058c 93871700 		addi	a5,a5,1
 1390 0590 2330F700 		sd	a5,0(a4)
 161:src/riscv.cpp ****             uint64 volatile sepc=r_sepc();
 1391              		.loc 1 161 9 is_stmt 1
 1392              	.LBB268:
 161:src/riscv.cpp ****             uint64 volatile sepc=r_sepc();
 1393              		.loc 1 161 61 is_stmt 0
 1394 0594 17070000 		la	a4,_ZN3TCB7runningE
 1394      03370700 
 1395 059c 03370700 		ld	a4,0(a4)
 1396              	.LVL80:
GAS LISTING /tmp/ccBOrECW.s 			page 38


 1397              	.LBB269:
 1398              	.LBB270:
  33:src/../h/../h/TCB.hpp ****     }
 1399              		.loc 3 33 9 is_stmt 1
  33:src/../h/../h/TCB.hpp ****     }
 1400              		.loc 3 33 16 is_stmt 0
 1401 05a0 03378702 		ld	a4,40(a4)
 1402              	.LVL81:
 1403              	.LBE270:
 1404              	.LBE269:
 161:src/riscv.cpp ****             uint64 volatile sepc=r_sepc();
 1405              		.loc 1 161 9
 1406 05a4 63F8E700 		bgeu	a5,a4,.L72
 1407              	.L69:
 1408              	.LBE268:
 169:src/riscv.cpp ****     }
 1409              		.loc 1 169 9 is_stmt 1
 1410              	.LVL82:
 1411              	.LBB280:
 1412              	.LBB281:
 111:src/../h/riscv.hpp **** }
 1413              		.loc 2 111 5
 111:src/../h/riscv.hpp **** }
 1414              		.loc 2 111 59 is_stmt 0
 1415 05a8 93072000 		li	a5,2
 1416              	#APP
 1417              	# 111 "src/../h/riscv.hpp" 1
 1418              		csrc sip, a5
 1419              	# 0 "" 2
 1420              	.LVL83:
 1421              	#NO_APP
 1422              	.LBE281:
 1423              	.LBE280:
 1424              	.LBE267:
 1425              	.LBE284:
 171:src/riscv.cpp **** 
 1426              		.loc 1 171 1
 1427 05b0 6FF09FFB 		j	.L67
 1428              	.L72:
 1429              	.LBB285:
 1430              	.LBB283:
 1431              	.LBB282:
 1432              	.LBB271:
 162:src/riscv.cpp ****             uint64 volatile sstatus=r_sstatus();
 1433              		.loc 1 162 13 is_stmt 1
 1434              	.LBB272:
 1435              	.LBB273:
  83:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 1436              		.loc 2 83 5
  84:src/../h/riscv.hpp ****     return sepc;
 1437              		.loc 2 84 5
  84:src/../h/riscv.hpp ****     return sepc;
 1438              		.loc 2 84 60 is_stmt 0
 1439              	#APP
 1440              	# 84 "src/../h/riscv.hpp" 1
 1441              		csrr a5, sepc
 1442              	# 0 "" 2
GAS LISTING /tmp/ccBOrECW.s 			page 39


 1443              	#NO_APP
 1444 05b8 2334F4FE 		sd	a5,-24(s0)
  85:src/../h/riscv.hpp **** }
 1445              		.loc 2 85 5 is_stmt 1
  85:src/../h/riscv.hpp **** }
 1446              		.loc 2 85 12 is_stmt 0
 1447 05bc 833784FE 		ld	a5,-24(s0)
 1448              	.LBE273:
 1449              	.LBE272:
 162:src/riscv.cpp ****             uint64 volatile sstatus=r_sstatus();
 1450              		.loc 1 162 41
 1451 05c0 2334F4FC 		sd	a5,-56(s0)
 163:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 1452              		.loc 1 163 13 is_stmt 1
 1453              	.LBB274:
 1454              	.LBB275:
 129:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 1455              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return sstatus;
 1456              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return sstatus;
 1457              		.loc 2 130 72 is_stmt 0
 1458              	#APP
 1459              	# 130 "src/../h/riscv.hpp" 1
 1460              		csrr a5, sstatus
 1461              	# 0 "" 2
 1462              	#NO_APP
 1463 05c8 2330F4FE 		sd	a5,-32(s0)
 131:src/../h/riscv.hpp **** }
 1464              		.loc 2 131 5 is_stmt 1
 131:src/../h/riscv.hpp **** }
 1465              		.loc 2 131 12 is_stmt 0
 1466 05cc 833704FE 		ld	a5,-32(s0)
 1467              	.LBE275:
 1468              	.LBE274:
 163:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 1469              		.loc 1 163 47
 1470 05d0 2338F4FC 		sd	a5,-48(s0)
 164:src/riscv.cpp ****             TCB::dispatch();
 1471              		.loc 1 164 13 is_stmt 1
 164:src/riscv.cpp ****             TCB::dispatch();
 1472              		.loc 1 164 34 is_stmt 0
 1473 05d4 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1473      83B70700 
 1474 05dc 23B00700 		sd	zero,0(a5)
 165:src/riscv.cpp ****             w_sstatus(sstatus);
 1475              		.loc 1 165 13 is_stmt 1
 165:src/riscv.cpp ****             w_sstatus(sstatus);
 1476              		.loc 1 165 26 is_stmt 0
 1477 05e0 97000000 		call	_ZN3TCB8dispatchEv@plt
 1477      E7800000 
 1478              	.LVL84:
 166:src/riscv.cpp ****             w_sepc(sepc);
 1479              		.loc 1 166 13 is_stmt 1
 166:src/riscv.cpp ****             w_sepc(sepc);
 1480              		.loc 1 166 22 is_stmt 0
 1481 05e8 833704FD 		ld	a5,-48(s0)
GAS LISTING /tmp/ccBOrECW.s 			page 40


 1482              	.LVL85:
 1483              	.LBB276:
 1484              	.LBB277:
 134:src/../h/riscv.hpp **** }
 1485              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 1486              		.loc 2 134 72 is_stmt 0
 1487              	#APP
 1488              	# 134 "src/../h/riscv.hpp" 1
 1489              		csrw sstatus, a5
 1490              	# 0 "" 2
 1491              	.LVL86:
 1492              	#NO_APP
 1493              	.LBE277:
 1494              	.LBE276:
 167:src/riscv.cpp ****         }
 1495              		.loc 1 167 13 is_stmt 1
 167:src/riscv.cpp ****         }
 1496              		.loc 1 167 19 is_stmt 0
 1497 05f0 833784FC 		ld	a5,-56(s0)
 1498              	.LVL87:
 1499              	.LBB278:
 1500              	.LBB279:
  88:src/../h/riscv.hpp **** }
 1501              		.loc 2 88 5 is_stmt 1
  88:src/../h/riscv.hpp **** }
 1502              		.loc 2 88 60 is_stmt 0
 1503              	#APP
 1504              	# 88 "src/../h/riscv.hpp" 1
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 1505              		csrw sepc, a5
 1506              	# 0 "" 2
 1507              		.loc 2 89 1
 1508              	#NO_APP
 1509 05f8 6FF01FFB 		j	.L69
 1510              	.LBE279:
 1511              	.LBE278:
 1512              	.LBE271:
 1513              	.LBE282:
 1514              	.LBE283:
 1515              	.LBE285:
 1516              		.cfi_endproc
 1517              	.LFE35:
 1519              		.globl	_ZN5Riscv12headSleepingE
 1520              		.bss
 1521              		.align	3
 1522              		.set	.LANCHOR0,. + 0
 1525              	_ZN5Riscv12headSleepingE:
 1526 0000 00000000 		.zero	8
 1526      00000000 
 1527              		.text
 1528              	.Letext0:
 1529              		.file 4 "src/../h/../lib/hw.h"
 1530              		.file 5 "src/../h/MemoryAllocator.hpp"
 1531              		.file 6 "src/../h/_sem.hpp"
 1532              		.file 7 "src/../h/../h/list.hpp"
 1533              		.file 8 "src/../h/Scheduler.hpp"
GAS LISTING /tmp/ccBOrECW.s 			page 41


 1534              		.file 9 "src/../test/../h/syscall_c.hpp"
 1535              		.file 10 "src/../lib/console.h"
 1536              		.file 11 "src/../test/printing.hpp"
GAS LISTING /tmp/ccBOrECW.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccBOrECW.s:9      .text:0000000000000000 _ZN5Riscv17hardwareInterruptEv
     /tmp/ccBOrECW.s:13     .text:0000000000000000 .L0 
     /tmp/ccBOrECW.s:14     .text:0000000000000000 .L0 
     /tmp/ccBOrECW.s:15     .text:0000000000000004 .L0 
     /tmp/ccBOrECW.s:18     .text:000000000000000c .L0 
     /tmp/ccBOrECW.s:19     .text:000000000000000c .L0 
     /tmp/ccBOrECW.s:21     .text:0000000000000010 .L0 
     /tmp/ccBOrECW.s:26     .text:0000000000000010 .L0 
     /tmp/ccBOrECW.s:27     .text:0000000000000010 .L0 
     /tmp/ccBOrECW.s:28     .text:0000000000000010 .L0 
  src/../h/riscv.hpp:75     .text:0000000000000010 .L0 
     /tmp/ccBOrECW.s:36     .text:0000000000000018 .L0 
     /tmp/ccBOrECW.s:37     .text:0000000000000018 .L0 
     /tmp/ccBOrECW.s:42     .text:000000000000001c .L0 
     /tmp/ccBOrECW.s:49     .text:000000000000002c .L0 
     /tmp/ccBOrECW.s:50     .text:0000000000000030 .L0 
     /tmp/ccBOrECW.s:51     .text:0000000000000030 .L0 
     /tmp/ccBOrECW.s:53     .text:0000000000000034 .L0 
     /tmp/ccBOrECW.s:54     .text:0000000000000034 .L0 
     /tmp/ccBOrECW.s:56     .text:0000000000000038 .L0 
     /tmp/ccBOrECW.s:60     .text:000000000000003c .L0 
     /tmp/ccBOrECW.s:62     .text:000000000000003c .L0 
     /tmp/ccBOrECW.s:63     .text:000000000000003c .L0 
     /tmp/ccBOrECW.s:66     .text:0000000000000044 .L0 
     /tmp/ccBOrECW.s:67     .text:0000000000000048 .L0 
     /tmp/ccBOrECW.s:73     .text:0000000000000048 _ZN5Riscv10popSppSpieEv
     /tmp/ccBOrECW.s:76     .text:0000000000000048 .L0 
     /tmp/ccBOrECW.s:77     .text:0000000000000048 .L0 
     /tmp/ccBOrECW.s:78     .text:000000000000004c .L0 
     /tmp/ccBOrECW.s:80     .text:0000000000000050 .L0 
     /tmp/ccBOrECW.s:82     .text:0000000000000054 .L0 
     /tmp/ccBOrECW.s:87     .text:0000000000000054 .L0 
     /tmp/ccBOrECW.s:88     .text:0000000000000054 .L0 
     /tmp/ccBOrECW.s:89     .text:0000000000000054 .L0 
     /tmp/ccBOrECW.s:99     .text:000000000000005c .L0 
     /tmp/ccBOrECW.s:100    .text:000000000000005c .L0 
     /tmp/ccBOrECW.s:104    .text:000000000000006c .L0 
     /tmp/ccBOrECW.s:109    .text:0000000000000070 .L0 
     /tmp/ccBOrECW.s:110    .text:0000000000000070 .L0 
     /tmp/ccBOrECW.s:111    .text:0000000000000070 .L0 
     /tmp/ccBOrECW.s:122    .text:0000000000000078 .L0 
       src/riscv.cpp:200    .text:0000000000000078 .L0 
     /tmp/ccBOrECW.s:128    .text:000000000000007c .L0 
       src/riscv.cpp:201    .text:000000000000007c .L0 
     /tmp/ccBOrECW.s:134    .text:0000000000000080 .L0 
     /tmp/ccBOrECW.s:135    .text:0000000000000084 .L0 
     /tmp/ccBOrECW.s:136    .text:0000000000000084 .L0 
     /tmp/ccBOrECW.s:137    .text:0000000000000084 .L0 
     /tmp/ccBOrECW.s:139    .text:0000000000000088 .L0 
     /tmp/ccBOrECW.s:142    .text:000000000000008c .L0 
     /tmp/ccBOrECW.s:147    .text:000000000000008c .L0 
     /tmp/ccBOrECW.s:148    .text:000000000000008c .L0 
     /tmp/ccBOrECW.s:149    .text:000000000000008c .L0 
     /tmp/ccBOrECW.s:156    .text:0000000000000094 .L0 
     /tmp/ccBOrECW.s:159    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 43


     /tmp/ccBOrECW.s:165    .text:0000000000000098 _ZN5Riscv10putToSleepEm
     /tmp/ccBOrECW.s:168    .text:0000000000000098 .L0 
     /tmp/ccBOrECW.s:170    .text:0000000000000098 .L0 
     /tmp/ccBOrECW.s:171    .text:0000000000000098 .L0 
     /tmp/ccBOrECW.s:173    .text:000000000000009c .L0 
     /tmp/ccBOrECW.s:174    .text:00000000000000a0 .L0 
     /tmp/ccBOrECW.s:179    .text:00000000000000b0 .L0 
     /tmp/ccBOrECW.s:180    .text:00000000000000b0 .L0 
     /tmp/ccBOrECW.s:181    .text:00000000000000b0 .L0 
     /tmp/ccBOrECW.s:182    .text:00000000000000b0 .L0 
     /tmp/ccBOrECW.s:184    .text:00000000000000b4 .L0 
     /tmp/ccBOrECW.s:187    .text:00000000000000b8 .L0 
     /tmp/ccBOrECW.s:188    .text:00000000000000b8 .L0 
     /tmp/ccBOrECW.s:195    .text:00000000000000c4 .L0 
     /tmp/ccBOrECW.s:196    .text:00000000000000c4 .L0 
     /tmp/ccBOrECW.s:202    .text:00000000000000cc .L0 
     /tmp/ccBOrECW.s:203    .text:00000000000000cc .L0 
     /tmp/ccBOrECW.s:208    .text:00000000000000d8 .L0 
     /tmp/ccBOrECW.s:209    .text:00000000000000d8 .L0 
     /tmp/ccBOrECW.s:213    .text:00000000000000e0 .L0 
     /tmp/ccBOrECW.s:214    .text:00000000000000e0 .L0 
     /tmp/ccBOrECW.s:216    .text:00000000000000e8 .L0 
     /tmp/ccBOrECW.s:221    .text:00000000000000ec .L0 
     /tmp/ccBOrECW.s:222    .text:00000000000000ec .L0 
     /tmp/ccBOrECW.s:224    .text:00000000000000f0 .L0 
     /tmp/ccBOrECW.s:226    .text:00000000000000f4 .L0 
     /tmp/ccBOrECW.s:227    .text:00000000000000f4 .L0 
     /tmp/ccBOrECW.s:229    .text:00000000000000f8 .L0 
     /tmp/ccBOrECW.s:230    .text:00000000000000f8 .L0 
     /tmp/ccBOrECW.s:232    .text:00000000000000fc .L0 
     /tmp/ccBOrECW.s:233    .text:00000000000000fc .L0 
     /tmp/ccBOrECW.s:237    .text:0000000000000108 .L0 
     /tmp/ccBOrECW.s:238    .text:0000000000000108 .L0 
     /tmp/ccBOrECW.s:243    .text:0000000000000110 .L0 
     /tmp/ccBOrECW.s:244    .text:0000000000000110 .L0 
     /tmp/ccBOrECW.s:247    .text:000000000000011c .L0 
     /tmp/ccBOrECW.s:248    .text:000000000000011c .L0 
     /tmp/ccBOrECW.s:251    .text:0000000000000124 .L0 
     /tmp/ccBOrECW.s:252    .text:0000000000000124 .L0 
     /tmp/ccBOrECW.s:254    .text:0000000000000128 .L0 
     /tmp/ccBOrECW.s:255    .text:000000000000012c .L0 
     /tmp/ccBOrECW.s:256    .text:000000000000012c .L0 
     /tmp/ccBOrECW.s:258    .text:0000000000000130 .L0 
     /tmp/ccBOrECW.s:259    .text:0000000000000130 .L0 
     /tmp/ccBOrECW.s:261    .text:0000000000000134 .L0 
     /tmp/ccBOrECW.s:264    .text:0000000000000138 .L0 
     /tmp/ccBOrECW.s:266    .text:000000000000013c .L0 
     /tmp/ccBOrECW.s:270    .text:0000000000000140 .L0 
     /tmp/ccBOrECW.s:273    .text:0000000000000140 .L0 
     /tmp/ccBOrECW.s:274    .text:0000000000000140 .L0 
     /tmp/ccBOrECW.s:276    .text:0000000000000144 .L0 
     /tmp/ccBOrECW.s:277    .text:0000000000000144 .L0 
     /tmp/ccBOrECW.s:279    .text:0000000000000148 .L0 
     /tmp/ccBOrECW.s:280    .text:0000000000000148 .L0 
     /tmp/ccBOrECW.s:286    .text:0000000000000154 .L0 
     /tmp/ccBOrECW.s:287    .text:0000000000000154 .L0 
     /tmp/ccBOrECW.s:290    .text:0000000000000158 .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 44


     /tmp/ccBOrECW.s:291    .text:0000000000000158 .L0 
     /tmp/ccBOrECW.s:295    .text:000000000000015c .L0 
     /tmp/ccBOrECW.s:296    .text:000000000000015c .L0 
     /tmp/ccBOrECW.s:297    .text:000000000000015c .L0 
     /tmp/ccBOrECW.s:299    .text:0000000000000160 .L0 
     /tmp/ccBOrECW.s:301    .text:0000000000000164 .L0 
     /tmp/ccBOrECW.s:303    .text:0000000000000168 .L0 
     /tmp/ccBOrECW.s:304    .text:0000000000000168 .L0 
     /tmp/ccBOrECW.s:307    .text:000000000000016c .L0 
     /tmp/ccBOrECW.s:308    .text:000000000000016c .L0 
     /tmp/ccBOrECW.s:309    .text:000000000000016c .L0 
     /tmp/ccBOrECW.s:311    .text:0000000000000170 .L0 
     /tmp/ccBOrECW.s:314    .text:0000000000000174 .L0 
     /tmp/ccBOrECW.s:317    .text:0000000000000178 .L0 
     /tmp/ccBOrECW.s:319    .text:000000000000017c .L0 
     /tmp/ccBOrECW.s:320    .text:000000000000017c .L0 
     /tmp/ccBOrECW.s:322    .text:0000000000000180 .L0 
     /tmp/ccBOrECW.s:323    .text:0000000000000180 .L0 
     /tmp/ccBOrECW.s:328    .text:000000000000018c .L0 
     /tmp/ccBOrECW.s:329    .text:000000000000018c .L0 
     /tmp/ccBOrECW.s:331    .text:0000000000000190 .L0 
     /tmp/ccBOrECW.s:332    .text:0000000000000190 .L0 
     /tmp/ccBOrECW.s:336    .text:0000000000000198 .L0 
     /tmp/ccBOrECW.s:337    .text:0000000000000198 .L0 
     /tmp/ccBOrECW.s:341    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:342    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:343    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:344    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:345    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:350    .text:00000000000001a0 .L0 
     /tmp/ccBOrECW.s:353    .text:00000000000001a4 .L0 
     /tmp/ccBOrECW.s:354    .text:00000000000001a8 .L0 
     /tmp/ccBOrECW.s:371    .text:00000000000001a8 _ZN5Riscv20handleEcallExceptionEv
     /tmp/ccBOrECW.s:374    .text:00000000000001a8 .L0 
     /tmp/ccBOrECW.s:375    .text:00000000000001a8 .L0 
     /tmp/ccBOrECW.s:376    .text:00000000000001ac .L0 
     /tmp/ccBOrECW.s:380    .text:00000000000001b8 .L0 
     /tmp/ccBOrECW.s:381    .text:00000000000001b8 .L0 
     /tmp/ccBOrECW.s:382    .text:00000000000001b8 .L0 
     /tmp/ccBOrECW.s:384    .text:00000000000001bc .L0 
     /tmp/ccBOrECW.s:388    .text:00000000000001bc .L0 
     /tmp/ccBOrECW.s:389    .text:00000000000001bc .L0 
     /tmp/ccBOrECW.s:390    .text:00000000000001bc .L0 
  src/../h/riscv.hpp:75     .text:00000000000001bc .L0 
     /tmp/ccBOrECW.s:398    .text:00000000000001c4 .L0 
     /tmp/ccBOrECW.s:399    .text:00000000000001c4 .L0 
     /tmp/ccBOrECW.s:404    .text:00000000000001c8 .L0 
     /tmp/ccBOrECW.s:405    .text:00000000000001c8 .L0 
       src/riscv.cpp:19     .text:00000000000001c8 .L0 
     /tmp/ccBOrECW.s:413    .text:00000000000001d0 .L0 
     /tmp/ccBOrECW.s:414    .text:00000000000001d0 .L0 
       src/riscv.cpp:21     .text:00000000000001d0 .L0 
     /tmp/ccBOrECW.s:422    .text:00000000000001d8 .L0 
     /tmp/ccBOrECW.s:423    .text:00000000000001d8 .L0 
       src/riscv.cpp:23     .text:00000000000001d8 .L0 
     /tmp/ccBOrECW.s:431    .text:00000000000001e0 .L0 
     /tmp/ccBOrECW.s:432    .text:00000000000001e0 .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 45


       src/riscv.cpp:25     .text:00000000000001e0 .L0 
     /tmp/ccBOrECW.s:440    .text:00000000000001e8 .L0 
     /tmp/ccBOrECW.s:441    .text:00000000000001e8 .L0 
       src/riscv.cpp:27     .text:00000000000001e8 .L0 
     /tmp/ccBOrECW.s:450    .text:00000000000001f0 .L0 
     /tmp/ccBOrECW.s:451    .text:00000000000001f0 .L0 
     /tmp/ccBOrECW.s:453    .text:00000000000001f4 .L0 
     /tmp/ccBOrECW.s:459    .text:00000000000001fc .L0 
     /tmp/ccBOrECW.s:460    .text:00000000000001fc .L0 
     /tmp/ccBOrECW.s:461    .text:00000000000001fc .L0 
  src/../h/riscv.hpp:84     .text:00000000000001fc .L0 
     /tmp/ccBOrECW.s:469    .text:0000000000000204 .L0 
     /tmp/ccBOrECW.s:470    .text:0000000000000204 .L0 
     /tmp/ccBOrECW.s:474    .text:0000000000000208 .L0 
     /tmp/ccBOrECW.s:476    .text:000000000000020c .L0 
     /tmp/ccBOrECW.s:480    .text:0000000000000210 .L0 
     /tmp/ccBOrECW.s:481    .text:0000000000000210 .L0 
     /tmp/ccBOrECW.s:482    .text:0000000000000210 .L0 
  src/../h/riscv.hpp:130    .text:0000000000000210 .L0 
     /tmp/ccBOrECW.s:490    .text:0000000000000218 .L0 
     /tmp/ccBOrECW.s:491    .text:0000000000000218 .L0 
     /tmp/ccBOrECW.s:495    .text:000000000000021c .L0 
     /tmp/ccBOrECW.s:498    .text:0000000000000220 .L0 
     /tmp/ccBOrECW.s:499    .text:0000000000000220 .L0 
     /tmp/ccBOrECW.s:501    .text:0000000000000224 .L0 
     /tmp/ccBOrECW.s:511    .text:000000000000022c .L0 
     /tmp/ccBOrECW.s:512    .text:000000000000022c .L0 
     /tmp/ccBOrECW.s:514    .text:0000000000000230 .L0 
     /tmp/ccBOrECW.s:526    .text:0000000000000238 .L0 
     /tmp/ccBOrECW.s:527    .text:0000000000000238 .L0 
     /tmp/ccBOrECW.s:529    .text:000000000000023c .L0 
     /tmp/ccBOrECW.s:543    .text:0000000000000244 .L0 
     /tmp/ccBOrECW.s:544    .text:0000000000000244 .L0 
     /tmp/ccBOrECW.s:546    .text:0000000000000248 .L0 
     /tmp/ccBOrECW.s:562    .text:0000000000000250 .L0 
     /tmp/ccBOrECW.s:563    .text:0000000000000250 .L0 
     /tmp/ccBOrECW.s:565    .text:0000000000000254 .L0 
     /tmp/ccBOrECW.s:583    .text:000000000000025c .L0 
     /tmp/ccBOrECW.s:584    .text:000000000000025c .L0 
     /tmp/ccBOrECW.s:586    .text:0000000000000260 .L0 
     /tmp/ccBOrECW.s:606    .text:0000000000000268 .L0 
     /tmp/ccBOrECW.s:607    .text:0000000000000268 .L0 
     /tmp/ccBOrECW.s:609    .text:000000000000026c .L0 
     /tmp/ccBOrECW.s:631    .text:0000000000000274 .L0 
     /tmp/ccBOrECW.s:632    .text:0000000000000274 .L0 
     /tmp/ccBOrECW.s:634    .text:0000000000000278 .L0 
     /tmp/ccBOrECW.s:658    .text:0000000000000280 .L0 
     /tmp/ccBOrECW.s:659    .text:0000000000000280 .L0 
     /tmp/ccBOrECW.s:661    .text:0000000000000284 .L0 
     /tmp/ccBOrECW.s:687    .text:000000000000028c .L0 
     /tmp/ccBOrECW.s:688    .text:000000000000028c .L0 
     /tmp/ccBOrECW.s:690    .text:0000000000000290 .L0 
     /tmp/ccBOrECW.s:718    .text:0000000000000298 .L0 
     /tmp/ccBOrECW.s:719    .text:0000000000000298 .L0 
     /tmp/ccBOrECW.s:721    .text:000000000000029c .L0 
     /tmp/ccBOrECW.s:751    .text:00000000000002a4 .L0 
     /tmp/ccBOrECW.s:752    .text:00000000000002a4 .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 46


     /tmp/ccBOrECW.s:754    .text:00000000000002a8 .L0 
     /tmp/ccBOrECW.s:786    .text:00000000000002b0 .L0 
     /tmp/ccBOrECW.s:787    .text:00000000000002b0 .L0 
     /tmp/ccBOrECW.s:789    .text:00000000000002b4 .L0 
     /tmp/ccBOrECW.s:793    .text:00000000000002bc .L0 
     /tmp/ccBOrECW.s:794    .text:00000000000002bc .L0 
     /tmp/ccBOrECW.s:797    .text:00000000000002c0 .L0 
     /tmp/ccBOrECW.s:798    .text:00000000000002c0 .L0 
     /tmp/ccBOrECW.s:801    .text:00000000000002c8 .L0 
       src/riscv.cpp:135    .text:00000000000002c8 .L0 
     /tmp/ccBOrECW.s:825    .text:00000000000002d0 .L0 
     /tmp/ccBOrECW.s:826    .text:00000000000002d0 .L0 
     /tmp/ccBOrECW.s:830    .text:00000000000002dc .L0 
       src/riscv.cpp:37     .text:00000000000002dc .L0 
     /tmp/ccBOrECW.s:841    .text:00000000000002e0 .L0 
     /tmp/ccBOrECW.s:842    .text:00000000000002e0 .L0 
     /tmp/ccBOrECW.s:847    .text:00000000000002e4 .L0 
  src/../h/riscv.hpp:134    .text:00000000000002e4 .L0 
     /tmp/ccBOrECW.s:857    .text:00000000000002e8 .L0 
     /tmp/ccBOrECW.s:858    .text:00000000000002e8 .L0 
     /tmp/ccBOrECW.s:863    .text:00000000000002ec .L0 
  src/../h/riscv.hpp:88     .text:00000000000002ec .L0 
     /tmp/ccBOrECW.s:875    .text:00000000000002f0 .L0 
     /tmp/ccBOrECW.s:876    .text:00000000000002f4 .L0 
     /tmp/ccBOrECW.s:877    .text:00000000000002f4 .L0 
     /tmp/ccBOrECW.s:879    .text:00000000000002f8 .L0 
     /tmp/ccBOrECW.s:880    .text:00000000000002f8 .L0 
     /tmp/ccBOrECW.s:882    .text:00000000000002fc .L0 
     /tmp/ccBOrECW.s:885    .text:0000000000000300 .L0 
     /tmp/ccBOrECW.s:889    .text:0000000000000304 .L0 
     /tmp/ccBOrECW.s:896    .text:0000000000000304 .L0 
     /tmp/ccBOrECW.s:897    .text:0000000000000304 .L0 
     /tmp/ccBOrECW.s:901    .text:0000000000000310 .L0 
       src/riscv.cpp:42     .text:0000000000000310 .L0 
     /tmp/ccBOrECW.s:914    .text:0000000000000318 .L0 
     /tmp/ccBOrECW.s:915    .text:0000000000000318 .L0 
     /tmp/ccBOrECW.s:922    .text:000000000000032c .L0 
     /tmp/ccBOrECW.s:925    .text:0000000000000330 .L0 
     /tmp/ccBOrECW.s:926    .text:0000000000000330 .L0 
     /tmp/ccBOrECW.s:929    .text:0000000000000334 .L0 
     /tmp/ccBOrECW.s:930    .text:0000000000000334 .L0 
     /tmp/ccBOrECW.s:932    .text:0000000000000338 .L0 
     /tmp/ccBOrECW.s:933    .text:0000000000000338 .L0 
     /tmp/ccBOrECW.s:944    .text:0000000000000344 .L0 
     /tmp/ccBOrECW.s:945    .text:0000000000000344 .L0 
     /tmp/ccBOrECW.s:959    .text:0000000000000350 .L0 
     /tmp/ccBOrECW.s:960    .text:0000000000000350 .L0 
     /tmp/ccBOrECW.s:963    .text:0000000000000358 .L0 
       src/riscv.cpp:78     .text:0000000000000358 .L0 
     /tmp/ccBOrECW.s:975    .text:0000000000000360 .L0 
     /tmp/ccBOrECW.s:976    .text:0000000000000360 .L0 
     /tmp/ccBOrECW.s:979    .text:000000000000036c .L0 
     /tmp/ccBOrECW.s:980    .text:000000000000036c .L0 
     /tmp/ccBOrECW.s:987    .text:0000000000000378 .L0 
     /tmp/ccBOrECW.s:988    .text:0000000000000378 .L0 
     /tmp/ccBOrECW.s:991    .text:0000000000000380 .L0 
       src/riscv.cpp:88     .text:0000000000000380 .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 47


     /tmp/ccBOrECW.s:1003   .text:0000000000000388 .L0 
     /tmp/ccBOrECW.s:1004   .text:0000000000000388 .L0 
     /tmp/ccBOrECW.s:1013   .text:000000000000039c .L0 
     /tmp/ccBOrECW.s:1014   .text:000000000000039c .L0 
     /tmp/ccBOrECW.s:1020   .text:00000000000003ac .L0 
     /tmp/ccBOrECW.s:1023   .text:00000000000003b0 .L0 
     /tmp/ccBOrECW.s:1024   .text:00000000000003b0 .L0 
     /tmp/ccBOrECW.s:1027   .text:00000000000003b4 .L0 
     /tmp/ccBOrECW.s:1028   .text:00000000000003b4 .L0 
     /tmp/ccBOrECW.s:1030   .text:00000000000003b8 .L0 
     /tmp/ccBOrECW.s:1031   .text:00000000000003b8 .L0 
     /tmp/ccBOrECW.s:1042   .text:00000000000003c4 .L0 
     /tmp/ccBOrECW.s:1043   .text:00000000000003c4 .L0 
     /tmp/ccBOrECW.s:1057   .text:00000000000003d0 .L0 
     /tmp/ccBOrECW.s:1058   .text:00000000000003d0 .L0 
     /tmp/ccBOrECW.s:1061   .text:00000000000003d4 .L0 
     /tmp/ccBOrECW.s:1062   .text:00000000000003d4 .L0 
     /tmp/ccBOrECW.s:1065   .text:00000000000003dc .L0 
       src/riscv.cpp:113    .text:00000000000003dc .L0 
     /tmp/ccBOrECW.s:1078   .text:00000000000003e4 .L0 
     /tmp/ccBOrECW.s:1079   .text:00000000000003e4 .L0 
     /tmp/ccBOrECW.s:1082   .text:00000000000003e8 .L0 
     /tmp/ccBOrECW.s:1083   .text:00000000000003e8 .L0 
     /tmp/ccBOrECW.s:1086   .text:00000000000003f0 .L0 
       src/riscv.cpp:119    .text:00000000000003f0 .L0 
     /tmp/ccBOrECW.s:1099   .text:00000000000003f8 .L0 
     /tmp/ccBOrECW.s:1100   .text:00000000000003f8 .L0 
     /tmp/ccBOrECW.s:1103   .text:00000000000003fc .L0 
     /tmp/ccBOrECW.s:1104   .text:00000000000003fc .L0 
     /tmp/ccBOrECW.s:1107   .text:0000000000000404 .L0 
       src/riscv.cpp:125    .text:0000000000000404 .L0 
     /tmp/ccBOrECW.s:1119   .text:000000000000040c .L0 
     /tmp/ccBOrECW.s:1120   .text:000000000000040c .L0 
     /tmp/ccBOrECW.s:1139   .text:000000000000041c .L0 
     /tmp/ccBOrECW.s:1140   .text:000000000000041c .L0 
     /tmp/ccBOrECW.s:1144   .text:000000000000042c .L0 
     /tmp/ccBOrECW.s:1145   .text:000000000000042c .L0 
     /tmp/ccBOrECW.s:1151   .text:0000000000000440 .L0 
     /tmp/ccBOrECW.s:1152   .text:0000000000000440 .L0 
     /tmp/ccBOrECW.s:1158   .text:0000000000000450 .L0 
     /tmp/ccBOrECW.s:1159   .text:0000000000000450 .L0 
     /tmp/ccBOrECW.s:1160   .text:0000000000000450 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000450 .L0 
     /tmp/ccBOrECW.s:1168   .text:0000000000000458 .L0 
     /tmp/ccBOrECW.s:1169   .text:0000000000000458 .L0 
     /tmp/ccBOrECW.s:1173   .text:000000000000045c .L0 
     /tmp/ccBOrECW.s:1179   .text:0000000000000470 .L0 
     /tmp/ccBOrECW.s:1180   .text:0000000000000470 .L0 
     /tmp/ccBOrECW.s:1185   .text:0000000000000480 .L0 
     /tmp/ccBOrECW.s:1186   .text:0000000000000480 .L0 
     /tmp/ccBOrECW.s:1188   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1194   .text:0000000000000484 _ZN5Riscv18updateSleepingListEv
     /tmp/ccBOrECW.s:1197   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1198   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1200   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1201   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1203   .text:000000000000048c .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 48


     /tmp/ccBOrECW.s:1208   .text:0000000000000490 .L0 
     /tmp/ccBOrECW.s:1209   .text:0000000000000490 .L0 
     /tmp/ccBOrECW.s:1211   .text:0000000000000494 .L0 
     /tmp/ccBOrECW.s:1213   .text:0000000000000498 .L0 
     /tmp/ccBOrECW.s:1215   .text:000000000000049c .L0 
     /tmp/ccBOrECW.s:1222   .text:00000000000004a4 .L0 
     /tmp/ccBOrECW.s:1223   .text:00000000000004a8 .L0 
     /tmp/ccBOrECW.s:1226   .text:00000000000004b0 .L0 
     /tmp/ccBOrECW.s:1227   .text:00000000000004b0 .L0 
     /tmp/ccBOrECW.s:1229   .text:00000000000004b4 .L0 
     /tmp/ccBOrECW.s:1234   .text:00000000000004b4 .L0 
     /tmp/ccBOrECW.s:1235   .text:00000000000004b4 .L0 
     /tmp/ccBOrECW.s:1240   .text:00000000000004b8 .L0 
     /tmp/ccBOrECW.s:1241   .text:00000000000004b8 .L0 
     /tmp/ccBOrECW.s:1246   .text:00000000000004bc .L0 
     /tmp/ccBOrECW.s:1247   .text:00000000000004bc .L0 
     /tmp/ccBOrECW.s:1251   .text:00000000000004c8 .L0 
     /tmp/ccBOrECW.s:1252   .text:00000000000004c8 .L0 
     /tmp/ccBOrECW.s:1256   .text:00000000000004d4 .L0 
     /tmp/ccBOrECW.s:1257   .text:00000000000004d4 .L0 
     /tmp/ccBOrECW.s:1259   .text:00000000000004d8 .L0 
     /tmp/ccBOrECW.s:1261   .text:00000000000004dc .L0 
     /tmp/ccBOrECW.s:1262   .text:00000000000004dc .L0 
     /tmp/ccBOrECW.s:1266   .text:00000000000004e4 .L0 
     /tmp/ccBOrECW.s:1267   .text:00000000000004e4 .L0 
     /tmp/ccBOrECW.s:1268   .text:00000000000004e4 .L0 
     /tmp/ccBOrECW.s:1270   .text:00000000000004ec .L0 
     /tmp/ccBOrECW.s:1272   .text:00000000000004f0 .L0 
     /tmp/ccBOrECW.s:1274   .text:00000000000004f4 .L0 
     /tmp/ccBOrECW.s:1276   .text:00000000000004f8 .L0 
     /tmp/ccBOrECW.s:1277   .text:00000000000004f8 .L0 
     /tmp/ccBOrECW.s:1282   .text:00000000000004fc .L0 
     /tmp/ccBOrECW.s:1283   .text:00000000000004fc .L0 
     /tmp/ccBOrECW.s:1288   .text:0000000000000500 .L0 
     /tmp/ccBOrECW.s:1289   .text:0000000000000500 .L0 
     /tmp/ccBOrECW.s:1293   .text:000000000000050c .L0 
     /tmp/ccBOrECW.s:1294   .text:000000000000050c .L0 
     /tmp/ccBOrECW.s:1298   .text:0000000000000518 .L0 
     /tmp/ccBOrECW.s:1299   .text:0000000000000518 .L0 
     /tmp/ccBOrECW.s:1301   .text:000000000000051c .L0 
     /tmp/ccBOrECW.s:1303   .text:0000000000000520 .L0 
     /tmp/ccBOrECW.s:1304   .text:0000000000000520 .L0 
     /tmp/ccBOrECW.s:1307   .text:0000000000000528 .L0 
     /tmp/ccBOrECW.s:1313   .text:000000000000052c .L0 
     /tmp/ccBOrECW.s:1314   .text:0000000000000530 .L0 
     /tmp/ccBOrECW.s:1316   .text:0000000000000534 .L0 
     /tmp/ccBOrECW.s:1317   .text:0000000000000534 .L0 
     /tmp/ccBOrECW.s:1319   .text:0000000000000538 .L0 
     /tmp/ccBOrECW.s:1321   .text:000000000000053c .L0 
     /tmp/ccBOrECW.s:1327   .text:000000000000053c _ZN5Riscv14timerInterruptEv
     /tmp/ccBOrECW.s:1330   .text:000000000000053c .L0 
     /tmp/ccBOrECW.s:1331   .text:000000000000053c .L0 
     /tmp/ccBOrECW.s:1332   .text:0000000000000540 .L0 
     /tmp/ccBOrECW.s:1335   .text:0000000000000548 .L0 
     /tmp/ccBOrECW.s:1336   .text:0000000000000548 .L0 
     /tmp/ccBOrECW.s:1338   .text:000000000000054c .L0 
     /tmp/ccBOrECW.s:1342   .text:000000000000054c .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 49


     /tmp/ccBOrECW.s:1343   .text:000000000000054c .L0 
     /tmp/ccBOrECW.s:1344   .text:000000000000054c .L0 
  src/../h/riscv.hpp:75     .text:000000000000054c .L0 
     /tmp/ccBOrECW.s:1352   .text:0000000000000554 .L0 
     /tmp/ccBOrECW.s:1353   .text:0000000000000554 .L0 
     /tmp/ccBOrECW.s:1359   .text:0000000000000558 .L0 
     /tmp/ccBOrECW.s:1367   .text:0000000000000568 .L0 
     /tmp/ccBOrECW.s:1368   .text:000000000000056c .L0 
     /tmp/ccBOrECW.s:1369   .text:000000000000056c .L0 
     /tmp/ccBOrECW.s:1371   .text:0000000000000570 .L0 
     /tmp/ccBOrECW.s:1372   .text:0000000000000570 .L0 
     /tmp/ccBOrECW.s:1374   .text:0000000000000574 .L0 
     /tmp/ccBOrECW.s:1378   .text:0000000000000578 .L0 
     /tmp/ccBOrECW.s:1382   .text:0000000000000578 .L0 
     /tmp/ccBOrECW.s:1383   .text:0000000000000578 .L0 
     /tmp/ccBOrECW.s:1386   .text:0000000000000580 .L0 
     /tmp/ccBOrECW.s:1387   .text:0000000000000580 .L0 
     /tmp/ccBOrECW.s:1393   .text:0000000000000594 .L0 
     /tmp/ccBOrECW.s:1394   .text:0000000000000594 .L0 
     /tmp/ccBOrECW.s:1400   .text:00000000000005a0 .L0 
     /tmp/ccBOrECW.s:1401   .text:00000000000005a0 .L0 
     /tmp/ccBOrECW.s:1406   .text:00000000000005a4 .L0 
     /tmp/ccBOrECW.s:1413   .text:00000000000005a8 .L0 
     /tmp/ccBOrECW.s:1414   .text:00000000000005a8 .L0 
     /tmp/ccBOrECW.s:1415   .text:00000000000005a8 .L0 
     /tmp/ccBOrECW.s:1427   .text:00000000000005b0 .L0 
     /tmp/ccBOrECW.s:1436   .text:00000000000005b4 .L0 
     /tmp/ccBOrECW.s:1437   .text:00000000000005b4 .L0 
     /tmp/ccBOrECW.s:1438   .text:00000000000005b4 .L0 
  src/../h/riscv.hpp:84     .text:00000000000005b4 .L0 
     /tmp/ccBOrECW.s:1446   .text:00000000000005bc .L0 
     /tmp/ccBOrECW.s:1447   .text:00000000000005bc .L0 
     /tmp/ccBOrECW.s:1451   .text:00000000000005c0 .L0 
     /tmp/ccBOrECW.s:1455   .text:00000000000005c4 .L0 
     /tmp/ccBOrECW.s:1456   .text:00000000000005c4 .L0 
     /tmp/ccBOrECW.s:1457   .text:00000000000005c4 .L0 
  src/../h/riscv.hpp:130    .text:00000000000005c4 .L0 
     /tmp/ccBOrECW.s:1465   .text:00000000000005cc .L0 
     /tmp/ccBOrECW.s:1466   .text:00000000000005cc .L0 
     /tmp/ccBOrECW.s:1470   .text:00000000000005d0 .L0 
     /tmp/ccBOrECW.s:1472   .text:00000000000005d4 .L0 
     /tmp/ccBOrECW.s:1473   .text:00000000000005d4 .L0 
     /tmp/ccBOrECW.s:1476   .text:00000000000005e0 .L0 
     /tmp/ccBOrECW.s:1477   .text:00000000000005e0 .L0 
     /tmp/ccBOrECW.s:1480   .text:00000000000005e8 .L0 
     /tmp/ccBOrECW.s:1481   .text:00000000000005e8 .L0 
     /tmp/ccBOrECW.s:1486   .text:00000000000005ec .L0 
  src/../h/riscv.hpp:134    .text:00000000000005ec .L0 
     /tmp/ccBOrECW.s:1496   .text:00000000000005f0 .L0 
     /tmp/ccBOrECW.s:1497   .text:00000000000005f0 .L0 
     /tmp/ccBOrECW.s:1502   .text:00000000000005f4 .L0 
  src/../h/riscv.hpp:88     .text:00000000000005f4 .L0 
     /tmp/ccBOrECW.s:1509   .text:00000000000005f8 .L0 
     /tmp/ccBOrECW.s:1516   .text:00000000000005fc .L0 
     /tmp/ccBOrECW.s:1525   .bss:0000000000000000 _ZN5Riscv12headSleepingE
     /tmp/ccBOrECW.s:1522   .bss:0000000000000000 .LANCHOR0
     /tmp/ccBOrECW.s:1537   .text:00000000000005fc .L0 
GAS LISTING /tmp/ccBOrECW.s 			page 50


     /tmp/ccBOrECW.s:100    .text:000000000000005c .L0 
     /tmp/ccBOrECW.s:188    .text:00000000000000b8 .L0 
     /tmp/ccBOrECW.s:214    .text:00000000000000e0 .L0 
     /tmp/ccBOrECW.s:238    .text:0000000000000108 .L0 
     /tmp/ccBOrECW.s:244    .text:0000000000000110 .L0 
     /tmp/ccBOrECW.s:280    .text:0000000000000148 .L0 
     /tmp/ccBOrECW.s:976    .text:0000000000000360 .L0 
     /tmp/ccBOrECW.s:359    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccBOrECW.s:1140   .text:000000000000041c .L0 
     /tmp/ccBOrECW.s:362    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccBOrECW.s:1152   .text:0000000000000440 .L0 
     /tmp/ccBOrECW.s:365    .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccBOrECW.s:1180   .text:0000000000000470 .L0 
     /tmp/ccBOrECW.s:1201   .text:0000000000000484 .L0 
     /tmp/ccBOrECW.s:1252   .text:00000000000004c8 .L0 
     /tmp/ccBOrECW.s:1268   .text:00000000000004e4 .L0 
     /tmp/ccBOrECW.s:1294   .text:000000000000050c .L0 
     /tmp/ccBOrECW.s:1387   .text:0000000000000580 .L0 
     /tmp/ccBOrECW.s:1394   .text:0000000000000594 .L0 
     /tmp/ccBOrECW.s:1473   .text:00000000000005d4 .L0 
     /tmp/ccBOrECW.s:59     .text:000000000000003c .L4
     /tmp/ccBOrECW.s:47     .text:000000000000002c .L1
     /tmp/ccBOrECW.s:141    .text:000000000000008c .L6
     /tmp/ccBOrECW.s:118    .text:0000000000000078 .L7
     /tmp/ccBOrECW.s:340    .text:00000000000001a0 .L18
     /tmp/ccBOrECW.s:269    .text:0000000000000140 .L23
     /tmp/ccBOrECW.s:282    .text:0000000000000154 .L13
     /tmp/ccBOrECW.s:239    .text:0000000000000110 .L12
     /tmp/ccBOrECW.s:315    .text:0000000000000178 .L14
     /tmp/ccBOrECW.s:294    .text:000000000000015c .L15
     /tmp/ccBOrECW.s:334    .text:0000000000000198 .L24
     /tmp/ccBOrECW.s:326    .text:000000000000018c .L17
     /tmp/ccBOrECW.s:1124   .text:000000000000041c .L26
     /tmp/ccBOrECW.s:810    .text:00000000000002d0 .L45
     /tmp/ccBOrECW.s:888    .text:0000000000000304 .L46
     /tmp/ccBOrECW.s:910    .text:0000000000000318 .L47
     /tmp/ccBOrECW.s:953    .text:0000000000000350 .L48
     /tmp/ccBOrECW.s:972    .text:0000000000000360 .L49
     /tmp/ccBOrECW.s:983    .text:0000000000000378 .L50
     /tmp/ccBOrECW.s:1000   .text:0000000000000388 .L51
     /tmp/ccBOrECW.s:1009   .text:000000000000039c .L52
     /tmp/ccBOrECW.s:1051   .text:00000000000003d0 .L53
     /tmp/ccBOrECW.s:1074   .text:00000000000003e4 .L54
     /tmp/ccBOrECW.s:1095   .text:00000000000003f8 .L55
     /tmp/ccBOrECW.s:1116   .text:000000000000040c .L56
     /tmp/ccBOrECW.s:837    .text:00000000000002e0 .L28
     /tmp/ccBOrECW.s:941    .text:0000000000000344 .L57
     /tmp/ccBOrECW.s:1039   .text:00000000000003c4 .L58
     /tmp/ccBOrECW.s:1183   .text:0000000000000480 .L42
     /tmp/ccBOrECW.s:1216   .text:00000000000004a0 .L63
     /tmp/ccBOrECW.s:1218   .text:00000000000004a4 .L66
     /tmp/ccBOrECW.s:1308   .text:000000000000052c .L59
     /tmp/ccBOrECW.s:1264   .text:00000000000004e4 .L61
     /tmp/ccBOrECW.s:1377   .text:0000000000000578 .L71
     /tmp/ccBOrECW.s:1428   .text:00000000000005b4 .L72
     /tmp/ccBOrECW.s:1364   .text:0000000000000568 .L67
     /tmp/ccBOrECW.s:1407   .text:00000000000005a8 .L69
GAS LISTING /tmp/ccBOrECW.s 			page 51


     /tmp/ccBOrECW.s:3575   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBOrECW.s:5222   .debug_str:00000000000007d2 .LASF171
     /tmp/ccBOrECW.s:5270   .debug_str:00000000000009b5 .LASF172
     /tmp/ccBOrECW.s:5034   .debug_str:0000000000000289 .LASF173
     /tmp/ccBOrECW.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBOrECW.s:1528   .text:00000000000005fc .Letext0
     /tmp/ccBOrECW.s:4942   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBOrECW.s:5058   .debug_str:0000000000000352 .LASF0
     /tmp/ccBOrECW.s:5082   .debug_str:0000000000000416 .LASF1
     /tmp/ccBOrECW.s:5166   .debug_str:0000000000000668 .LASF2
     /tmp/ccBOrECW.s:5174   .debug_str:00000000000006ad .LASF4
     /tmp/ccBOrECW.s:5066   .debug_str:000000000000039b .LASF3
     /tmp/ccBOrECW.s:4952   .debug_str:0000000000000030 .LASF5
     /tmp/ccBOrECW.s:5142   .debug_str:00000000000005a7 .LASF6
     /tmp/ccBOrECW.s:5134   .debug_str:000000000000057c .LASF7
     /tmp/ccBOrECW.s:5074   .debug_str:00000000000003e2 .LASF8
     /tmp/ccBOrECW.s:5032   .debug_str:0000000000000279 .LASF9
     /tmp/ccBOrECW.s:5040   .debug_str:00000000000002cf .LASF10
     /tmp/ccBOrECW.s:4974   .debug_str:00000000000000cb .LASF11
     /tmp/ccBOrECW.s:5024   .debug_str:0000000000000242 .LASF12
     /tmp/ccBOrECW.s:4988   .debug_str:0000000000000127 .LASF13
     /tmp/ccBOrECW.s:4972   .debug_str:00000000000000bb .LASF14
     /tmp/ccBOrECW.s:5206   .debug_str:0000000000000794 .LASF15
     /tmp/ccBOrECW.s:5006   .debug_str:00000000000001a5 .LASF16
     /tmp/ccBOrECW.s:5190   .debug_str:0000000000000713 .LASF17
     /tmp/ccBOrECW.s:5234   .debug_str:00000000000008c2 .LASF72
     /tmp/ccBOrECW.s:5116   .debug_str:00000000000004f1 .LASF74
     /tmp/ccBOrECW.s:5084   .debug_str:0000000000000429 .LASF95
     /tmp/ccBOrECW.s:5244   .debug_str:0000000000000901 .LASF96
     /tmp/ccBOrECW.s:4980   .debug_str:00000000000000f2 .LASF18
     /tmp/ccBOrECW.s:5000   .debug_str:0000000000000191 .LASF20
     /tmp/ccBOrECW.s:5064   .debug_str:0000000000000379 .LASF19
     /tmp/ccBOrECW.s:5204   .debug_str:0000000000000787 .LASF21
     /tmp/ccBOrECW.s:5072   .debug_str:00000000000003d3 .LASF22
     /tmp/ccBOrECW.s:5186   .debug_str:00000000000006ef .LASF23
     /tmp/ccBOrECW.s:5026   .debug_str:0000000000000251 .LASF24
     /tmp/ccBOrECW.s:5218   .debug_str:00000000000007c0 .LASF25
     /tmp/ccBOrECW.s:5256   .debug_str:0000000000000959 .LASF84
     /tmp/ccBOrECW.s:5278   .debug_str:00000000000009e9 .LASF29
     /tmp/ccBOrECW.s:5014   .debug_str:00000000000001e8 .LASF26
     /tmp/ccBOrECW.s:5220   .debug_str:00000000000007c5 .LASF27
     /tmp/ccBOrECW.s:4996   .debug_str:0000000000000173 .LASF28
     /tmp/ccBOrECW.s:5154   .debug_str:00000000000005f9 .LASF30
     /tmp/ccBOrECW.s:5070   .debug_str:00000000000003ca .LASF31
     /tmp/ccBOrECW.s:5012   .debug_str:00000000000001df .LASF32
     /tmp/ccBOrECW.s:5272   .debug_str:00000000000009c3 .LASF33
     /tmp/ccBOrECW.s:5132   .debug_str:000000000000056f .LASF86
     /tmp/ccBOrECW.s:5264   .debug_str:0000000000000993 .LASF34
     /tmp/ccBOrECW.s:4976   .debug_str:00000000000000da .LASF35
     /tmp/ccBOrECW.s:5044   .debug_str:00000000000002f2 .LASF68
     /tmp/ccBOrECW.s:5054   .debug_str:0000000000000334 .LASF70
     /tmp/ccBOrECW.s:5240   .debug_str:00000000000008f3 .LASF36
     /tmp/ccBOrECW.s:5238   .debug_str:00000000000008de .LASF38
     /tmp/ccBOrECW.s:5162   .debug_str:0000000000000654 .LASF40
     /tmp/ccBOrECW.s:5120   .debug_str:000000000000051c .LASF42
     /tmp/ccBOrECW.s:5146   .debug_str:00000000000005b6 .LASF37
     /tmp/ccBOrECW.s:5148   .debug_str:00000000000005bd .LASF39
GAS LISTING /tmp/ccBOrECW.s 			page 52


     /tmp/ccBOrECW.s:5112   .debug_str:00000000000004e5 .LASF41
     /tmp/ccBOrECW.s:5076   .debug_str:00000000000003f5 .LASF43
     /tmp/ccBOrECW.s:5268   .debug_str:00000000000009ad .LASF44
     /tmp/ccBOrECW.s:5230   .debug_str:00000000000008a8 .LASF45
     /tmp/ccBOrECW.s:5108   .debug_str:00000000000004d8 .LASF46
     /tmp/ccBOrECW.s:5118   .debug_str:0000000000000508 .LASF47
     /tmp/ccBOrECW.s:5088   .debug_str:000000000000043b .LASF48
     /tmp/ccBOrECW.s:5152   .debug_str:00000000000005e5 .LASF49
     /tmp/ccBOrECW.s:5292   .debug_str:0000000000000a73 .LASF50
     /tmp/ccBOrECW.s:5062   .debug_str:0000000000000365 .LASF51
     /tmp/ccBOrECW.s:4954   .debug_str:0000000000000037 .LASF52
     /tmp/ccBOrECW.s:5170   .debug_str:0000000000000680 .LASF53
     /tmp/ccBOrECW.s:5164   .debug_str:000000000000065d .LASF54
     /tmp/ccBOrECW.s:5286   .debug_str:0000000000000a39 .LASF55
     /tmp/ccBOrECW.s:5260   .debug_str:0000000000000981 .LASF56
     /tmp/ccBOrECW.s:5276   .debug_str:00000000000009d3 .LASF57
     /tmp/ccBOrECW.s:5250   .debug_str:000000000000092a .LASF58
     /tmp/ccBOrECW.s:5096   .debug_str:000000000000046b .LASF59
     /tmp/ccBOrECW.s:5200   .debug_str:0000000000000776 .LASF60
     /tmp/ccBOrECW.s:5176   .debug_str:00000000000006b4 .LASF61
     /tmp/ccBOrECW.s:5178   .debug_str:00000000000006c7 .LASF62
     /tmp/ccBOrECW.s:4978   .debug_str:00000000000000df .LASF63
     /tmp/ccBOrECW.s:5004   .debug_str:000000000000019f .LASF64
     /tmp/ccBOrECW.s:5052   .debug_str:0000000000000322 .LASF65
     /tmp/ccBOrECW.s:5060   .debug_str:000000000000035f .LASF66
     /tmp/ccBOrECW.s:4998   .debug_str:000000000000017f .LASF67
     /tmp/ccBOrECW.s:5266   .debug_str:000000000000099e .LASF69
     /tmp/ccBOrECW.s:5038   .debug_str:00000000000002b3 .LASF71
     /tmp/ccBOrECW.s:5248   .debug_str:000000000000091f .LASF73
     /tmp/ccBOrECW.s:5016   .debug_str:00000000000001f4 .LASF75
     /tmp/ccBOrECW.s:4966   .debug_str:000000000000008a .LASF76
     /tmp/ccBOrECW.s:5104   .debug_str:00000000000004a8 .LASF77
     /tmp/ccBOrECW.s:5290   .debug_str:0000000000000a5e .LASF78
     /tmp/ccBOrECW.s:5258   .debug_str:000000000000095f .LASF80
     /tmp/ccBOrECW.s:4962   .debug_str:000000000000005e .LASF79
     /tmp/ccBOrECW.s:5090   .debug_str:0000000000000443 .LASF81
     /tmp/ccBOrECW.s:5280   .debug_str:00000000000009f8 .LASF82
     /tmp/ccBOrECW.s:5188   .debug_str:00000000000006f4 .LASF83
     /tmp/ccBOrECW.s:5028   .debug_str:0000000000000262 .LASF98
     /tmp/ccBOrECW.s:5128   .debug_str:0000000000000553 .LASF85
     /tmp/ccBOrECW.s:5184   .debug_str:00000000000006e8 .LASF87
     /tmp/ccBOrECW.s:5080   .debug_str:0000000000000411 .LASF88
     /tmp/ccBOrECW.s:5232   .debug_str:00000000000008bc .LASF89
     /tmp/ccBOrECW.s:5160   .debug_str:0000000000000637 .LASF90
     /tmp/ccBOrECW.s:5122   .debug_str:0000000000000531 .LASF91
     /tmp/ccBOrECW.s:5068   .debug_str:00000000000003ad .LASF92
     /tmp/ccBOrECW.s:5182   .debug_str:00000000000006dd .LASF93
     /tmp/ccBOrECW.s:5196   .debug_str:000000000000074e .LASF94
     /tmp/ccBOrECW.s:5156   .debug_str:0000000000000604 .LASF97
     /tmp/ccBOrECW.s:5168   .debug_str:0000000000000676 .LASF132
     /tmp/ccBOrECW.s:4994   .debug_str:0000000000000157 .LASF133
     /tmp/ccBOrECW.s:5100   .debug_str:0000000000000493 .LASF99
     /tmp/ccBOrECW.s:5214   .debug_str:00000000000007b6 .LASF100
     /tmp/ccBOrECW.s:5126   .debug_str:0000000000000546 .LASF101
     /tmp/ccBOrECW.s:5114   .debug_str:00000000000004ec .LASF102
     /tmp/ccBOrECW.s:5124   .debug_str:0000000000000536 .LASF103
     /tmp/ccBOrECW.s:4956   .debug_str:0000000000000042 .LASF104
GAS LISTING /tmp/ccBOrECW.s 			page 53


     /tmp/ccBOrECW.s:4960   .debug_str:000000000000004d .LASF105
     /tmp/ccBOrECW.s:5002   .debug_str:000000000000019a .LASF106
     /tmp/ccBOrECW.s:5106   .debug_str:00000000000004c8 .LASF107
     /tmp/ccBOrECW.s:5208   .debug_str:00000000000007a0 .LASF108
     /tmp/ccBOrECW.s:5194   .debug_str:000000000000073c .LASF109
     /tmp/ccBOrECW.s:5046   .debug_str:00000000000002fd .LASF110
     /tmp/ccBOrECW.s:5098   .debug_str:0000000000000481 .LASF111
     /tmp/ccBOrECW.s:5288   .debug_str:0000000000000a51 .LASF112
     /tmp/ccBOrECW.s:5294   .debug_str:0000000000000a7b .LASF113
     /tmp/ccBOrECW.s:4948   .debug_str:0000000000000018 .LASF114
     /tmp/ccBOrECW.s:5022   .debug_str:0000000000000234 .LASF115
     /tmp/ccBOrECW.s:4970   .debug_str:00000000000000b2 .LASF116
     /tmp/ccBOrECW.s:5042   .debug_str:00000000000002dd .LASF117
     /tmp/ccBOrECW.s:4984   .debug_str:000000000000010a .LASF118
     /tmp/ccBOrECW.s:5150   .debug_str:00000000000005d0 .LASF119
     /tmp/ccBOrECW.s:5056   .debug_str:000000000000034c .LASF120
     /tmp/ccBOrECW.s:5018   .debug_str:000000000000020c .LASF121
     /tmp/ccBOrECW.s:4950   .debug_str:0000000000000028 .LASF122
     /tmp/ccBOrECW.s:4944   .debug_str:0000000000000000 .LASF123
     /tmp/ccBOrECW.s:5144   .debug_str:00000000000005ae .LASF124
     /tmp/ccBOrECW.s:5254   .debug_str:0000000000000952 .LASF125
     /tmp/ccBOrECW.s:5138   .debug_str:0000000000000598 .LASF126
     /tmp/ccBOrECW.s:5242   .debug_str:00000000000008fc .LASF145
     /tmp/ccBOrECW.s:5198   .debug_str:0000000000000771 .LASF127
     /tmp/ccBOrECW.s:5110   .debug_str:00000000000004e0 .LASF128
     /tmp/ccBOrECW.s:5228   .debug_str:00000000000008a3 .LASF129
     /tmp/ccBOrECW.s:5192   .debug_str:0000000000000729 .LASF130
     /tmp/ccBOrECW.s:5020   .debug_str:000000000000021d .LASF131
     /tmp/ccBOrECW.s:5158   .debug_str:0000000000000620 .LASF134
     /tmp/ccBOrECW.s:5078   .debug_str:0000000000000408 .LASF135
     /tmp/ccBOrECW.s:4964   .debug_str:000000000000006d .LASF136
     /tmp/ccBOrECW.s:5008   .debug_str:00000000000001bb .LASF137
     /tmp/ccBOrECW.s:5010   .debug_str:00000000000001c3 .LASF138
     /tmp/ccBOrECW.s:5130   .debug_str:0000000000000563 .LASF139
     /tmp/ccBOrECW.s:5252   .debug_str:0000000000000934 .LASF140
     /tmp/ccBOrECW.s:5296   .debug_str:0000000000000a88 .LASF141
     /tmp/ccBOrECW.s:5284   .debug_str:0000000000000a1e .LASF142
     /tmp/ccBOrECW.s:5094   .debug_str:0000000000000466 .LASF143
     /tmp/ccBOrECW.s:5030   .debug_str:000000000000026f .LASF144
     /tmp/ccBOrECW.s:5050   .debug_str:000000000000030a .LASF174
     /tmp/ccBOrECW.s:5282   .debug_str:0000000000000a0a .LASF175
     /tmp/ccBOrECW.s:4968   .debug_str:000000000000009d .LASF146
     /tmp/ccBOrECW.s:5172   .debug_str:0000000000000698 .LASF147
     /tmp/ccBOrECW.s:5212   .debug_str:00000000000007b0 .LASF148
     /tmp/ccBOrECW.s:5086   .debug_str:0000000000000436 .LASF149
     /tmp/ccBOrECW.s:4992   .debug_str:000000000000013e .LASF176
     /tmp/ccBOrECW.s:1195   .text:0000000000000484 .LFB39
     /tmp/ccBOrECW.s:1322   .text:000000000000053c .LFE39
     /tmp/ccBOrECW.s:1232   .text:00000000000004b4 .LBB256
     /tmp/ccBOrECW.s:1309   .text:000000000000052c .LBE256
     /tmp/ccBOrECW.s:4560   .debug_loc:0000000000000000 .LLST29
     /tmp/ccBOrECW.s:1237   .text:00000000000004b8 .LBB257
     /tmp/ccBOrECW.s:1244   .text:00000000000004bc .LBE257
     /tmp/ccBOrECW.s:4571   .debug_loc:0000000000000036 .LLST30
     /tmp/ccBOrECW.s:4579   .debug_loc:000000000000005a .LLST31
     /tmp/ccBOrECW.s:1279   .text:00000000000004fc .LBB259
     /tmp/ccBOrECW.s:1286   .text:0000000000000500 .LBE259
GAS LISTING /tmp/ccBOrECW.s 			page 54


     /tmp/ccBOrECW.s:4586   .debug_loc:000000000000007d .LLST32
     /tmp/ccBOrECW.s:4594   .debug_loc:00000000000000a1 .LLST33
     /tmp/ccBOrECW.s:1249   .text:00000000000004c8 .LVL68
     /tmp/ccBOrECW.s:1263   .text:00000000000004e4 .LVL70
     /tmp/ccBOrECW.s:1291   .text:000000000000050c .LVL73
     /tmp/ccBOrECW.s:1305   .text:0000000000000528 .LVL75
     /tmp/ccBOrECW.s:166    .text:0000000000000098 .LFB38
     /tmp/ccBOrECW.s:355    .text:00000000000001a8 .LFE38
     /tmp/ccBOrECW.s:5140   .debug_str:00000000000005a2 .LASF159
     /tmp/ccBOrECW.s:4601   .debug_loc:00000000000000c4 .LLST3
     /tmp/ccBOrECW.s:5102   .debug_str:00000000000004a0 .LASF150
     /tmp/ccBOrECW.s:4634   .debug_loc:000000000000014c .LLST4
     /tmp/ccBOrECW.s:284    .text:0000000000000154 .LBB93
     /tmp/ccBOrECW.s:346    .text:00000000000001a0 .LBE93
     /tmp/ccBOrECW.s:5224   .debug_str:0000000000000896 .LASF151
     /tmp/ccBOrECW.s:4645   .debug_loc:0000000000000182 .LLST7
     /tmp/ccBOrECW.s:4652   .debug_loc:00000000000001a5 .LLST8
     /tmp/ccBOrECW.s:4958   .debug_str:0000000000000048 .LASF152
     /tmp/ccBOrECW.s:4668   .debug_loc:00000000000001ef .LLST9
     /tmp/ccBOrECW.s:191    .text:00000000000000c4 .LBB89
     /tmp/ccBOrECW.s:200    .text:00000000000000cc .LBE89
     /tmp/ccBOrECW.s:4683   .debug_loc:0000000000000238 .LLST5
     /tmp/ccBOrECW.s:4691   .debug_loc:000000000000025c .LLST6
     /tmp/ccBOrECW.s:206    .text:00000000000000d8 .LVL13
     /tmp/ccBOrECW.s:249    .text:0000000000000124 .LVL14
     /tmp/ccBOrECW.s:74     .text:0000000000000048 .LFB37
     /tmp/ccBOrECW.s:160    .text:0000000000000098 .LFE37
     /tmp/ccBOrECW.s:85     .text:0000000000000054 .LBB83
     /tmp/ccBOrECW.s:97     .text:000000000000005c .LBE83
     /tmp/ccBOrECW.s:4698   .debug_loc:000000000000027f .LLST1
     /tmp/ccBOrECW.s:107    .text:0000000000000070 .LBB85
     /tmp/ccBOrECW.s:120    .text:0000000000000078 .LBE85
     /tmp/ccBOrECW.s:4707   .debug_loc:00000000000002a4 .LLST2
     /tmp/ccBOrECW.s:145    .text:000000000000008c .LBB87
     /tmp/ccBOrECW.s:158    .text:0000000000000098 .LBE87
     /tmp/ccBOrECW.s:10     .text:0000000000000000 .LFB36
     /tmp/ccBOrECW.s:68     .text:0000000000000048 .LFE36
     /tmp/ccBOrECW.s:4990   .debug_str:0000000000000137 .LASF153
     /tmp/ccBOrECW.s:4716   .debug_loc:00000000000002ca .LLST0
     /tmp/ccBOrECW.s:23     .text:0000000000000010 .LBB81
     /tmp/ccBOrECW.s:40     .text:000000000000001c .LBE81
     /tmp/ccBOrECW.s:64     .text:0000000000000044 .LVL3
     /tmp/ccBOrECW.s:1328   .text:000000000000053c .LFB35
     /tmp/ccBOrECW.s:1517   .text:00000000000005fc .LFE35
     /tmp/ccBOrECW.s:4727   .debug_loc:0000000000000300 .LLST34
     /tmp/ccBOrECW.s:1432   .text:00000000000005b4 .LBB271
     /tmp/ccBOrECW.s:1512   .text:00000000000005fc .LBE271
     /tmp/ccBOrECW.s:5226   .debug_str:000000000000089e .LASF154
     /tmp/ccBOrECW.s:5262   .debug_str:000000000000098b .LASF155
     /tmp/ccBOrECW.s:1434   .text:00000000000005b4 .LBB272
     /tmp/ccBOrECW.s:1449   .text:00000000000005c0 .LBE272
     /tmp/ccBOrECW.s:1453   .text:00000000000005c4 .LBB274
     /tmp/ccBOrECW.s:1468   .text:00000000000005d0 .LBE274
     /tmp/ccBOrECW.s:1483   .text:00000000000005ec .LBB276
     /tmp/ccBOrECW.s:1494   .text:00000000000005f0 .LBE276
     /tmp/ccBOrECW.s:4738   .debug_loc:0000000000000336 .LLST36
     /tmp/ccBOrECW.s:1499   .text:00000000000005f4 .LBB278
GAS LISTING /tmp/ccBOrECW.s 			page 55


     /tmp/ccBOrECW.s:1511   .text:00000000000005fc .LBE278
     /tmp/ccBOrECW.s:1478   .text:00000000000005e8 .LVL84
     /tmp/ccBOrECW.s:1340   .text:000000000000054c .LBB264
     /tmp/ccBOrECW.s:1356   .text:0000000000000558 .LBE264
     /tmp/ccBOrECW.s:1397   .text:00000000000005a0 .LBB269
     /tmp/ccBOrECW.s:1404   .text:00000000000005a4 .LBE269
     /tmp/ccBOrECW.s:4745   .debug_loc:0000000000000359 .LLST35
     /tmp/ccBOrECW.s:1411   .text:00000000000005a8 .LBB280
     /tmp/ccBOrECW.s:1423   .text:00000000000005b0 .LBE280
     /tmp/ccBOrECW.s:4752   .debug_loc:000000000000037c .LLST37
     /tmp/ccBOrECW.s:1384   .text:0000000000000580 .LVL79
     /tmp/ccBOrECW.s:372    .text:00000000000001a8 .LFB34
     /tmp/ccBOrECW.s:1189   .text:0000000000000484 .LFE34
     /tmp/ccBOrECW.s:4760   .debug_loc:00000000000003a0 .LLST10
     /tmp/ccBOrECW.s:4910   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBOrECW.s:823    .text:00000000000002d0 .LBB207
     /tmp/ccBOrECW.s:838    .text:00000000000002e0 .LBE207
     /tmp/ccBOrECW.s:4771   .debug_loc:00000000000003d6 .LLST26
     /tmp/ccBOrECW.s:828    .text:00000000000002dc .LVL27
     /tmp/ccBOrECW.s:894    .text:0000000000000304 .LBB194
     /tmp/ccBOrECW.s:907    .text:0000000000000314 .LBE194
     /tmp/ccBOrECW.s:4982   .debug_str:0000000000000105 .LASF156
     /tmp/ccBOrECW.s:4778   .debug_loc:00000000000003f9 .LLST25
     /tmp/ccBOrECW.s:899    .text:0000000000000310 .LVL35
     /tmp/ccBOrECW.s:912    .text:0000000000000318 .LBB180
     /tmp/ccBOrECW.s:955    .text:0000000000000350 .LBE180
     /tmp/ccBOrECW.s:5274   .debug_str:00000000000009cc .LASF157
     /tmp/ccBOrECW.s:4785   .debug_loc:000000000000041c .LLST23
     /tmp/ccBOrECW.s:923    .text:0000000000000330 .LBB182
     /tmp/ccBOrECW.s:942    .text:0000000000000344 .LBE182
     /tmp/ccBOrECW.s:5202   .debug_str:000000000000077d .LASF158
     /tmp/ccBOrECW.s:4792   .debug_loc:000000000000043f .LLST24
     /tmp/ccBOrECW.s:919    .text:000000000000032c .LVL37
     /tmp/ccBOrECW.s:957    .text:0000000000000350 .LBB169
     /tmp/ccBOrECW.s:969    .text:000000000000035c .LBE169
     /tmp/ccBOrECW.s:4799   .debug_loc:0000000000000462 .LLST22
     /tmp/ccBOrECW.s:961    .text:0000000000000358 .LVL41
     /tmp/ccBOrECW.s:985    .text:0000000000000378 .LBB151
     /tmp/ccBOrECW.s:997    .text:0000000000000384 .LBE151
     /tmp/ccBOrECW.s:4806   .debug_loc:0000000000000485 .LLST21
     /tmp/ccBOrECW.s:989    .text:0000000000000380 .LVL44
     /tmp/ccBOrECW.s:1011   .text:000000000000039c .LBB135
     /tmp/ccBOrECW.s:1053   .text:00000000000003d0 .LBE135
     /tmp/ccBOrECW.s:4813   .debug_loc:00000000000004a8 .LLST19
     /tmp/ccBOrECW.s:1021   .text:00000000000003b0 .LBB137
     /tmp/ccBOrECW.s:1040   .text:00000000000003c4 .LBE137
     /tmp/ccBOrECW.s:4820   .debug_loc:00000000000004cb .LLST20
     /tmp/ccBOrECW.s:1017   .text:00000000000003ac .LVL47
     /tmp/ccBOrECW.s:1055   .text:00000000000003d0 .LBB129
     /tmp/ccBOrECW.s:1071   .text:00000000000003e0 .LBE129
     /tmp/ccBOrECW.s:4827   .debug_loc:00000000000004ee .LLST17
     /tmp/ccBOrECW.s:4834   .debug_loc:0000000000000511 .LLST18
     /tmp/ccBOrECW.s:1063   .text:00000000000003dc .LVL52
     /tmp/ccBOrECW.s:1076   .text:00000000000003e4 .LBB124
     /tmp/ccBOrECW.s:1092   .text:00000000000003f4 .LBE124
     /tmp/ccBOrECW.s:4841   .debug_loc:0000000000000534 .LLST15
     /tmp/ccBOrECW.s:4848   .debug_loc:0000000000000557 .LLST16
GAS LISTING /tmp/ccBOrECW.s 			page 56


     /tmp/ccBOrECW.s:1084   .text:00000000000003f0 .LVL55
     /tmp/ccBOrECW.s:1097   .text:00000000000003f8 .LBB120
     /tmp/ccBOrECW.s:1113   .text:0000000000000408 .LBE120
     /tmp/ccBOrECW.s:4855   .debug_loc:000000000000057a .LLST13
     /tmp/ccBOrECW.s:4862   .debug_loc:000000000000059d .LLST14
     /tmp/ccBOrECW.s:1105   .text:0000000000000404 .LVL58
     /tmp/ccBOrECW.s:791    .text:00000000000002bc .LBB118
     /tmp/ccBOrECW.s:807    .text:00000000000002cc .LBE118
     /tmp/ccBOrECW.s:4869   .debug_loc:00000000000005c0 .LLST11
     /tmp/ccBOrECW.s:4876   .debug_loc:00000000000005e3 .LLST12
     /tmp/ccBOrECW.s:799    .text:00000000000002c8 .LVL25
     /tmp/ccBOrECW.s:457    .text:00000000000001fc .LBB101
     /tmp/ccBOrECW.s:472    .text:0000000000000208 .LBE101
     /tmp/ccBOrECW.s:478    .text:0000000000000210 .LBB103
     /tmp/ccBOrECW.s:493    .text:000000000000021c .LBE103
     /tmp/ccBOrECW.s:844    .text:00000000000002e4 .LBB221
     /tmp/ccBOrECW.s:855    .text:00000000000002e8 .LBE221
     /tmp/ccBOrECW.s:4883   .debug_loc:0000000000000606 .LLST27
     /tmp/ccBOrECW.s:860    .text:00000000000002ec .LBB223
     /tmp/ccBOrECW.s:871    .text:00000000000002f0 .LBE223
     /tmp/ccBOrECW.s:4890   .debug_loc:0000000000000629 .LLST28
     /tmp/ccBOrECW.s:981    .text:0000000000000374 .LVL43
     /tmp/ccBOrECW.s:1007   .text:0000000000000398 .LVL46
     /tmp/ccBOrECW.s:1122   .text:0000000000000418 .LVL60
     /tmp/ccBOrECW.s:386    .text:00000000000001bc .LBB97
     /tmp/ccBOrECW.s:402    .text:00000000000001c8 .LBE97
     /tmp/ccBOrECW.s:1156   .text:0000000000000450 .LBB239
     /tmp/ccBOrECW.s:1171   .text:000000000000045c .LBE239
     /tmp/ccBOrECW.s:1142   .text:000000000000042c .LVL61
     /tmp/ccBOrECW.s:1149   .text:0000000000000440 .LVL62
     /tmp/ccBOrECW.s:1154   .text:0000000000000450 .LVL63
     /tmp/ccBOrECW.s:1177   .text:0000000000000470 .LVL64
     /tmp/ccBOrECW.s:1182   .text:0000000000000480 .LVL65
     /tmp/ccBOrECW.s:5216   .debug_str:00000000000007bb .LASF160
     /tmp/ccBOrECW.s:5246   .debug_str:000000000000091a .LASF161
     /tmp/ccBOrECW.s:4946   .debug_str:0000000000000013 .LASF163
     /tmp/ccBOrECW.s:5210   .debug_str:00000000000007a7 .LASF162
     /tmp/ccBOrECW.s:5236   .debug_str:00000000000008ce .LASF164
     /tmp/ccBOrECW.s:5048   .debug_str:0000000000000303 .LASF165
     /tmp/ccBOrECW.s:5092   .debug_str:000000000000045f .LASF166
     /tmp/ccBOrECW.s:4986   .debug_str:0000000000000114 .LASF167
     /tmp/ccBOrECW.s:5036   .debug_str:00000000000002a7 .LASF168
     /tmp/ccBOrECW.s:5180   .debug_str:00000000000006ce .LASF169
     /tmp/ccBOrECW.s:5136   .debug_str:000000000000058f .LASF170
     /tmp/ccBOrECW.s:1254   .text:00000000000004d4 .LVL69
     /tmp/ccBOrECW.s:1296   .text:0000000000000518 .LVL74
     /tmp/ccBOrECW.s:1236   .text:00000000000004b8 .LVL66
     /tmp/ccBOrECW.s:1242   .text:00000000000004bc .LVL67
     /tmp/ccBOrECW.s:1278   .text:00000000000004fc .LVL71
     /tmp/ccBOrECW.s:1284   .text:0000000000000500 .LVL72
     /tmp/ccBOrECW.s:169    .text:0000000000000098 .LVL9
     /tmp/ccBOrECW.s:204    .text:00000000000000d0 .LVL12
     /tmp/ccBOrECW.s:262    .text:0000000000000134 .LVL15
     /tmp/ccBOrECW.s:268    .text:0000000000000140 .LVL16
     /tmp/ccBOrECW.s:339    .text:00000000000001a0 .LVL21
     /tmp/ccBOrECW.s:351    .text:00000000000001a4 .LVL22
     /tmp/ccBOrECW.s:288    .text:0000000000000158 .LVL17
GAS LISTING /tmp/ccBOrECW.s 			page 57


     /tmp/ccBOrECW.s:292    .text:000000000000015c .LVL18
     /tmp/ccBOrECW.s:305    .text:000000000000016c .LVL19
     /tmp/ccBOrECW.s:312    .text:0000000000000174 .LVL20
     /tmp/ccBOrECW.s:190    .text:00000000000000c4 .LVL10
     /tmp/ccBOrECW.s:198    .text:00000000000000cc .LVL11
     /tmp/ccBOrECW.s:84     .text:0000000000000054 .LVL4
     /tmp/ccBOrECW.s:94     .text:000000000000005c .LVL5
     /tmp/ccBOrECW.s:106    .text:0000000000000070 .LVL6
     /tmp/ccBOrECW.s:116    .text:0000000000000078 .LVL7
     /tmp/ccBOrECW.s:38     .text:000000000000001c .LVL0
     /tmp/ccBOrECW.s:46     .text:000000000000002c .LVL1
     /tmp/ccBOrECW.s:58     .text:000000000000003c .LVL2
     /tmp/ccBOrECW.s:1354   .text:0000000000000558 .LVL76
     /tmp/ccBOrECW.s:1363   .text:0000000000000568 .LVL77
     /tmp/ccBOrECW.s:1376   .text:0000000000000578 .LVL78
     /tmp/ccBOrECW.s:1482   .text:00000000000005ec .LVL85
     /tmp/ccBOrECW.s:1491   .text:00000000000005f0 .LVL86
     /tmp/ccBOrECW.s:1396   .text:00000000000005a0 .LVL80
     /tmp/ccBOrECW.s:1402   .text:00000000000005a4 .LVL81
     /tmp/ccBOrECW.s:1410   .text:00000000000005a8 .LVL82
     /tmp/ccBOrECW.s:1420   .text:00000000000005b0 .LVL83
     /tmp/ccBOrECW.s:400    .text:00000000000001c8 .LVL23
     /tmp/ccBOrECW.s:883    .text:00000000000002fc .LVL33
     /tmp/ccBOrECW.s:887    .text:0000000000000304 .LVL34
     /tmp/ccBOrECW.s:835    .text:00000000000002e0 .LVL28
     /tmp/ccBOrECW.s:909    .text:0000000000000318 .LVL36
     /tmp/ccBOrECW.s:952    .text:0000000000000350 .LVL40
     /tmp/ccBOrECW.s:927    .text:0000000000000334 .LVL38
     /tmp/ccBOrECW.s:940    .text:0000000000000344 .LVL39
     /tmp/ccBOrECW.s:971    .text:0000000000000360 .LVL42
     /tmp/ccBOrECW.s:999    .text:0000000000000388 .LVL45
     /tmp/ccBOrECW.s:1050   .text:00000000000003d0 .LVL50
     /tmp/ccBOrECW.s:1025   .text:00000000000003b4 .LVL48
     /tmp/ccBOrECW.s:1038   .text:00000000000003c4 .LVL49
     /tmp/ccBOrECW.s:1059   .text:00000000000003d4 .LVL51
     /tmp/ccBOrECW.s:1073   .text:00000000000003e4 .LVL53
     /tmp/ccBOrECW.s:1080   .text:00000000000003e8 .LVL54
     /tmp/ccBOrECW.s:1094   .text:00000000000003f8 .LVL56
     /tmp/ccBOrECW.s:1101   .text:00000000000003fc .LVL57
     /tmp/ccBOrECW.s:1115   .text:000000000000040c .LVL59
     /tmp/ccBOrECW.s:795    .text:00000000000002c0 .LVL24
     /tmp/ccBOrECW.s:809    .text:00000000000002d0 .LVL26
     /tmp/ccBOrECW.s:843    .text:00000000000002e4 .LVL29
     /tmp/ccBOrECW.s:852    .text:00000000000002e8 .LVL30
     /tmp/ccBOrECW.s:859    .text:00000000000002ec .LVL31
     /tmp/ccBOrECW.s:868    .text:00000000000002f0 .LVL32
     /tmp/ccBOrECW.s:1538   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBOrECW.s:455    .text:00000000000001fc .LBB100
     /tmp/ccBOrECW.s:504    .text:000000000000022c .LBE100
     /tmp/ccBOrECW.s:508    .text:000000000000022c .LBB226
     /tmp/ccBOrECW.s:518    .text:0000000000000238 .LBE226
     /tmp/ccBOrECW.s:522    .text:0000000000000238 .LBB227
     /tmp/ccBOrECW.s:534    .text:0000000000000244 .LBE227
     /tmp/ccBOrECW.s:538    .text:0000000000000244 .LBB228
     /tmp/ccBOrECW.s:552    .text:0000000000000250 .LBE228
     /tmp/ccBOrECW.s:556    .text:0000000000000250 .LBB229
     /tmp/ccBOrECW.s:572    .text:000000000000025c .LBE229
GAS LISTING /tmp/ccBOrECW.s 			page 58


     /tmp/ccBOrECW.s:576    .text:000000000000025c .LBB230
     /tmp/ccBOrECW.s:594    .text:0000000000000268 .LBE230
     /tmp/ccBOrECW.s:598    .text:0000000000000268 .LBB231
     /tmp/ccBOrECW.s:618    .text:0000000000000274 .LBE231
     /tmp/ccBOrECW.s:622    .text:0000000000000274 .LBB232
     /tmp/ccBOrECW.s:644    .text:0000000000000280 .LBE232
     /tmp/ccBOrECW.s:648    .text:0000000000000280 .LBB233
     /tmp/ccBOrECW.s:672    .text:000000000000028c .LBE233
     /tmp/ccBOrECW.s:676    .text:000000000000028c .LBB234
     /tmp/ccBOrECW.s:702    .text:0000000000000298 .LBE234
     /tmp/ccBOrECW.s:706    .text:0000000000000298 .LBB235
     /tmp/ccBOrECW.s:734    .text:00000000000002a4 .LBE235
     /tmp/ccBOrECW.s:738    .text:00000000000002a4 .LBB236
     /tmp/ccBOrECW.s:768    .text:00000000000002b0 .LBE236
     /tmp/ccBOrECW.s:772    .text:00000000000002b0 .LBB237
     /tmp/ccBOrECW.s:872    .text:00000000000002f0 .LBE237
     /tmp/ccBOrECW.s:891    .text:0000000000000304 .LBB238
     /tmp/ccBOrECW.s:1137   .text:000000000000041c .LBE238

UNDEFINED SYMBOLS
console_handler
_ZN3TCB7runningE
_ZN15MemoryAllocator5allocEm
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator4freeEPv
_ZN3TCB12createThreadEPFvPvEPcS0_
_ZN3TCB4exitEv
__getc
__putc
_ZN4_sem4openEi
_ZN4_sem4waitEv
_ZN4_sem5closeEv
_ZN4_sem6signalEv
_ZN3TCB4joinEPS_
_Z11printStringPKc
_Z8printIntiii
_ZN9Scheduler3putEP3TCB
