GAS LISTING /tmp/ccqvXlZq.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv17hardwareInterruptEv
   9              	_ZN5Riscv17hardwareInterruptEv:
  10              	.LFB36:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 7/24/23.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/riscv.cpp **** #include "../test/printing.hpp"
   8:src/riscv.cpp **** #include "../h/_sem.hpp"
   9:src/riscv.cpp **** #include "../h/Scheduler.hpp"
  10:src/riscv.cpp **** #include "../h/_console.hpp"
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** Riscv::SleepingElem* Riscv::headSleeping=nullptr;
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** void Riscv::handleEcallException(){
  15:src/riscv.cpp ****     uint64 scause=r_scause();
  16:src/riscv.cpp **** 
  17:src/riscv.cpp ****     uint64 volatile a0;
  18:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x50(fp)": "=r"(a0));
  19:src/riscv.cpp ****     uint64 volatile a1;
  20:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x58(fp)": "=r"(a1));
  21:src/riscv.cpp ****     uint64 volatile a2;
  22:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x60(fp)": "=r"(a2));
  23:src/riscv.cpp ****     uint64 volatile a3;
  24:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x68(fp)": "=r"(a3));
  25:src/riscv.cpp ****     uint64 volatile a4;
  26:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x70(fp)": "=r"(a4));
  27:src/riscv.cpp **** 
  28:src/riscv.cpp ****     if(scause==0x09UL || scause==0x08UL){
  29:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
  30:src/riscv.cpp ****         uint64 volatile sepc=r_sepc()+4;
  31:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
  32:src/riscv.cpp **** 
  33:src/riscv.cpp ****         if(a0==0x01){
  34:src/riscv.cpp ****             //mem_alloc
  35:src/riscv.cpp ****             void *ptr=MemoryAllocator::alloc(a1);
  36:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
  37:src/riscv.cpp ****         }
  38:src/riscv.cpp ****         else if(a0==0x02){
  39:src/riscv.cpp ****             //mem_free
  40:src/riscv.cpp ****             int stat=MemoryAllocator::free((void*)a1);
  41:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
  42:src/riscv.cpp ****         }
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****         else if(a0==0x11){
  45:src/riscv.cpp ****             /*thread_create
  46:src/riscv.cpp ****             a1- thread_t* retHandle
  47:src/riscv.cpp ****              a2- *start_routine
GAS LISTING /tmp/ccqvXlZq.s 			page 2


  48:src/riscv.cpp ****              a3- void* arg
  49:src/riscv.cpp ****              a4- char* stack
  50:src/riscv.cpp ****             */
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****             TCB** retHandle=(TCB**)a1;
  53:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
  54:src/riscv.cpp ****             else{
  55:src/riscv.cpp ****                 TCB* handle= TCB::createThread((TCB::Body)a2, (char*)a4, (void*)a3);
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****                 if(!handle){
  58:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
  59:src/riscv.cpp ****                 }
  60:src/riscv.cpp ****                 else{
  61:src/riscv.cpp ****                     *retHandle=handle;
  62:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
  63:src/riscv.cpp ****                 }
  64:src/riscv.cpp ****             }
  65:src/riscv.cpp ****         }
  66:src/riscv.cpp ****         else if(a0==0x12){
  67:src/riscv.cpp ****             //thread_exit()
  68:src/riscv.cpp ****             int stat=TCB::exit();
  69:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
  70:src/riscv.cpp ****         }
  71:src/riscv.cpp ****         else if(a0==0x13){
  72:src/riscv.cpp ****             //thread_dispatch()
  73:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  74:src/riscv.cpp ****             TCB::dispatch();
  75:src/riscv.cpp ****         }
  76:src/riscv.cpp ****         else if(a0==0x41){
  77:src/riscv.cpp ****             //char getc();
  78:src/riscv.cpp **** 
  79:src/riscv.cpp ****             char c= _console::inputBuff_take();
  80:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****             /*char c=__getc();
  83:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));*/
  84:src/riscv.cpp ****         }
  85:src/riscv.cpp ****         else if(a0==0x42){
  86:src/riscv.cpp ****             //void putc(c)
  87:src/riscv.cpp **** 
  88:src/riscv.cpp ****             char c=(char)a1;
  89:src/riscv.cpp ****             _console::outputBuff_put(c);
  90:src/riscv.cpp **** 
  91:src/riscv.cpp ****             //__putc((char)a1);
  92:src/riscv.cpp ****         }
  93:src/riscv.cpp ****         else if(a0==0x21){
  94:src/riscv.cpp ****             //sem_open
  95:src/riscv.cpp ****             //a1 - sem_t* retHandle
  96:src/riscv.cpp ****             //a2 - unsigned int init
  97:src/riscv.cpp **** 
  98:src/riscv.cpp ****             _sem** retHandle=(_sem**)a1;
  99:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 100:src/riscv.cpp ****             else{
 101:src/riscv.cpp ****                 _sem* handle=_sem::open((int)a2);
 102:src/riscv.cpp ****                 if(!handle){
 103:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 104:src/riscv.cpp ****                 }
GAS LISTING /tmp/ccqvXlZq.s 			page 3


 105:src/riscv.cpp ****                 else{
 106:src/riscv.cpp ****                     *retHandle=handle;
 107:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 108:src/riscv.cpp ****                 }
 109:src/riscv.cpp ****             }
 110:src/riscv.cpp ****         }
 111:src/riscv.cpp ****         else if(a0==0x23){
 112:src/riscv.cpp ****             //sem_wait(sem_t id)
 113:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 114:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 115:src/riscv.cpp ****             else{
 116:src/riscv.cpp ****                 int stat=handle->wait();
 117:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 118:src/riscv.cpp ****             }
 119:src/riscv.cpp ****         }
 120:src/riscv.cpp ****         else if(a0==0x22){
 121:src/riscv.cpp ****             //sem_close(sem_t handle)
 122:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 123:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 124:src/riscv.cpp ****             else{
 125:src/riscv.cpp ****                 int stat=handle->close();
 126:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 127:src/riscv.cpp ****             }
 128:src/riscv.cpp ****         }
 129:src/riscv.cpp ****         else if(a0==0x24){
 130:src/riscv.cpp ****             //sem_signal(sem_t id)
 131:src/riscv.cpp ****             _sem* handle=(_sem*) a1;
 132:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 133:src/riscv.cpp ****             else{
 134:src/riscv.cpp ****                 int stat=handle->signal();
 135:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 136:src/riscv.cpp ****             }
 137:src/riscv.cpp ****         }
 138:src/riscv.cpp ****         else if(a0==0x14){
 139:src/riscv.cpp ****             //thread_join(thread_t)
 140:src/riscv.cpp ****             TCB::join((TCB*)a1);
 141:src/riscv.cpp ****         }
 142:src/riscv.cpp ****         else if(a0==0x31){
 143:src/riscv.cpp ****             //time_sleep(time_t)
 144:src/riscv.cpp ****             time_t time=(time_t)a1;
 145:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 146:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 147:src/riscv.cpp ****         }
 148:src/riscv.cpp **** 
 149:src/riscv.cpp ****         w_sstatus(sstatus);
 150:src/riscv.cpp ****         w_sepc(sepc);
 151:src/riscv.cpp ****     }
 152:src/riscv.cpp **** 
 153:src/riscv.cpp ****     else{
 154:src/riscv.cpp ****         printString("GRESKA:");
 155:src/riscv.cpp ****         printInt(scause);
 156:src/riscv.cpp ****         printString("\nsepc:");
 157:src/riscv.cpp ****         printInt(r_sepc());
 158:src/riscv.cpp ****         printString("\n");
 159:src/riscv.cpp **** 
 160:src/riscv.cpp ****         while(true){ }
 161:src/riscv.cpp ****     }
GAS LISTING /tmp/ccqvXlZq.s 			page 4


 162:src/riscv.cpp **** 
 163:src/riscv.cpp **** }
 164:src/riscv.cpp **** 
 165:src/riscv.cpp **** void Riscv::timerInterrupt() {
 166:src/riscv.cpp ****     //prekid od tajmera, softverski prekid
 167:src/riscv.cpp **** 
 168:src/riscv.cpp ****     updateSleepingList();
 169:src/riscv.cpp **** 
 170:src/riscv.cpp ****     TCB::timeSliceCounter++;
 171:src/riscv.cpp ****     if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 172:src/riscv.cpp ****         uint64 volatile sepc=r_sepc();
 173:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 174:src/riscv.cpp ****         TCB::timeSliceCounter=0;
 175:src/riscv.cpp ****         TCB::dispatch();
 176:src/riscv.cpp ****         w_sstatus(sstatus);
 177:src/riscv.cpp ****         w_sepc(sepc);
 178:src/riscv.cpp ****     }
 179:src/riscv.cpp ****     mc_sip(SIP_SSIP);
 180:src/riscv.cpp **** }
 181:src/riscv.cpp **** 
 182:src/riscv.cpp **** void Riscv::hardwareInterrupt() {
  12              		.loc 1 182 33
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
 183:src/riscv.cpp ****     int intNumber=plic_claim();
  24              		.loc 1 183 5
  25              		.loc 1 183 29 is_stmt 0
  26 0014 97000000 		call	plic_claim@plt
  26      E7800000 
  27              	.LVL0:
  28 001c 93040500 		mv	s1,a0
  29              	.LVL1:
 184:src/riscv.cpp **** 
 185:src/riscv.cpp ****     if(intNumber==CONSOLE_IRQ){
  30              		.loc 1 185 5 is_stmt 1
  31              	.LBB82:
  32 0020 9307A000 		li	a5,10
  33 0024 6302F502 		beq	a0,a5,.L3
  34              	.LVL2:
  35              	.L2:
  36              	.LBE82:
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
 187:src/riscv.cpp ****             char c= *(char*)CONSOLE_RX_DATA;
 188:src/riscv.cpp ****             _console::inputBuff_put(c);
 189:src/riscv.cpp ****         }
 190:src/riscv.cpp ****     }
 191:src/riscv.cpp **** 
 192:src/riscv.cpp ****     plic_complete(intNumber);
GAS LISTING /tmp/ccqvXlZq.s 			page 5


  37              		.loc 1 192 5
  38              		.loc 1 192 18 is_stmt 0
  39 0028 13850400 		mv	a0,s1
  40 002c 97000000 		call	plic_complete@plt
  40      E7800000 
  41              	.LVL3:
 193:src/riscv.cpp **** }
  42              		.loc 1 193 1
  43 0034 83308101 		ld	ra,24(sp)
  44              		.cfi_remember_state
  45              		.cfi_restore 1
  46 0038 03340101 		ld	s0,16(sp)
  47              		.cfi_restore 8
  48              		.cfi_def_cfa 2, 32
  49 003c 83348100 		ld	s1,8(sp)
  50              		.cfi_restore 9
  51 0040 13010102 		addi	sp,sp,32
  52              		.cfi_def_cfa_offset 0
  53 0044 67800000 		jr	ra
  54              	.L3:
  55              		.cfi_restore_state
  56              	.LBB85:
  57              	.LBB83:
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  58              		.loc 1 186 9 is_stmt 1
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  59              		.loc 1 186 45
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  60              		.loc 1 186 41 is_stmt 0
  61 0048 97000000 		call	_ZN8_console14inputBuff_fullEv@plt
  61      E7800000 
  62              	.LVL4:
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  63              		.loc 1 186 45
  64 0050 E31C05FC 		bnez	a0,.L2
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  65              		.loc 1 186 50 discriminator 1
  66 0054 97070000 		la	a5,CONSOLE_STATUS
  66      83B70700 
  67 005c 83B70700 		ld	a5,0(a5)
  68 0060 83C70700 		lbu	a5,0(a5)
 186:src/riscv.cpp ****         while((!_console::inputBuff_full()) && ((*(char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)){
  69              		.loc 1 186 45 discriminator 1
  70 0064 93F71700 		andi	a5,a5,1
  71 0068 E38007FC 		beqz	a5,.L2
  72              	.LBB84:
 187:src/riscv.cpp ****             _console::inputBuff_put(c);
  73              		.loc 1 187 13 is_stmt 1
 187:src/riscv.cpp ****             _console::inputBuff_put(c);
  74              		.loc 1 187 21 is_stmt 0
  75 006c 97070000 		la	a5,CONSOLE_RX_DATA
  75      83B70700 
  76 0074 83B70700 		ld	a5,0(a5)
  77              	.LVL5:
 188:src/riscv.cpp ****         }
  78              		.loc 1 188 13 is_stmt 1
 188:src/riscv.cpp ****         }
GAS LISTING /tmp/ccqvXlZq.s 			page 6


  79              		.loc 1 188 36 is_stmt 0
  80 0078 03C50700 		lbu	a0,0(a5)
  81 007c 97000000 		call	_ZN8_console13inputBuff_putEc@plt
  81      E7800000 
  82              	.LVL6:
  83              	.LBE84:
 186:src/riscv.cpp ****             char c= *(char*)CONSOLE_RX_DATA;
  84              		.loc 1 186 9
  85 0084 6FF05FFC 		j	.L3
  86              	.LBE83:
  87              	.LBE85:
  88              		.cfi_endproc
  89              	.LFE36:
  91              		.align	2
  92              		.globl	_ZN5Riscv10popSppSpieEv
  94              	_ZN5Riscv10popSppSpieEv:
  95              	.LFB37:
 194:src/riscv.cpp **** 
 195:src/riscv.cpp **** 
 196:src/riscv.cpp **** 
 197:src/riscv.cpp **** void Riscv::popSppSpie() {
  96              		.loc 1 197 26 is_stmt 1
  97              		.cfi_startproc
  98 0088 130101FF 		addi	sp,sp,-16
  99              		.cfi_def_cfa_offset 16
 100 008c 23348100 		sd	s0,8(sp)
 101              		.cfi_offset 8, -8
 102 0090 13040101 		addi	s0,sp,16
 103              		.cfi_def_cfa 8, 0
 198:src/riscv.cpp ****     Riscv::ms_sstatus(SSTATUS_SPIE);
 104              		.loc 1 198 5
 105              	.LVL7:
 106              	.LBB86:
 107              	.LBB87:
 108              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 7/24/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../h/TCB.hpp"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** //sa vezbi 7
  12:src/../h/riscv.hpp **** class Riscv{
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp **** public:
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     //mora da bude ne inline da bi se u ra upisalo mesto povratka
  17:src/../h/riscv.hpp ****     static void popSppSpie();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static uint64 r_scause();
  20:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccqvXlZq.s 			page 7


  23:src/../h/riscv.hpp ****     static uint64 r_stvec();
  24:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  25:src/../h/riscv.hpp ****     static uint64 r_stval();
  26:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     enum BitMaskSStatus{
  29:src/../h/riscv.hpp ****         SSTATUS_SIE=(1<<1),
  30:src/../h/riscv.hpp ****         SSTATUS_SPIE=(1<<5),
  31:src/../h/riscv.hpp ****         SSTATUS_SPP=(1<<8)
  32:src/../h/riscv.hpp ****     };
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  35:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  36:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  37:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     enum BitMaskSip{
  41:src/../h/riscv.hpp ****         SIP_SSIP=(1<<1),//software interrupt pending
  42:src/../h/riscv.hpp ****         SIP_STIP=(1 << 5),
  43:src/../h/riscv.hpp ****         SIP_SEIP=(1 << 9)
  44:src/../h/riscv.hpp ****     };
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  48:src/../h/riscv.hpp ****     static uint64 r_sip();
  49:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     static void supervisorTrap();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     struct SleepingElem{
  54:src/../h/riscv.hpp ****         TCB* thr;
  55:src/../h/riscv.hpp ****         time_t toSleepRel;
  56:src/../h/riscv.hpp ****         SleepingElem* next;
  57:src/../h/riscv.hpp ****     };
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     static int putToSleep(time_t);
  60:src/../h/riscv.hpp ****     static void updateSleepingList();
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp **** private:
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     static void handleEcallException();
  65:src/../h/riscv.hpp ****     static void timerInterrupt();
  66:src/../h/riscv.hpp ****     static void hardwareInterrupt();
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     static SleepingElem* headSleeping;
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     friend int main();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp **** };
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  75:src/../h/riscv.hpp ****     uint64 volatile scause;
  76:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
  77:src/../h/riscv.hpp ****     return scause;
  78:src/../h/riscv.hpp **** }
  79:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
GAS LISTING /tmp/ccqvXlZq.s 			page 8


  80:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]"::[scause]"r"(scause));
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc(){
  84:src/../h/riscv.hpp ****     uint64 volatile sepc;
  85:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
  86:src/../h/riscv.hpp ****     return sepc;
  87:src/../h/riscv.hpp **** }
  88:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  89:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %[sepc]"::[sepc]"r"(sepc));
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
  92:src/../h/riscv.hpp ****     uint64 volatile stvec;
  93:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stvec], stvec":[stvec]"=r"(stvec));
  94:src/../h/riscv.hpp ****     return stvec;
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  97:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %[stvec]"::[stvec]"r"(stvec));
  98:src/../h/riscv.hpp **** }
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 100:src/../h/riscv.hpp ****     uint64 volatile stval;
 101:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
 102:src/../h/riscv.hpp ****     return stval;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 105:src/../h/riscv.hpp ****     __asm__ volatile("csrw stval, %[stval]"::[stval]"r"(stval));
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 109:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %[mask]"::[mask]"r"(mask));
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 112:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]"::[mask]"r"(mask));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip(){
 117:src/../h/riscv.hpp ****     uint64 volatile sip;
 118:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sip], sip":[sip]"=r"(sip));
 119:src/../h/riscv.hpp ****     return sip;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 122:src/../h/riscv.hpp ****     __asm__ volatile("csrw sip, %[sip]"::[sip]"r"(sip));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 126:src/../h/riscv.hpp ****     __asm__ volatile("csrs sstatus, %[mask]"::[mask]"r"(mask));
 109              		.loc 2 126 5
 110              		.loc 2 126 63 is_stmt 0
 111 0094 93070002 		li	a5,32
 112              	#APP
 113              	# 126 "src/../h/riscv.hpp" 1
 127              	}
 114              		csrs sstatus, a5
 115              	# 0 "" 2
 116              	.LVL8:
 117              	#NO_APP
GAS LISTING /tmp/ccqvXlZq.s 			page 9


 118              	.LBE87:
 119              	.LBE86:
 199:src/riscv.cpp ****     if(TCB::newThrUserMode){
 120              		.loc 1 199 5 is_stmt 1
 121 009c 97070000 		la	a5,_ZN3TCB14newThrUserModeE
 121      83B70700 
 122 00a4 83C70700 		lbu	a5,0(a5)
 123 00a8 63800702 		beqz	a5,.L6
 200:src/riscv.cpp ****         Riscv::mc_sstatus(SSTATUS_SPP);
 124              		.loc 1 200 9
 125              	.LVL9:
 126              	.LBB88:
 127              	.LBB89:
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 130:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 131:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 132:src/../h/riscv.hpp ****     return sstatus;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 135:src/../h/riscv.hpp ****     __asm__ volatile("csrw sstatus, %[sstatus]"::[sstatus]"r"(sstatus));
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 139:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %[mask]"::[mask]"r"(mask));
 128              		.loc 2 139 5
 129              		.loc 2 139 63 is_stmt 0
 130 00ac 93070010 		li	a5,256
 131              	#APP
 132              	# 139 "src/../h/riscv.hpp" 1
 140              	}
 133              		csrc sstatus, a5
 134              	# 0 "" 2
 135              	.LVL10:
 136              	#NO_APP
 137              	.L7:
 138              	.LBE89:
 139              	.LBE88:
 201:src/riscv.cpp ****     }
 202:src/riscv.cpp ****     else{
 203:src/riscv.cpp ****         Riscv::ms_sstatus(SSTATUS_SPP);
 204:src/riscv.cpp ****     }
 205:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 140              		.loc 1 205 5 is_stmt 1
 141              		.loc 1 205 38 is_stmt 0
 142              	#APP
 143              	# 205 "src/riscv.cpp" 1
 206              	    __asm__ volatile("sret");
 144              		csrw sepc, ra
 145              	# 0 "" 2
 146              		.loc 1 206 5 is_stmt 1
 147              		.loc 1 206 29 is_stmt 0
 148              	# 206 "src/riscv.cpp" 1
 207              	}
 149              		sret
 150              	# 0 "" 2
 151              		.loc 1 207 1
GAS LISTING /tmp/ccqvXlZq.s 			page 10


 152              	#NO_APP
 153 00bc 03348100 		ld	s0,8(sp)
 154              		.cfi_remember_state
 155              		.cfi_restore 8
 156              		.cfi_def_cfa 2, 16
 157 00c0 13010101 		addi	sp,sp,16
 158              		.cfi_def_cfa_offset 0
 159 00c4 67800000 		jr	ra
 160              	.L6:
 161              		.cfi_restore_state
 203:src/riscv.cpp ****     }
 162              		.loc 1 203 9 is_stmt 1
 163              	.LVL11:
 164              	.LBB90:
 165              	.LBB91:
 126:src/../h/riscv.hpp **** }
 166              		.loc 2 126 5
 126:src/../h/riscv.hpp **** }
 167              		.loc 2 126 63 is_stmt 0
 168 00c8 93070010 		li	a5,256
 169              	#APP
 170              	# 126 "src/../h/riscv.hpp" 1
 127:src/../h/riscv.hpp **** 
 171              		csrs sstatus, a5
 172              	# 0 "" 2
 173              		.loc 2 127 1
 174              	#NO_APP
 175 00d0 6FF05FFE 		j	.L7
 176              	.LBE91:
 177              	.LBE90:
 178              		.cfi_endproc
 179              	.LFE37:
 181              		.align	2
 182              		.globl	_ZN5Riscv10putToSleepEm
 184              	_ZN5Riscv10putToSleepEm:
 185              	.LFB38:
 208:src/riscv.cpp **** 
 209:src/riscv.cpp **** 
 210:src/riscv.cpp **** int Riscv::putToSleep(time_t time) {
 186              		.loc 1 210 36 is_stmt 1
 187              		.cfi_startproc
 188              	.LVL12:
 211:src/riscv.cpp ****     if(time<=0)return -1;
 189              		.loc 1 211 5
 190 00d4 63040510 		beqz	a0,.L18
 210:src/riscv.cpp ****     if(time<=0)return -1;
 191              		.loc 1 210 36 is_stmt 0
 192 00d8 130101FE 		addi	sp,sp,-32
 193              		.cfi_def_cfa_offset 32
 194 00dc 233C1100 		sd	ra,24(sp)
 195 00e0 23388100 		sd	s0,16(sp)
 196 00e4 23349100 		sd	s1,8(sp)
 197 00e8 23302101 		sd	s2,0(sp)
 198              		.cfi_offset 1, -8
 199              		.cfi_offset 8, -16
 200              		.cfi_offset 9, -24
 201              		.cfi_offset 18, -32
GAS LISTING /tmp/ccqvXlZq.s 			page 11


 202 00ec 13040102 		addi	s0,sp,32
 203              		.cfi_def_cfa 8, 0
 204 00f0 93040500 		mv	s1,a0
 212:src/riscv.cpp ****     TCB::running->setSleeping(true);
 205              		.loc 1 212 5 is_stmt 1
 206              		.loc 1 212 30 is_stmt 0
 207 00f4 17090000 		la	s2,_ZN3TCB7runningE
 207      03390900 
 208 00fc 83370900 		ld	a5,0(s2)
 209              	.LVL13:
 210              	.LBB92:
 211              	.LBB93:
 212              		.file 3 "src/../h/../h/TCB.hpp"
   1:src/../h/../h/TCB.hpp **** //
   2:src/../h/../h/TCB.hpp **** // Created by os on 7/18/23.
   3:src/../h/../h/TCB.hpp **** //
   4:src/../h/../h/TCB.hpp **** 
   5:src/../h/../h/TCB.hpp **** //sa vezbi 6 i 7 iskoriscen deo
   6:src/../h/../h/TCB.hpp **** 
   7:src/../h/../h/TCB.hpp **** #ifndef PROJECT_BASE_TCB_HPP
   8:src/../h/../h/TCB.hpp **** #define PROJECT_BASE_TCB_HPP
   9:src/../h/../h/TCB.hpp **** 
  10:src/../h/../h/TCB.hpp **** #include "../lib/hw.h"
  11:src/../h/../h/TCB.hpp **** 
  12:src/../h/../h/TCB.hpp **** class TCB{
  13:src/../h/../h/TCB.hpp **** public:
  14:src/../h/../h/TCB.hpp ****     virtual ~TCB();
  15:src/../h/../h/TCB.hpp **** 
  16:src/../h/../h/TCB.hpp ****     bool isBlocked() const {
  17:src/../h/../h/TCB.hpp ****         return blocked;
  18:src/../h/../h/TCB.hpp ****     }
  19:src/../h/../h/TCB.hpp **** 
  20:src/../h/../h/TCB.hpp ****     void setBlocked(bool blocked) {
  21:src/../h/../h/TCB.hpp ****         TCB::blocked = blocked;
  22:src/../h/../h/TCB.hpp ****     }
  23:src/../h/../h/TCB.hpp **** 
  24:src/../h/../h/TCB.hpp ****     bool isFinished() const{
  25:src/../h/../h/TCB.hpp ****         return finished;
  26:src/../h/../h/TCB.hpp ****     }
  27:src/../h/../h/TCB.hpp **** 
  28:src/../h/../h/TCB.hpp ****     void setFinished(bool finished){
  29:src/../h/../h/TCB.hpp ****         TCB::finished = finished;
  30:src/../h/../h/TCB.hpp ****     }
  31:src/../h/../h/TCB.hpp **** 
  32:src/../h/../h/TCB.hpp ****     uint64 getTimeSlice() const{
  33:src/../h/../h/TCB.hpp ****         return timeSlice;
  34:src/../h/../h/TCB.hpp ****     }
  35:src/../h/../h/TCB.hpp **** 
  36:src/../h/../h/TCB.hpp ****     bool isSleeping() const {
  37:src/../h/../h/TCB.hpp ****         return sleeping;
  38:src/../h/../h/TCB.hpp ****     }
  39:src/../h/../h/TCB.hpp **** 
  40:src/../h/../h/TCB.hpp ****     void setSleeping(bool sleeping) {
  41:src/../h/../h/TCB.hpp ****         TCB::sleeping = sleeping;
 213              		.loc 3 41 9 is_stmt 1
 214              		.loc 3 41 23 is_stmt 0
 215 0100 13071000 		li	a4,1
GAS LISTING /tmp/ccqvXlZq.s 			page 12


 216 0104 A380E704 		sb	a4,65(a5)
 217              	.LVL14:
 218              	.LBE93:
 219              	.LBE92:
 213:src/riscv.cpp **** 
 214:src/riscv.cpp ****     SleepingElem* newElem=(SleepingElem*)MemoryAllocator::alloc((sizeof(SleepingElem)+MEM_BLOCK_SIZ
 220              		.loc 1 214 5 is_stmt 1
 221              		.loc 1 214 64 is_stmt 0
 222 0108 13051000 		li	a0,1
 223              	.LVL15:
 224 010c 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 224      E7800000 
 225              	.LVL16:
 215:src/riscv.cpp ****     newElem->thr=TCB::running;
 226              		.loc 1 215 5 is_stmt 1
 227              		.loc 1 215 17 is_stmt 0
 228 0114 83370900 		ld	a5,0(s2)
 229 0118 2330F500 		sd	a5,0(a0)
 216:src/riscv.cpp **** 
 217:src/riscv.cpp ****     if(!Riscv::headSleeping){
 230              		.loc 1 217 5 is_stmt 1
 231              	.LBB94:
 232              		.loc 1 217 8 is_stmt 0
 233 011c 17060000 		ld	a2,.LANCHOR0
 233      03360600 
 234              		.loc 1 217 5
 235 0124 630C0604 		beqz	a2,.L23
 236              	.LBE94:
 218:src/riscv.cpp ****         newElem->toSleepRel=time;
 219:src/riscv.cpp ****         newElem->next=nullptr;
 220:src/riscv.cpp ****         headSleeping=newElem;
 221:src/riscv.cpp ****     }
 222:src/riscv.cpp ****     else{
 223:src/riscv.cpp ****         if(time<=Riscv::headSleeping->toSleepRel){
 237              		.loc 1 223 9 is_stmt 1
 238              	.LBB98:
 239              	.LBB95:
 240              		.loc 1 223 39 is_stmt 0
 241 0128 03378600 		ld	a4,8(a2)
 242              		.loc 1 223 9
 243 012c 63629706 		bltu	a4,s1,.L13
 224:src/riscv.cpp ****             newElem->toSleepRel=time;
 244              		.loc 1 224 13 is_stmt 1
 245              		.loc 1 224 32 is_stmt 0
 246 0130 23349500 		sd	s1,8(a0)
 225:src/riscv.cpp ****             newElem->next=Riscv::headSleeping;
 247              		.loc 1 225 13 is_stmt 1
 248              		.loc 1 225 26 is_stmt 0
 249 0134 2338C500 		sd	a2,16(a0)
 226:src/riscv.cpp ****             headSleeping->toSleepRel-=time;
 250              		.loc 1 226 13 is_stmt 1
 251              		.loc 1 226 37 is_stmt 0
 252 0138 03378600 		ld	a4,8(a2)
 253 013c 33079740 		sub	a4,a4,s1
 254 0140 2334E600 		sd	a4,8(a2)
 227:src/riscv.cpp ****             headSleeping=newElem;
 255              		.loc 1 227 13 is_stmt 1
GAS LISTING /tmp/ccqvXlZq.s 			page 13


 256              		.loc 1 227 25 is_stmt 0
 257 0144 97070000 		sd	a0,.LANCHOR0,a5
 257      23B0A700 
 258              	.L12:
 259              	.LBE95:
 260              	.LBE98:
 228:src/riscv.cpp ****         }
 229:src/riscv.cpp ****         else{
 230:src/riscv.cpp ****             time_t relTime=time-Riscv::headSleeping->toSleepRel;
 231:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 232:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 233:src/riscv.cpp ****             while(pom!=nullptr && relTime>pom->toSleepRel){
 234:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 235:src/riscv.cpp ****                 prev=pom;
 236:src/riscv.cpp ****                 pom=pom->next;
 237:src/riscv.cpp ****             }
 238:src/riscv.cpp ****             if(pom==nullptr){
 239:src/riscv.cpp ****                 newElem->next= nullptr;
 240:src/riscv.cpp ****             }
 241:src/riscv.cpp ****             else{
 242:src/riscv.cpp ****                 newElem->next=pom;
 243:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 244:src/riscv.cpp ****             }
 245:src/riscv.cpp ****             newElem->toSleepRel=relTime;
 246:src/riscv.cpp ****             prev->next=newElem;
 247:src/riscv.cpp ****         }
 248:src/riscv.cpp ****     }
 249:src/riscv.cpp **** 
 250:src/riscv.cpp ****     TCB::timeSliceCounter=0;
 261              		.loc 1 250 5 is_stmt 1
 262              		.loc 1 250 26 is_stmt 0
 263 014c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 263      83B70700 
 264 0154 23B00700 		sd	zero,0(a5)
 251:src/riscv.cpp ****     TCB::dispatch();
 265              		.loc 1 251 5 is_stmt 1
 266              		.loc 1 251 18 is_stmt 0
 267 0158 97000000 		call	_ZN3TCB8dispatchEv@plt
 267      E7800000 
 268              	.LVL17:
 252:src/riscv.cpp ****     return 0;
 269              		.loc 1 252 5 is_stmt 1
 270              		.loc 1 252 12 is_stmt 0
 271 0160 13050000 		li	a0,0
 253:src/riscv.cpp **** }
 272              		.loc 1 253 1
 273 0164 83308101 		ld	ra,24(sp)
 274              		.cfi_remember_state
 275              		.cfi_restore 1
 276 0168 03340101 		ld	s0,16(sp)
 277              		.cfi_restore 8
 278              		.cfi_def_cfa 2, 32
 279 016c 83348100 		ld	s1,8(sp)
 280              		.cfi_restore 9
 281              	.LVL18:
 282 0170 03390100 		ld	s2,0(sp)
 283              		.cfi_restore 18
GAS LISTING /tmp/ccqvXlZq.s 			page 14


 284 0174 13010102 		addi	sp,sp,32
 285              		.cfi_def_cfa_offset 0
 286 0178 67800000 		jr	ra
 287              	.LVL19:
 288              	.L23:
 289              		.cfi_restore_state
 290              	.LBB99:
 218:src/riscv.cpp ****         newElem->next=nullptr;
 291              		.loc 1 218 9 is_stmt 1
 218:src/riscv.cpp ****         newElem->next=nullptr;
 292              		.loc 1 218 28 is_stmt 0
 293 017c 23349500 		sd	s1,8(a0)
 219:src/riscv.cpp ****         headSleeping=newElem;
 294              		.loc 1 219 9 is_stmt 1
 219:src/riscv.cpp ****         headSleeping=newElem;
 295              		.loc 1 219 22 is_stmt 0
 296 0180 23380500 		sd	zero,16(a0)
 220:src/riscv.cpp ****     }
 297              		.loc 1 220 9 is_stmt 1
 220:src/riscv.cpp ****     }
 298              		.loc 1 220 21 is_stmt 0
 299 0184 97070000 		sd	a0,.LANCHOR0,a5
 299      23B0A700 
 300 018c 6FF01FFC 		j	.L12
 301              	.L13:
 302              	.LBB97:
 303              	.LBB96:
 230:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 304              		.loc 1 230 13 is_stmt 1
 230:src/riscv.cpp ****             SleepingElem* pom=headSleeping->next;
 305              		.loc 1 230 20 is_stmt 0
 306 0190 3387E440 		sub	a4,s1,a4
 307              	.LVL20:
 231:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 308              		.loc 1 231 13 is_stmt 1
 231:src/riscv.cpp ****             SleepingElem* prev=headSleeping;
 309              		.loc 1 231 27 is_stmt 0
 310 0194 83370601 		ld	a5,16(a2)
 311              	.LVL21:
 232:src/riscv.cpp ****             while(pom!=nullptr && relTime>pom->toSleepRel){
 312              		.loc 1 232 13 is_stmt 1
 313              	.L15:
 233:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 314              		.loc 1 233 13
 233:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 315              		.loc 1 233 32
 316 0198 638E0700 		beqz	a5,.L14
 233:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 317              		.loc 1 233 48 is_stmt 0 discriminator 1
 318 019c 83B68700 		ld	a3,8(a5)
 233:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 319              		.loc 1 233 32 discriminator 1
 320 01a0 63FAE600 		bgeu	a3,a4,.L14
 234:src/riscv.cpp ****                 prev=pom;
 321              		.loc 1 234 17 is_stmt 1
 234:src/riscv.cpp ****                 prev=pom;
 322              		.loc 1 234 24 is_stmt 0
GAS LISTING /tmp/ccqvXlZq.s 			page 15


 323 01a4 3307D740 		sub	a4,a4,a3
 324              	.LVL22:
 235:src/riscv.cpp ****                 pom=pom->next;
 325              		.loc 1 235 17 is_stmt 1
 236:src/riscv.cpp ****             }
 326              		.loc 1 236 17
 235:src/riscv.cpp ****                 pom=pom->next;
 327              		.loc 1 235 21 is_stmt 0
 328 01a8 13860700 		mv	a2,a5
 236:src/riscv.cpp ****             }
 329              		.loc 1 236 20
 330 01ac 83B70701 		ld	a5,16(a5)
 331              	.LVL23:
 233:src/riscv.cpp ****                 relTime-=pom->toSleepRel;
 332              		.loc 1 233 13
 333 01b0 6FF09FFE 		j	.L15
 334              	.L14:
 238:src/riscv.cpp ****                 newElem->next= nullptr;
 335              		.loc 1 238 13 is_stmt 1
 336 01b4 63800702 		beqz	a5,.L24
 242:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 337              		.loc 1 242 17
 242:src/riscv.cpp ****                 pom->toSleepRel-=relTime;
 338              		.loc 1 242 30 is_stmt 0
 339 01b8 2338F500 		sd	a5,16(a0)
 243:src/riscv.cpp ****             }
 340              		.loc 1 243 17 is_stmt 1
 243:src/riscv.cpp ****             }
 341              		.loc 1 243 32 is_stmt 0
 342 01bc 83B68700 		ld	a3,8(a5)
 343 01c0 B386E640 		sub	a3,a3,a4
 344 01c4 23B4D700 		sd	a3,8(a5)
 345              	.L17:
 245:src/riscv.cpp ****             prev->next=newElem;
 346              		.loc 1 245 13 is_stmt 1
 245:src/riscv.cpp ****             prev->next=newElem;
 347              		.loc 1 245 32 is_stmt 0
 348 01c8 2334E500 		sd	a4,8(a0)
 246:src/riscv.cpp ****         }
 349              		.loc 1 246 13 is_stmt 1
 246:src/riscv.cpp ****         }
 350              		.loc 1 246 23 is_stmt 0
 351 01cc 2338A600 		sd	a0,16(a2)
 352 01d0 6FF0DFF7 		j	.L12
 353              	.L24:
 239:src/riscv.cpp ****             }
 354              		.loc 1 239 17 is_stmt 1
 239:src/riscv.cpp ****             }
 355              		.loc 1 239 30 is_stmt 0
 356 01d4 23380500 		sd	zero,16(a0)
 357 01d8 6FF01FFF 		j	.L17
 358              	.LVL24:
 359              	.L18:
 360              		.cfi_def_cfa_register 2
 361              		.cfi_restore 1
 362              		.cfi_restore 8
 363              		.cfi_restore 9
GAS LISTING /tmp/ccqvXlZq.s 			page 16


 364              		.cfi_restore 18
 365              	.LBE96:
 366              	.LBE97:
 367              	.LBE99:
 211:src/riscv.cpp ****     TCB::running->setSleeping(true);
 368              		.loc 1 211 24
 369 01dc 1305F0FF 		li	a0,-1
 370              	.LVL25:
 371              		.loc 1 253 1
 372 01e0 67800000 		ret
 373              		.cfi_endproc
 374              	.LFE38:
 376              		.section	.rodata.str1.8,"aMS",@progbits,1
 377              		.align	3
 378              	.LC0:
 379 0000 47524553 		.string	"GRESKA:"
 379      4B413A00 
 380              		.align	3
 381              	.LC1:
 382 0008 0A736570 		.string	"\nsepc:"
 382      633A00
 383 000f 00       		.align	3
 384              	.LC2:
 385 0010 0A00     		.string	"\n"
 386              		.text
 387              		.align	2
 388              		.globl	_ZN5Riscv20handleEcallExceptionEv
 390              	_ZN5Riscv20handleEcallExceptionEv:
 391              	.LFB34:
  14:src/riscv.cpp ****     uint64 scause=r_scause();
 392              		.loc 1 14 35 is_stmt 1
 393              		.cfi_startproc
 394 01e4 130101F9 		addi	sp,sp,-112
 395              		.cfi_def_cfa_offset 112
 396 01e8 23341106 		sd	ra,104(sp)
 397 01ec 23308106 		sd	s0,96(sp)
 398 01f0 233C9104 		sd	s1,88(sp)
 399              		.cfi_offset 1, -8
 400              		.cfi_offset 8, -16
 401              		.cfi_offset 9, -24
 402 01f4 13040107 		addi	s0,sp,112
 403              		.cfi_def_cfa 8, 0
  15:src/riscv.cpp **** 
 404              		.loc 1 15 5
 405              	.LBB100:
 406              	.LBB101:
  75:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 407              		.loc 2 75 5
  76:src/../h/riscv.hpp ****     return scause;
 408              		.loc 2 76 5
  76:src/../h/riscv.hpp ****     return scause;
 409              		.loc 2 76 68 is_stmt 0
 410              	#APP
 411              	# 76 "src/../h/riscv.hpp" 1
 412              		csrr a5, scause
 413              	# 0 "" 2
 414              	#NO_APP
GAS LISTING /tmp/ccqvXlZq.s 			page 17


 415 01fc 2330F4FA 		sd	a5,-96(s0)
  77:src/../h/riscv.hpp **** }
 416              		.loc 2 77 5 is_stmt 1
  77:src/../h/riscv.hpp **** }
 417              		.loc 2 77 12 is_stmt 0
 418 0200 833404FA 		ld	s1,-96(s0)
 419              	.LVL26:
 420              	.LBE101:
 421              	.LBE100:
  17:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x50(fp)": "=r"(a0));
 422              		.loc 1 17 5 is_stmt 1
  18:src/riscv.cpp ****     uint64 volatile a1;
 423              		.loc 1 18 5
  18:src/riscv.cpp ****     uint64 volatile a1;
 424              		.loc 1 18 50 is_stmt 0
 425              	#APP
 426              	# 18 "src/riscv.cpp" 1
 427              		ld a5, 0x50(fp)
 428              	# 0 "" 2
 429              	#NO_APP
 430 0208 233CF4FC 		sd	a5,-40(s0)
  19:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x58(fp)": "=r"(a1));
 431              		.loc 1 19 5 is_stmt 1
  20:src/riscv.cpp ****     uint64 volatile a2;
 432              		.loc 1 20 5
  20:src/riscv.cpp ****     uint64 volatile a2;
 433              		.loc 1 20 50 is_stmt 0
 434              	#APP
 435              	# 20 "src/riscv.cpp" 1
 436              		ld a5, 0x58(fp)
 437              	# 0 "" 2
 438              	#NO_APP
 439 0210 2338F4FC 		sd	a5,-48(s0)
  21:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x60(fp)": "=r"(a2));
 440              		.loc 1 21 5 is_stmt 1
  22:src/riscv.cpp ****     uint64 volatile a3;
 441              		.loc 1 22 5
  22:src/riscv.cpp ****     uint64 volatile a3;
 442              		.loc 1 22 50 is_stmt 0
 443              	#APP
 444              	# 22 "src/riscv.cpp" 1
 445              		ld a5, 0x60(fp)
 446              	# 0 "" 2
 447              	#NO_APP
 448 0218 2334F4FC 		sd	a5,-56(s0)
  23:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x68(fp)": "=r"(a3));
 449              		.loc 1 23 5 is_stmt 1
  24:src/riscv.cpp ****     uint64 volatile a4;
 450              		.loc 1 24 5
  24:src/riscv.cpp ****     uint64 volatile a4;
 451              		.loc 1 24 50 is_stmt 0
 452              	#APP
 453              	# 24 "src/riscv.cpp" 1
 454              		ld a5, 0x68(fp)
 455              	# 0 "" 2
 456              	#NO_APP
 457 0220 2330F4FC 		sd	a5,-64(s0)
GAS LISTING /tmp/ccqvXlZq.s 			page 18


  25:src/riscv.cpp ****     __asm__ volatile("ld %0, 0x70(fp)": "=r"(a4));
 458              		.loc 1 25 5 is_stmt 1
  26:src/riscv.cpp **** 
 459              		.loc 1 26 5
  26:src/riscv.cpp **** 
 460              		.loc 1 26 50 is_stmt 0
 461              	#APP
 462              	# 26 "src/riscv.cpp" 1
 463              		ld a5, 0x70(fp)
 464              	# 0 "" 2
 465              	#NO_APP
 466 0228 233CF4FA 		sd	a5,-72(s0)
  28:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 467              		.loc 1 28 5 is_stmt 1
 468              	.LBB102:
  28:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 469              		.loc 1 28 23 is_stmt 0
 470 022c 138784FF 		addi	a4,s1,-8
  28:src/riscv.cpp ****         //09 iz sist rezima, 08 iz korisnickog
 471              		.loc 1 28 5
 472 0230 93071000 		li	a5,1
 473 0234 63EAE726 		bgtu	a4,a5,.L26
 474              	.LBB103:
  30:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 475              		.loc 1 30 9 is_stmt 1
 476              	.LBB104:
 477              	.LBB105:
  84:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 478              		.loc 2 84 5
  85:src/../h/riscv.hpp ****     return sepc;
 479              		.loc 2 85 5
  85:src/../h/riscv.hpp ****     return sepc;
 480              		.loc 2 85 60 is_stmt 0
 481              	#APP
 482              	# 85 "src/../h/riscv.hpp" 1
 483              		csrr a5, sepc
 484              	# 0 "" 2
 485              	#NO_APP
 486 023c 2338F4FA 		sd	a5,-80(s0)
  86:src/../h/riscv.hpp **** }
 487              		.loc 2 86 5 is_stmt 1
  86:src/../h/riscv.hpp **** }
 488              		.loc 2 86 12 is_stmt 0
 489 0240 833704FB 		ld	a5,-80(s0)
 490              	.LBE105:
 491              	.LBE104:
  30:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 492              		.loc 1 30 38
 493 0244 93874700 		addi	a5,a5,4
  30:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 494              		.loc 1 30 39
 495 0248 2338F4F8 		sd	a5,-112(s0)
  31:src/riscv.cpp **** 
 496              		.loc 1 31 9 is_stmt 1
 497              	.LBB106:
 498              	.LBB107:
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
GAS LISTING /tmp/ccqvXlZq.s 			page 19


 499              		.loc 2 130 5
 131:src/../h/riscv.hpp ****     return sstatus;
 500              		.loc 2 131 5
 131:src/../h/riscv.hpp ****     return sstatus;
 501              		.loc 2 131 72 is_stmt 0
 502              	#APP
 503              	# 131 "src/../h/riscv.hpp" 1
 504              		csrr a5, sstatus
 505              	# 0 "" 2
 506              	#NO_APP
 507 0250 2334F4FA 		sd	a5,-88(s0)
 132:src/../h/riscv.hpp **** }
 508              		.loc 2 132 5 is_stmt 1
 132:src/../h/riscv.hpp **** }
 509              		.loc 2 132 12 is_stmt 0
 510 0254 833784FA 		ld	a5,-88(s0)
 511              	.LBE107:
 512              	.LBE106:
  31:src/riscv.cpp **** 
 513              		.loc 1 31 43
 514 0258 233CF4F8 		sd	a5,-104(s0)
  33:src/riscv.cpp ****             //mem_alloc
 515              		.loc 1 33 9 is_stmt 1
 516              	.LBB108:
  33:src/riscv.cpp ****             //mem_alloc
 517              		.loc 1 33 14 is_stmt 0
 518 025c 033784FD 		ld	a4,-40(s0)
  33:src/riscv.cpp ****             //mem_alloc
 519              		.loc 1 33 9
 520 0260 93071000 		li	a5,1
 521 0264 6304F70A 		beq	a4,a5,.L50
 522              	.LBE108:
 523              	.LBE103:
 524              	.LBE102:
  38:src/riscv.cpp ****             //mem_free
 525              		.loc 1 38 14 is_stmt 1
 526              	.LBB251:
 527              	.LBB236:
 528              	.LBB219:
 529              	.LBB109:
  38:src/riscv.cpp ****             //mem_free
 530              		.loc 1 38 19 is_stmt 0
 531 0268 033784FD 		ld	a4,-40(s0)
  38:src/riscv.cpp ****             //mem_free
 532              		.loc 1 38 14
 533 026c 93072000 		li	a5,2
 534 0270 6308F70C 		beq	a4,a5,.L51
 535              	.LBE109:
 536              	.LBE219:
 537              	.LBE236:
 538              	.LBE251:
  44:src/riscv.cpp ****             /*thread_create
 539              		.loc 1 44 14 is_stmt 1
 540              	.LBB252:
 541              	.LBB237:
 542              	.LBB220:
 543              	.LBB206:
GAS LISTING /tmp/ccqvXlZq.s 			page 20


 544              	.LBB110:
  44:src/riscv.cpp ****             /*thread_create
 545              		.loc 1 44 19 is_stmt 0
 546 0274 033784FD 		ld	a4,-40(s0)
  44:src/riscv.cpp ****             /*thread_create
 547              		.loc 1 44 14
 548 0278 93071001 		li	a5,17
 549 027c 630CF70C 		beq	a4,a5,.L52
 550              	.LBE110:
 551              	.LBE206:
 552              	.LBE220:
 553              	.LBE237:
 554              	.LBE252:
  66:src/riscv.cpp ****             //thread_exit()
 555              		.loc 1 66 14 is_stmt 1
 556              	.LBB253:
 557              	.LBB238:
 558              	.LBB221:
 559              	.LBB207:
 560              	.LBB194:
 561              	.LBB111:
  66:src/riscv.cpp ****             //thread_exit()
 562              		.loc 1 66 19 is_stmt 0
 563 0280 033784FD 		ld	a4,-40(s0)
  66:src/riscv.cpp ****             //thread_exit()
 564              		.loc 1 66 14
 565 0284 93072001 		li	a5,18
 566 0288 630AF710 		beq	a4,a5,.L53
 567              	.LBE111:
 568              	.LBE194:
 569              	.LBE207:
 570              	.LBE221:
 571              	.LBE238:
 572              	.LBE253:
  71:src/riscv.cpp ****             //thread_dispatch()
 573              		.loc 1 71 14 is_stmt 1
 574              	.LBB254:
 575              	.LBB239:
 576              	.LBB222:
 577              	.LBB208:
 578              	.LBB195:
 579              	.LBB181:
 580              	.LBB112:
  71:src/riscv.cpp ****             //thread_dispatch()
 581              		.loc 1 71 19 is_stmt 0
 582 028c 033784FD 		ld	a4,-40(s0)
  71:src/riscv.cpp ****             //thread_dispatch()
 583              		.loc 1 71 14
 584 0290 93073001 		li	a5,19
 585 0294 630CF710 		beq	a4,a5,.L54
 586              	.LBE112:
 587              	.LBE181:
 588              	.LBE195:
 589              	.LBE208:
 590              	.LBE222:
 591              	.LBE239:
 592              	.LBE254:
GAS LISTING /tmp/ccqvXlZq.s 			page 21


  76:src/riscv.cpp ****             //char getc();
 593              		.loc 1 76 14 is_stmt 1
 594              	.LBB255:
 595              	.LBB240:
 596              	.LBB223:
 597              	.LBB209:
 598              	.LBB196:
 599              	.LBB182:
 600              	.LBB171:
 601              	.LBB113:
  76:src/riscv.cpp ****             //char getc();
 602              		.loc 1 76 19 is_stmt 0
 603 0298 033784FD 		ld	a4,-40(s0)
  76:src/riscv.cpp ****             //char getc();
 604              		.loc 1 76 14
 605 029c 93071004 		li	a5,65
 606 02a0 6302F712 		beq	a4,a5,.L55
 607              	.LBE113:
 608              	.LBE171:
 609              	.LBE182:
 610              	.LBE196:
 611              	.LBE209:
 612              	.LBE223:
 613              	.LBE240:
 614              	.LBE255:
  85:src/riscv.cpp ****             //void putc(c)
 615              		.loc 1 85 14 is_stmt 1
 616              	.LBB256:
 617              	.LBB241:
 618              	.LBB224:
 619              	.LBB210:
 620              	.LBB197:
 621              	.LBB183:
 622              	.LBB172:
 623              	.LBB163:
 624              	.LBB114:
  85:src/riscv.cpp ****             //void putc(c)
 625              		.loc 1 85 19 is_stmt 0
 626 02a4 033784FD 		ld	a4,-40(s0)
  85:src/riscv.cpp ****             //void putc(c)
 627              		.loc 1 85 14
 628 02a8 93072004 		li	a5,66
 629 02ac 6304F712 		beq	a4,a5,.L56
 630              	.LBE114:
 631              	.LBE163:
 632              	.LBE172:
 633              	.LBE183:
 634              	.LBE197:
 635              	.LBE210:
 636              	.LBE224:
 637              	.LBE241:
 638              	.LBE256:
  93:src/riscv.cpp ****             //sem_open
 639              		.loc 1 93 14 is_stmt 1
 640              	.LBB257:
 641              	.LBB242:
 642              	.LBB225:
GAS LISTING /tmp/ccqvXlZq.s 			page 22


 643              	.LBB211:
 644              	.LBB198:
 645              	.LBB184:
 646              	.LBB173:
 647              	.LBB164:
 648              	.LBB155:
 649              	.LBB115:
  93:src/riscv.cpp ****             //sem_open
 650              		.loc 1 93 19 is_stmt 0
 651 02b0 033784FD 		ld	a4,-40(s0)
  93:src/riscv.cpp ****             //sem_open
 652              		.loc 1 93 14
 653 02b4 93071002 		li	a5,33
 654 02b8 6308F712 		beq	a4,a5,.L57
 655              	.LBE115:
 656              	.LBE155:
 657              	.LBE164:
 658              	.LBE173:
 659              	.LBE184:
 660              	.LBE198:
 661              	.LBE211:
 662              	.LBE225:
 663              	.LBE242:
 664              	.LBE257:
 111:src/riscv.cpp ****             //sem_wait(sem_t id)
 665              		.loc 1 111 14 is_stmt 1
 666              	.LBB258:
 667              	.LBB243:
 668              	.LBB226:
 669              	.LBB212:
 670              	.LBB199:
 671              	.LBB185:
 672              	.LBB174:
 673              	.LBB165:
 674              	.LBB156:
 675              	.LBB148:
 676              	.LBB116:
 111:src/riscv.cpp ****             //sem_wait(sem_t id)
 677              		.loc 1 111 19 is_stmt 0
 678 02bc 033784FD 		ld	a4,-40(s0)
 111:src/riscv.cpp ****             //sem_wait(sem_t id)
 679              		.loc 1 111 14
 680 02c0 93073002 		li	a5,35
 681 02c4 6304F716 		beq	a4,a5,.L58
 682              	.LBE116:
 683              	.LBE148:
 684              	.LBE156:
 685              	.LBE165:
 686              	.LBE174:
 687              	.LBE185:
 688              	.LBE199:
 689              	.LBE212:
 690              	.LBE226:
 691              	.LBE243:
 692              	.LBE258:
 120:src/riscv.cpp ****             //sem_close(sem_t handle)
 693              		.loc 1 120 14 is_stmt 1
GAS LISTING /tmp/ccqvXlZq.s 			page 23


 694              	.LBB259:
 695              	.LBB244:
 696              	.LBB227:
 697              	.LBB213:
 698              	.LBB200:
 699              	.LBB186:
 700              	.LBB175:
 701              	.LBB166:
 702              	.LBB157:
 703              	.LBB149:
 704              	.LBB140:
 705              	.LBB117:
 120:src/riscv.cpp ****             //sem_close(sem_t handle)
 706              		.loc 1 120 19 is_stmt 0
 707 02c8 033784FD 		ld	a4,-40(s0)
 120:src/riscv.cpp ****             //sem_close(sem_t handle)
 708              		.loc 1 120 14
 709 02cc 93072002 		li	a5,34
 710 02d0 6300F718 		beq	a4,a5,.L59
 711              	.LBE117:
 712              	.LBE140:
 713              	.LBE149:
 714              	.LBE157:
 715              	.LBE166:
 716              	.LBE175:
 717              	.LBE186:
 718              	.LBE200:
 719              	.LBE213:
 720              	.LBE227:
 721              	.LBE244:
 722              	.LBE259:
 129:src/riscv.cpp ****             //sem_signal(sem_t id)
 723              		.loc 1 129 14 is_stmt 1
 724              	.LBB260:
 725              	.LBB245:
 726              	.LBB228:
 727              	.LBB214:
 728              	.LBB201:
 729              	.LBB187:
 730              	.LBB176:
 731              	.LBB167:
 732              	.LBB158:
 733              	.LBB150:
 734              	.LBB141:
 735              	.LBB133:
 736              	.LBB118:
 129:src/riscv.cpp ****             //sem_signal(sem_t id)
 737              		.loc 1 129 19 is_stmt 0
 738 02d4 033784FD 		ld	a4,-40(s0)
 129:src/riscv.cpp ****             //sem_signal(sem_t id)
 739              		.loc 1 129 14
 740 02d8 93074002 		li	a5,36
 741 02dc 630CF718 		beq	a4,a5,.L60
 742              	.LBE118:
 743              	.LBE133:
 744              	.LBE141:
 745              	.LBE150:
GAS LISTING /tmp/ccqvXlZq.s 			page 24


 746              	.LBE158:
 747              	.LBE167:
 748              	.LBE176:
 749              	.LBE187:
 750              	.LBE201:
 751              	.LBE214:
 752              	.LBE228:
 753              	.LBE245:
 754              	.LBE260:
 138:src/riscv.cpp ****             //thread_join(thread_t)
 755              		.loc 1 138 14 is_stmt 1
 756              	.LBB261:
 757              	.LBB246:
 758              	.LBB229:
 759              	.LBB215:
 760              	.LBB202:
 761              	.LBB188:
 762              	.LBB177:
 763              	.LBB168:
 764              	.LBB159:
 765              	.LBB151:
 766              	.LBB142:
 767              	.LBB134:
 768              	.LBB127:
 769              	.LBB119:
 138:src/riscv.cpp ****             //thread_join(thread_t)
 770              		.loc 1 138 19 is_stmt 0
 771 02e0 033784FD 		ld	a4,-40(s0)
 138:src/riscv.cpp ****             //thread_join(thread_t)
 772              		.loc 1 138 14
 773 02e4 93074001 		li	a5,20
 774 02e8 6308F71A 		beq	a4,a5,.L61
 775              	.LBE119:
 776              	.LBE127:
 777              	.LBE134:
 778              	.LBE142:
 779              	.LBE151:
 780              	.LBE159:
 781              	.LBE168:
 782              	.LBE177:
 783              	.LBE188:
 784              	.LBE202:
 785              	.LBE215:
 786              	.LBE229:
 787              	.LBE246:
 788              	.LBE261:
 142:src/riscv.cpp ****             //time_sleep(time_t)
 789              		.loc 1 142 14 is_stmt 1
 790              	.LBB262:
 791              	.LBB247:
 792              	.LBB230:
 793              	.LBB216:
 794              	.LBB203:
 795              	.LBB189:
 796              	.LBB178:
 797              	.LBB169:
 798              	.LBB160:
GAS LISTING /tmp/ccqvXlZq.s 			page 25


 799              	.LBB152:
 800              	.LBB143:
 801              	.LBB135:
 802              	.LBB128:
 803              	.LBB122:
 804              	.LBB120:
 142:src/riscv.cpp ****             //time_sleep(time_t)
 805              		.loc 1 142 19 is_stmt 0
 806 02ec 033784FD 		ld	a4,-40(s0)
 142:src/riscv.cpp ****             //time_sleep(time_t)
 807              		.loc 1 142 14
 808 02f0 93071003 		li	a5,49
 809 02f4 6314F702 		bne	a4,a5,.L28
 810              	.LBB121:
 144:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 811              		.loc 1 144 13 is_stmt 1
 144:src/riscv.cpp ****             int stat=Riscv::putToSleep(time);
 812              		.loc 1 144 33 is_stmt 0
 813 02f8 033504FD 		ld	a0,-48(s0)
 814              	.LVL27:
 145:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 815              		.loc 1 145 13 is_stmt 1
 145:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 816              		.loc 1 145 39 is_stmt 0
 817 02fc 97000000 		call	_ZN5Riscv10putToSleepEm
 817      E7800000 
 818              	.LVL28:
 146:src/riscv.cpp ****         }
 819              		.loc 1 146 13 is_stmt 1
 146:src/riscv.cpp ****         }
 820              		.loc 1 146 61 is_stmt 0
 821              	#APP
 822              	# 146 "src/riscv.cpp" 1
 823              		sd a0, 0x50(fp)
 824              	# 0 "" 2
 825              	#NO_APP
 826              	.LBE121:
 827 0308 6F004001 		j	.L28
 828              	.LVL29:
 829              	.L50:
 830              	.LBE120:
 831              	.LBE122:
 832              	.LBE128:
 833              	.LBE135:
 834              	.LBE143:
 835              	.LBE152:
 836              	.LBE160:
 837              	.LBE169:
 838              	.LBE178:
 839              	.LBE189:
 840              	.LBE203:
 841              	.LBE216:
 842              	.LBB217:
  35:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 843              		.loc 1 35 13 is_stmt 1
  35:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"((uint64)ptr));
 844              		.loc 1 35 45 is_stmt 0
GAS LISTING /tmp/ccqvXlZq.s 			page 26


 845 030c 033504FD 		ld	a0,-48(s0)
 846 0310 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 846      E7800000 
 847              	.LVL30:
  36:src/riscv.cpp ****         }
 848              		.loc 1 36 13 is_stmt 1
  36:src/riscv.cpp ****         }
 849              		.loc 1 36 68 is_stmt 0
 850              	#APP
 851              	# 36 "src/riscv.cpp" 1
 852              		sd a0, 0x50(fp)
 853              	# 0 "" 2
 854              	.LVL31:
 855              	#NO_APP
 856              	.L28:
 857              	.LBE217:
 858              	.LBE230:
 149:src/riscv.cpp ****         w_sepc(sepc);
 859              		.loc 1 149 9 is_stmt 1
 149:src/riscv.cpp ****         w_sepc(sepc);
 860              		.loc 1 149 18 is_stmt 0
 861 031c 833784F9 		ld	a5,-104(s0)
 862              	.LVL32:
 863              	.LBB231:
 864              	.LBB232:
 135:src/../h/riscv.hpp **** }
 865              		.loc 2 135 5 is_stmt 1
 135:src/../h/riscv.hpp **** }
 866              		.loc 2 135 72 is_stmt 0
 867              	#APP
 868              	# 135 "src/../h/riscv.hpp" 1
 869              		csrw sstatus, a5
 870              	# 0 "" 2
 871              	.LVL33:
 872              	#NO_APP
 873              	.LBE232:
 874              	.LBE231:
 150:src/riscv.cpp ****     }
 875              		.loc 1 150 9 is_stmt 1
 150:src/riscv.cpp ****     }
 876              		.loc 1 150 15 is_stmt 0
 877 0324 833704F9 		ld	a5,-112(s0)
 878              	.LVL34:
 879              	.LBB233:
 880              	.LBB234:
  89:src/../h/riscv.hpp **** }
 881              		.loc 2 89 5 is_stmt 1
  89:src/../h/riscv.hpp **** }
 882              		.loc 2 89 60 is_stmt 0
 883              	#APP
 884              	# 89 "src/../h/riscv.hpp" 1
 885              		csrw sepc, a5
 886              	# 0 "" 2
 887              	.LVL35:
 888              	#NO_APP
 889              	.LBE234:
 890              	.LBE233:
GAS LISTING /tmp/ccqvXlZq.s 			page 27


 891              	.LBE247:
 892              	.LBE262:
 163:src/riscv.cpp **** 
 893              		.loc 1 163 1
 894 032c 83308106 		ld	ra,104(sp)
 895              		.cfi_remember_state
 896              		.cfi_restore 1
 897 0330 03340106 		ld	s0,96(sp)
 898              		.cfi_restore 8
 899              		.cfi_def_cfa 2, 112
 900 0334 83348105 		ld	s1,88(sp)
 901              		.cfi_restore 9
 902 0338 13010107 		addi	sp,sp,112
 903              		.cfi_def_cfa_offset 0
 904 033c 67800000 		jr	ra
 905              	.LVL36:
 906              	.L51:
 907              		.cfi_restore_state
 908              	.LBB263:
 909              	.LBB248:
 910              	.LBB235:
 911              	.LBB218:
 912              	.LBB204:
  40:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 913              		.loc 1 40 13 is_stmt 1
  40:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 914              		.loc 1 40 43 is_stmt 0
 915 0340 033504FD 		ld	a0,-48(s0)
 916 0344 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 916      E7800000 
 917              	.LVL37:
  41:src/riscv.cpp ****         }
 918              		.loc 1 41 13 is_stmt 1
  41:src/riscv.cpp ****         }
 919              		.loc 1 41 61 is_stmt 0
 920              	#APP
 921              	# 41 "src/riscv.cpp" 1
 922              		sd a0, 0x50(fp)
 923              	# 0 "" 2
 924              	#NO_APP
 925              	.LBE204:
 926 0350 6FF0DFFC 		j	.L28
 927              	.LVL38:
 928              	.L52:
 929              	.LBB205:
 930              	.LBB190:
  52:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 931              		.loc 1 52 13 is_stmt 1
  52:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 932              		.loc 1 52 36 is_stmt 0
 933 0354 833404FD 		ld	s1,-48(s0)
 934              	.LVL39:
  53:src/riscv.cpp ****             else{
 935              		.loc 1 53 13 is_stmt 1
 936              	.LBB191:
 937 0358 63980400 		bnez	s1,.L31
  53:src/riscv.cpp ****             else{
GAS LISTING /tmp/ccqvXlZq.s 			page 28


 938              		.loc 1 53 27 discriminator 1
  53:src/riscv.cpp ****             else{
 939              		.loc 1 53 73 is_stmt 0 discriminator 1
 940 035c 9307E0FF 		li	a5,-2
 941              	#APP
 942              	# 53 "src/riscv.cpp" 1
 943              		sd a5, 0x50(fp)
 944              	# 0 "" 2
 945              	#NO_APP
 946 0364 6FF09FFB 		j	.L28
 947              	.L31:
 948              	.LBB192:
  55:src/riscv.cpp **** 
 949              		.loc 1 55 17 is_stmt 1
  55:src/riscv.cpp **** 
 950              		.loc 1 55 47 is_stmt 0
 951 0368 033584FC 		ld	a0,-56(s0)
 952 036c 833584FB 		ld	a1,-72(s0)
 953 0370 033604FC 		ld	a2,-64(s0)
 954 0374 97000000 		call	_ZN3TCB12createThreadEPFvPvEPcS0_@plt
 954      E7800000 
 955              	.LVL40:
  57:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 956              		.loc 1 57 17 is_stmt 1
 957 037c 630A0500 		beqz	a0,.L62
  61:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 958              		.loc 1 61 21
  61:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 959              		.loc 1 61 31 is_stmt 0
 960 0380 23B0A400 		sd	a0,0(s1)
  62:src/riscv.cpp ****                 }
 961              		.loc 1 62 21 is_stmt 1
  62:src/riscv.cpp ****                 }
 962              		.loc 1 62 66 is_stmt 0
 963 0384 93070000 		li	a5,0
 964              	#APP
 965              	# 62 "src/riscv.cpp" 1
 966              		sd a5, 0x50(fp)
 967              	# 0 "" 2
 968              	#NO_APP
 969 038c 6FF01FF9 		j	.L28
 970              	.L62:
  58:src/riscv.cpp ****                 }
 971              		.loc 1 58 21 is_stmt 1
  58:src/riscv.cpp ****                 }
 972              		.loc 1 58 67 is_stmt 0
 973 0390 9307F0FF 		li	a5,-1
 974              	#APP
 975              	# 58 "src/riscv.cpp" 1
 976              		sd a5, 0x50(fp)
 977              	# 0 "" 2
 978              	#NO_APP
 979 0398 6FF05FF8 		j	.L28
 980              	.LVL41:
 981              	.L53:
 982              	.LBE192:
 983              	.LBE191:
GAS LISTING /tmp/ccqvXlZq.s 			page 29


 984              	.LBE190:
 985              	.LBB193:
 986              	.LBB179:
  68:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 987              		.loc 1 68 13 is_stmt 1
  68:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 988              		.loc 1 68 31 is_stmt 0
 989 039c 97000000 		call	_ZN3TCB4exitEv@plt
 989      E7800000 
 990              	.LVL42:
  69:src/riscv.cpp ****         }
 991              		.loc 1 69 13 is_stmt 1
  69:src/riscv.cpp ****         }
 992              		.loc 1 69 61 is_stmt 0
 993              	#APP
 994              	# 69 "src/riscv.cpp" 1
 995              		sd a0, 0x50(fp)
 996              	# 0 "" 2
 997              	#NO_APP
 998              	.LBE179:
 999 03a8 6FF05FF7 		j	.L28
 1000              	.LVL43:
 1001              	.L54:
 1002              	.LBB180:
  73:src/riscv.cpp ****             TCB::dispatch();
 1003              		.loc 1 73 13 is_stmt 1
  73:src/riscv.cpp ****             TCB::dispatch();
 1004              		.loc 1 73 34 is_stmt 0
 1005 03ac 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1005      83B70700 
 1006 03b4 23B00700 		sd	zero,0(a5)
  74:src/riscv.cpp ****         }
 1007              		.loc 1 74 13 is_stmt 1
  74:src/riscv.cpp ****         }
 1008              		.loc 1 74 26 is_stmt 0
 1009 03b8 97000000 		call	_ZN3TCB8dispatchEv@plt
 1009      E7800000 
 1010              	.LVL44:
 1011 03c0 6FF0DFF5 		j	.L28
 1012              	.L55:
 1013              	.LBB170:
 1014              	.LBB161:
  79:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
 1015              		.loc 1 79 13 is_stmt 1
  79:src/riscv.cpp ****             __asm__ volatile("sd %0, 0x50(fp)": : "r"(c));
 1016              		.loc 1 79 45 is_stmt 0
 1017 03c4 97000000 		call	_ZN8_console14inputBuff_takeEv@plt
 1017      E7800000 
 1018              	.LVL45:
  80:src/riscv.cpp **** 
 1019              		.loc 1 80 13 is_stmt 1
  80:src/riscv.cpp **** 
 1020              		.loc 1 80 58 is_stmt 0
 1021              	#APP
 1022              	# 80 "src/riscv.cpp" 1
 1023              		sd a0, 0x50(fp)
 1024              	# 0 "" 2
GAS LISTING /tmp/ccqvXlZq.s 			page 30


 1025              	#NO_APP
 1026              	.LBE161:
 1027 03d0 6FF0DFF4 		j	.L28
 1028              	.LVL46:
 1029              	.L56:
 1030              	.LBB162:
 1031              	.LBB153:
  88:src/riscv.cpp ****             _console::outputBuff_put(c);
 1032              		.loc 1 88 13 is_stmt 1
  88:src/riscv.cpp ****             _console::outputBuff_put(c);
 1033              		.loc 1 88 26 is_stmt 0
 1034 03d4 033504FD 		ld	a0,-48(s0)
 1035              	.LVL47:
  89:src/riscv.cpp **** 
 1036              		.loc 1 89 13 is_stmt 1
  89:src/riscv.cpp **** 
 1037              		.loc 1 89 37 is_stmt 0
 1038 03d8 1375F50F 		andi	a0,a0,0xff
 1039 03dc 97000000 		call	_ZN8_console14outputBuff_putEc@plt
 1039      E7800000 
 1040              	.LVL48:
 1041              	.LBE153:
 1042 03e4 6FF09FF3 		j	.L28
 1043              	.L57:
 1044              	.LBB154:
 1045              	.LBB144:
  98:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1046              		.loc 1 98 13 is_stmt 1
  98:src/riscv.cpp ****             if(!retHandle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1047              		.loc 1 98 38 is_stmt 0
 1048 03e8 833404FD 		ld	s1,-48(s0)
 1049              	.LVL49:
  99:src/riscv.cpp ****             else{
 1050              		.loc 1 99 13 is_stmt 1
 1051              	.LBB145:
 1052 03ec 63980400 		bnez	s1,.L38
  99:src/riscv.cpp ****             else{
 1053              		.loc 1 99 27 discriminator 1
  99:src/riscv.cpp ****             else{
 1054              		.loc 1 99 73 is_stmt 0 discriminator 1
 1055 03f0 9307E0FF 		li	a5,-2
 1056              	#APP
 1057              	# 99 "src/riscv.cpp" 1
 1058              		sd a5, 0x50(fp)
 1059              	# 0 "" 2
 1060              	#NO_APP
 1061 03f8 6FF05FF2 		j	.L28
 1062              	.L38:
 1063              	.LBB146:
 101:src/riscv.cpp ****                 if(!handle){
 1064              		.loc 1 101 17 is_stmt 1
 101:src/riscv.cpp ****                 if(!handle){
 1065              		.loc 1 101 40 is_stmt 0
 1066 03fc 033584FC 		ld	a0,-56(s0)
 1067 0400 1B050500 		sext.w	a0,a0
 1068 0404 97000000 		call	_ZN4_sem4openEi@plt
 1068      E7800000 
GAS LISTING /tmp/ccqvXlZq.s 			page 31


 1069              	.LVL50:
 102:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(-1));
 1070              		.loc 1 102 17 is_stmt 1
 1071 040c 630A0500 		beqz	a0,.L63
 106:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 1072              		.loc 1 106 21
 106:src/riscv.cpp ****                     __asm__ volatile("sd %0, 0x50(fp)": : "r"(0));
 1073              		.loc 1 106 31 is_stmt 0
 1074 0410 23B0A400 		sd	a0,0(s1)
 107:src/riscv.cpp ****                 }
 1075              		.loc 1 107 21 is_stmt 1
 107:src/riscv.cpp ****                 }
 1076              		.loc 1 107 66 is_stmt 0
 1077 0414 93070000 		li	a5,0
 1078              	#APP
 1079              	# 107 "src/riscv.cpp" 1
 1080              		sd a5, 0x50(fp)
 1081              	# 0 "" 2
 1082              	#NO_APP
 1083 041c 6FF01FF0 		j	.L28
 1084              	.L63:
 103:src/riscv.cpp ****                 }
 1085              		.loc 1 103 21 is_stmt 1
 103:src/riscv.cpp ****                 }
 1086              		.loc 1 103 67 is_stmt 0
 1087 0420 9307F0FF 		li	a5,-1
 1088              	#APP
 1089              	# 103 "src/riscv.cpp" 1
 1090              		sd a5, 0x50(fp)
 1091              	# 0 "" 2
 1092              	#NO_APP
 1093 0428 6FF05FEF 		j	.L28
 1094              	.LVL51:
 1095              	.L58:
 1096              	.LBE146:
 1097              	.LBE145:
 1098              	.LBE144:
 1099              	.LBB147:
 1100              	.LBB136:
 113:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1101              		.loc 1 113 13 is_stmt 1
 113:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1102              		.loc 1 113 34 is_stmt 0
 1103 042c 033504FD 		ld	a0,-48(s0)
 1104              	.LVL52:
 114:src/riscv.cpp ****             else{
 1105              		.loc 1 114 13 is_stmt 1
 1106              	.LBB137:
 1107 0430 63180500 		bnez	a0,.L41
 114:src/riscv.cpp ****             else{
 1108              		.loc 1 114 24 discriminator 1
 114:src/riscv.cpp ****             else{
 1109              		.loc 1 114 70 is_stmt 0 discriminator 1
 1110 0434 9307E0FF 		li	a5,-2
 1111              	#APP
 1112              	# 114 "src/riscv.cpp" 1
 1113              		sd a5, 0x50(fp)
GAS LISTING /tmp/ccqvXlZq.s 			page 32


 1114              	# 0 "" 2
 1115              	#NO_APP
 1116 043c 6FF01FEE 		j	.L28
 1117              	.L41:
 1118              	.LBB138:
 116:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1119              		.loc 1 116 17 is_stmt 1
 116:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1120              		.loc 1 116 38 is_stmt 0
 1121 0440 97000000 		call	_ZN4_sem4waitEv@plt
 1121      E7800000 
 1122              	.LVL53:
 117:src/riscv.cpp ****             }
 1123              		.loc 1 117 17 is_stmt 1
 117:src/riscv.cpp ****             }
 1124              		.loc 1 117 65 is_stmt 0
 1125              	#APP
 1126              	# 117 "src/riscv.cpp" 1
 1127              		sd a0, 0x50(fp)
 1128              	# 0 "" 2
 1129              	#NO_APP
 1130 044c 6FF01FED 		j	.L28
 1131              	.LVL54:
 1132              	.L59:
 1133              	.LBE138:
 1134              	.LBE137:
 1135              	.LBE136:
 1136              	.LBB139:
 1137              	.LBB129:
 122:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1138              		.loc 1 122 13 is_stmt 1
 122:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1139              		.loc 1 122 34 is_stmt 0
 1140 0450 033504FD 		ld	a0,-48(s0)
 1141              	.LVL55:
 123:src/riscv.cpp ****             else{
 1142              		.loc 1 123 13 is_stmt 1
 1143              	.LBB130:
 1144 0454 63180500 		bnez	a0,.L43
 123:src/riscv.cpp ****             else{
 1145              		.loc 1 123 24 discriminator 1
 123:src/riscv.cpp ****             else{
 1146              		.loc 1 123 70 is_stmt 0 discriminator 1
 1147 0458 9307E0FF 		li	a5,-2
 1148              	#APP
 1149              	# 123 "src/riscv.cpp" 1
 1150              		sd a5, 0x50(fp)
 1151              	# 0 "" 2
 1152              	#NO_APP
 1153 0460 6FF0DFEB 		j	.L28
 1154              	.L43:
 1155              	.LBB131:
 125:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1156              		.loc 1 125 17 is_stmt 1
 125:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1157              		.loc 1 125 39 is_stmt 0
 1158 0464 97000000 		call	_ZN4_sem5closeEv@plt
GAS LISTING /tmp/ccqvXlZq.s 			page 33


 1158      E7800000 
 1159              	.LVL56:
 126:src/riscv.cpp ****             }
 1160              		.loc 1 126 17 is_stmt 1
 126:src/riscv.cpp ****             }
 1161              		.loc 1 126 65 is_stmt 0
 1162              	#APP
 1163              	# 126 "src/riscv.cpp" 1
 1164              		sd a0, 0x50(fp)
 1165              	# 0 "" 2
 1166              	#NO_APP
 1167 0470 6FF0DFEA 		j	.L28
 1168              	.LVL57:
 1169              	.L60:
 1170              	.LBE131:
 1171              	.LBE130:
 1172              	.LBE129:
 1173              	.LBB132:
 1174              	.LBB123:
 131:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1175              		.loc 1 131 13 is_stmt 1
 131:src/riscv.cpp ****             if(!handle)__asm__ volatile("sd %0, 0x50(fp)": : "r"(-2));
 1176              		.loc 1 131 34 is_stmt 0
 1177 0474 033504FD 		ld	a0,-48(s0)
 1178              	.LVL58:
 132:src/riscv.cpp ****             else{
 1179              		.loc 1 132 13 is_stmt 1
 1180              	.LBB124:
 1181 0478 63180500 		bnez	a0,.L45
 132:src/riscv.cpp ****             else{
 1182              		.loc 1 132 24 discriminator 1
 132:src/riscv.cpp ****             else{
 1183              		.loc 1 132 70 is_stmt 0 discriminator 1
 1184 047c 9307E0FF 		li	a5,-2
 1185              	#APP
 1186              	# 132 "src/riscv.cpp" 1
 1187              		sd a5, 0x50(fp)
 1188              	# 0 "" 2
 1189              	#NO_APP
 1190 0484 6FF09FE9 		j	.L28
 1191              	.L45:
 1192              	.LBB125:
 134:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1193              		.loc 1 134 17 is_stmt 1
 134:src/riscv.cpp ****                 __asm__ volatile("sd %0, 0x50(fp)": : "r"(stat));
 1194              		.loc 1 134 40 is_stmt 0
 1195 0488 97000000 		call	_ZN4_sem6signalEv@plt
 1195      E7800000 
 1196              	.LVL59:
 135:src/riscv.cpp ****             }
 1197              		.loc 1 135 17 is_stmt 1
 135:src/riscv.cpp ****             }
 1198              		.loc 1 135 65 is_stmt 0
 1199              	#APP
 1200              	# 135 "src/riscv.cpp" 1
 1201              		sd a0, 0x50(fp)
 1202              	# 0 "" 2
GAS LISTING /tmp/ccqvXlZq.s 			page 34


 1203              	#NO_APP
 1204 0494 6FF09FE8 		j	.L28
 1205              	.LVL60:
 1206              	.L61:
 1207              	.LBE125:
 1208              	.LBE124:
 1209              	.LBE123:
 1210              	.LBB126:
 140:src/riscv.cpp ****         }
 1211              		.loc 1 140 13 is_stmt 1
 140:src/riscv.cpp ****         }
 1212              		.loc 1 140 22 is_stmt 0
 1213 0498 033504FD 		ld	a0,-48(s0)
 1214 049c 97000000 		call	_ZN3TCB4joinEPS_@plt
 1214      E7800000 
 1215              	.LVL61:
 1216 04a4 6FF09FE7 		j	.L28
 1217              	.L26:
 1218              	.LBE126:
 1219              	.LBE132:
 1220              	.LBE139:
 1221              	.LBE147:
 1222              	.LBE154:
 1223              	.LBE162:
 1224              	.LBE170:
 1225              	.LBE180:
 1226              	.LBE193:
 1227              	.LBE205:
 1228              	.LBE218:
 1229              	.LBE235:
 1230              	.LBE248:
 154:src/riscv.cpp ****         printInt(scause);
 1231              		.loc 1 154 9 is_stmt 1
 154:src/riscv.cpp ****         printInt(scause);
 1232              		.loc 1 154 20 is_stmt 0
 1233 04a8 17050000 		lla	a0,.LC0
 1233      13050500 
 1234 04b0 97000000 		call	_Z11printStringPKc@plt
 1234      E7800000 
 1235              	.LVL62:
 155:src/riscv.cpp ****         printString("\nsepc:");
 1236              		.loc 1 155 9 is_stmt 1
 155:src/riscv.cpp ****         printString("\nsepc:");
 1237              		.loc 1 155 17 is_stmt 0
 1238 04b8 13060000 		li	a2,0
 1239 04bc 9305A000 		li	a1,10
 1240 04c0 1B850400 		sext.w	a0,s1
 1241 04c4 97000000 		call	_Z8printIntiii@plt
 1241      E7800000 
 1242              	.LVL63:
 156:src/riscv.cpp ****         printInt(r_sepc());
 1243              		.loc 1 156 9 is_stmt 1
 156:src/riscv.cpp ****         printInt(r_sepc());
 1244              		.loc 1 156 20 is_stmt 0
 1245 04cc 17050000 		lla	a0,.LC1
 1245      13050500 
 1246 04d4 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccqvXlZq.s 			page 35


 1246      E7800000 
 1247              	.LVL64:
 157:src/riscv.cpp ****         printString("\n");
 1248              		.loc 1 157 9 is_stmt 1
 1249              	.LBB249:
 1250              	.LBB250:
  84:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 1251              		.loc 2 84 5
  85:src/../h/riscv.hpp ****     return sepc;
 1252              		.loc 2 85 5
  85:src/../h/riscv.hpp ****     return sepc;
 1253              		.loc 2 85 60 is_stmt 0
 1254              	#APP
 1255              	# 85 "src/../h/riscv.hpp" 1
 1256              		csrr a5, sepc
 1257              	# 0 "" 2
 1258              	#NO_APP
 1259 04e0 2338F4FA 		sd	a5,-80(s0)
  86:src/../h/riscv.hpp **** }
 1260              		.loc 2 86 5 is_stmt 1
  86:src/../h/riscv.hpp **** }
 1261              		.loc 2 86 12 is_stmt 0
 1262 04e4 033504FB 		ld	a0,-80(s0)
 1263              	.LBE250:
 1264              	.LBE249:
 157:src/riscv.cpp ****         printString("\n");
 1265              		.loc 1 157 17
 1266 04e8 13060000 		li	a2,0
 1267 04ec 9305A000 		li	a1,10
 1268 04f0 1B050500 		sext.w	a0,a0
 1269 04f4 97000000 		call	_Z8printIntiii@plt
 1269      E7800000 
 1270              	.LVL65:
 158:src/riscv.cpp **** 
 1271              		.loc 1 158 9 is_stmt 1
 158:src/riscv.cpp **** 
 1272              		.loc 1 158 20 is_stmt 0
 1273 04fc 17050000 		lla	a0,.LC2
 1273      13050500 
 1274 0504 97000000 		call	_Z11printStringPKc@plt
 1274      E7800000 
 1275              	.LVL66:
 1276              	.L47:
 160:src/riscv.cpp ****     }
 1277              		.loc 1 160 9 is_stmt 1 discriminator 1
 160:src/riscv.cpp ****     }
 1278              		.loc 1 160 9 discriminator 1
 1279 050c 6F000000 		j	.L47
 1280              	.LBE263:
 1281              		.cfi_endproc
 1282              	.LFE34:
 1284              		.align	2
 1285              		.globl	_ZN5Riscv18updateSleepingListEv
 1287              	_ZN5Riscv18updateSleepingListEv:
 1288              	.LFB39:
 254:src/riscv.cpp **** 
 255:src/riscv.cpp **** void Riscv::updateSleepingList() {
GAS LISTING /tmp/ccqvXlZq.s 			page 36


 1289              		.loc 1 255 34
 1290              		.cfi_startproc
 256:src/riscv.cpp ****     if(headSleeping!=nullptr){
 1291              		.loc 1 256 5
 1292              	.LBB264:
 1293              		.loc 1 256 20 is_stmt 0
 1294 0510 97070000 		ld	a5,.LANCHOR0
 1294      83B70700 
 1295              		.loc 1 256 5
 1296 0518 638A0700 		beqz	a5,.L68
 1297              	.LBE264:
 257:src/riscv.cpp ****         if(--headSleeping->toSleepRel==0){
 1298              		.loc 1 257 9 is_stmt 1
 1299              	.LBB272:
 1300              	.LBB265:
 1301              		.loc 1 257 28 is_stmt 0
 1302 051c 03B78700 		ld	a4,8(a5)
 1303              		.loc 1 257 12
 1304 0520 1307F7FF 		addi	a4,a4,-1
 1305              		.loc 1 257 38
 1306 0524 23B4E700 		sd	a4,8(a5)
 1307              		.loc 1 257 9
 1308 0528 63040700 		beqz	a4,.L71
 1309              	.L68:
 1310 052c 67800000 		ret
 1311              	.L71:
 1312              	.LBE265:
 1313              	.LBE272:
 255:src/riscv.cpp ****     if(headSleeping!=nullptr){
 1314              		.loc 1 255 34
 1315 0530 130101FF 		addi	sp,sp,-16
 1316              		.cfi_def_cfa_offset 16
 1317 0534 23341100 		sd	ra,8(sp)
 1318 0538 23308100 		sd	s0,0(sp)
 1319              		.cfi_offset 1, -8
 1320              		.cfi_offset 8, -16
 1321 053c 13040101 		addi	s0,sp,16
 1322              		.cfi_def_cfa 8, 0
 1323              	.LBB273:
 1324              	.LBB271:
 1325              	.LBB266:
 258:src/riscv.cpp ****             headSleeping->thr->setSleeping(false);
 1326              		.loc 1 258 13 is_stmt 1
 1327              		.loc 1 258 27 is_stmt 0
 1328 0540 03B70700 		ld	a4,0(a5)
 1329              	.LVL67:
 1330              	.LBB267:
 1331              	.LBB268:
 1332              		.loc 3 41 9 is_stmt 1
 1333              		.loc 3 41 23 is_stmt 0
 1334 0544 A3000704 		sb	zero,65(a4)
 1335              	.LVL68:
 1336              	.LBE268:
 1337              	.LBE267:
 259:src/riscv.cpp ****             Scheduler::put(headSleeping->thr);
 1338              		.loc 1 259 13 is_stmt 1
 1339              		.loc 1 259 27 is_stmt 0
GAS LISTING /tmp/ccqvXlZq.s 			page 37


 1340 0548 03B50700 		ld	a0,0(a5)
 1341 054c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1341      E7800000 
 1342              	.LVL69:
 260:src/riscv.cpp ****             SleepingElem* old=headSleeping;
 1343              		.loc 1 260 13 is_stmt 1
 1344              		.loc 1 260 27 is_stmt 0
 1345 0554 97070000 		lla	a5,.LANCHOR0
 1345      93870700 
 1346 055c 03B50700 		ld	a0,0(a5)
 1347              	.LVL70:
 261:src/riscv.cpp ****             headSleeping=headSleeping->next;
 1348              		.loc 1 261 13 is_stmt 1
 1349              		.loc 1 261 40 is_stmt 0
 1350 0560 03370501 		ld	a4,16(a0)
 1351              		.loc 1 261 25
 1352 0564 23B0E700 		sd	a4,0(a5)
 262:src/riscv.cpp ****             MemoryAllocator::free(old);
 1353              		.loc 1 262 13 is_stmt 1
 1354              		.loc 1 262 34 is_stmt 0
 1355 0568 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 1355      E7800000 
 1356              	.LVL71:
 1357              	.L66:
 263:src/riscv.cpp ****             while(headSleeping!=nullptr && headSleeping->toSleepRel==0){
 1358              		.loc 1 263 13 is_stmt 1
 1359              		.loc 1 263 41
 1360              		.loc 1 263 31 is_stmt 0
 1361 0570 97070000 		ld	a5,.LANCHOR0
 1361      83B70700 
 1362              		.loc 1 263 41
 1363 0578 63800704 		beqz	a5,.L64
 1364              		.loc 1 263 58 discriminator 1
 1365 057c 03B78700 		ld	a4,8(a5)
 1366              		.loc 1 263 41 discriminator 1
 1367 0580 631C0702 		bnez	a4,.L64
 264:src/riscv.cpp ****                 headSleeping->thr->setSleeping(false);
 1368              		.loc 1 264 17 is_stmt 1
 1369              		.loc 1 264 31 is_stmt 0
 1370 0584 03B70700 		ld	a4,0(a5)
 1371              	.LVL72:
 1372              	.LBB269:
 1373              	.LBB270:
 1374              		.loc 3 41 9 is_stmt 1
 1375              		.loc 3 41 23 is_stmt 0
 1376 0588 A3000704 		sb	zero,65(a4)
 1377              	.LVL73:
 1378              	.LBE270:
 1379              	.LBE269:
 265:src/riscv.cpp ****                 Scheduler::put(headSleeping->thr);
 1380              		.loc 1 265 17 is_stmt 1
 1381              		.loc 1 265 31 is_stmt 0
 1382 058c 03B50700 		ld	a0,0(a5)
 1383 0590 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1383      E7800000 
 1384              	.LVL74:
 266:src/riscv.cpp ****                 old=headSleeping;
GAS LISTING /tmp/ccqvXlZq.s 			page 38


 1385              		.loc 1 266 17 is_stmt 1
 1386              		.loc 1 266 20 is_stmt 0
 1387 0598 97070000 		lla	a5,.LANCHOR0
 1387      93870700 
 1388 05a0 03B50700 		ld	a0,0(a5)
 1389              	.LVL75:
 267:src/riscv.cpp ****                 headSleeping=headSleeping->next;
 1390              		.loc 1 267 17 is_stmt 1
 1391              		.loc 1 267 44 is_stmt 0
 1392 05a4 03370501 		ld	a4,16(a0)
 1393              		.loc 1 267 29
 1394 05a8 23B0E700 		sd	a4,0(a5)
 268:src/riscv.cpp ****                 MemoryAllocator::free(old);
 1395              		.loc 1 268 17 is_stmt 1
 1396              		.loc 1 268 38 is_stmt 0
 1397 05ac 97000000 		call	_ZN15MemoryAllocator4freeEPv@plt
 1397      E7800000 
 1398              	.LVL76:
 263:src/riscv.cpp ****                 headSleeping->thr->setSleeping(false);
 1399              		.loc 1 263 13
 1400 05b4 6FF0DFFB 		j	.L66
 1401              	.L64:
 1402              	.LBE266:
 1403              	.LBE271:
 1404              	.LBE273:
 269:src/riscv.cpp ****             }
 270:src/riscv.cpp ****         }
 271:src/riscv.cpp ****     }
 272:src/riscv.cpp **** }
 1405              		.loc 1 272 1
 1406 05b8 83308100 		ld	ra,8(sp)
 1407              		.cfi_restore 1
 1408 05bc 03340100 		ld	s0,0(sp)
 1409              		.cfi_restore 8
 1410              		.cfi_def_cfa 2, 16
 1411 05c0 13010101 		addi	sp,sp,16
 1412              		.cfi_def_cfa_offset 0
 1413 05c4 67800000 		jr	ra
 1414              		.cfi_endproc
 1415              	.LFE39:
 1417              		.align	2
 1418              		.globl	_ZN5Riscv14timerInterruptEv
 1420              	_ZN5Riscv14timerInterruptEv:
 1421              	.LFB35:
 165:src/riscv.cpp ****     //prekid od tajmera, softverski prekid
 1422              		.loc 1 165 30 is_stmt 1
 1423              		.cfi_startproc
 1424 05c8 130101FD 		addi	sp,sp,-48
 1425              		.cfi_def_cfa_offset 48
 1426 05cc 23341102 		sd	ra,40(sp)
 1427 05d0 23308102 		sd	s0,32(sp)
 1428              		.cfi_offset 1, -8
 1429              		.cfi_offset 8, -16
 1430 05d4 13040103 		addi	s0,sp,48
 1431              		.cfi_def_cfa 8, 0
 168:src/riscv.cpp **** 
 1432              		.loc 1 168 5
GAS LISTING /tmp/ccqvXlZq.s 			page 39


 168:src/riscv.cpp **** 
 1433              		.loc 1 168 23 is_stmt 0
 1434 05d8 97000000 		call	_ZN5Riscv18updateSleepingListEv
 1434      E7800000 
 1435              	.LVL77:
 170:src/riscv.cpp ****     if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 1436              		.loc 1 170 5 is_stmt 1
 170:src/riscv.cpp ****     if(TCB::timeSliceCounter>=TCB::running->getTimeSlice()){
 1437              		.loc 1 170 26 is_stmt 0
 1438 05e0 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 1438      03370700 
 1439 05e8 83370700 		ld	a5,0(a4)
 1440 05ec 93871700 		addi	a5,a5,1
 1441 05f0 2330F700 		sd	a5,0(a4)
 171:src/riscv.cpp ****         uint64 volatile sepc=r_sepc();
 1442              		.loc 1 171 5 is_stmt 1
 1443              	.LBB274:
 171:src/riscv.cpp ****         uint64 volatile sepc=r_sepc();
 1444              		.loc 1 171 57 is_stmt 0
 1445 05f4 17070000 		la	a4,_ZN3TCB7runningE
 1445      03370700 
 1446 05fc 03370700 		ld	a4,0(a4)
 1447              	.LVL78:
 1448              	.LBB275:
 1449              	.LBB276:
  33:src/../h/../h/TCB.hpp ****     }
 1450              		.loc 3 33 9 is_stmt 1
  33:src/../h/../h/TCB.hpp ****     }
 1451              		.loc 3 33 16 is_stmt 0
 1452 0600 03378702 		ld	a4,40(a4)
 1453              	.LVL79:
 1454              	.LBE276:
 1455              	.LBE275:
 171:src/riscv.cpp ****         uint64 volatile sepc=r_sepc();
 1456              		.loc 1 171 5
 1457 0604 63FEE700 		bgeu	a5,a4,.L75
 1458              	.L73:
 1459              	.LBE274:
 179:src/riscv.cpp **** }
 1460              		.loc 1 179 5 is_stmt 1
 1461              	.LVL80:
 1462              	.LBB286:
 1463              	.LBB287:
 112:src/../h/riscv.hpp **** }
 1464              		.loc 2 112 5
 112:src/../h/riscv.hpp **** }
 1465              		.loc 2 112 59 is_stmt 0
 1466 0608 93072000 		li	a5,2
 1467              	#APP
 1468              	# 112 "src/../h/riscv.hpp" 1
 1469              		csrc sip, a5
 1470              	# 0 "" 2
 1471              	.LVL81:
 1472              	#NO_APP
 1473              	.LBE287:
 1474              	.LBE286:
 180:src/riscv.cpp **** 
GAS LISTING /tmp/ccqvXlZq.s 			page 40


 1475              		.loc 1 180 1
 1476 0610 83308102 		ld	ra,40(sp)
 1477              		.cfi_remember_state
 1478              		.cfi_restore 1
 1479 0614 03340102 		ld	s0,32(sp)
 1480              		.cfi_restore 8
 1481              		.cfi_def_cfa 2, 48
 1482 0618 13010103 		addi	sp,sp,48
 1483              		.cfi_def_cfa_offset 0
 1484 061c 67800000 		jr	ra
 1485              	.L75:
 1486              		.cfi_restore_state
 1487              	.LBB288:
 1488              	.LBB277:
 172:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 1489              		.loc 1 172 9 is_stmt 1
 1490              	.LBB278:
 1491              	.LBB279:
  84:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc]"=r"(sepc));
 1492              		.loc 2 84 5
  85:src/../h/riscv.hpp ****     return sepc;
 1493              		.loc 2 85 5
  85:src/../h/riscv.hpp ****     return sepc;
 1494              		.loc 2 85 60 is_stmt 0
 1495              	#APP
 1496              	# 85 "src/../h/riscv.hpp" 1
 1497              		csrr a5, sepc
 1498              	# 0 "" 2
 1499              	#NO_APP
 1500 0624 2334F4FE 		sd	a5,-24(s0)
  86:src/../h/riscv.hpp **** }
 1501              		.loc 2 86 5 is_stmt 1
  86:src/../h/riscv.hpp **** }
 1502              		.loc 2 86 12 is_stmt 0
 1503 0628 833784FE 		ld	a5,-24(s0)
 1504              	.LBE279:
 1505              	.LBE278:
 172:src/riscv.cpp ****         uint64 volatile sstatus=r_sstatus();
 1506              		.loc 1 172 37
 1507 062c 2338F4FC 		sd	a5,-48(s0)
 173:src/riscv.cpp ****         TCB::timeSliceCounter=0;
 1508              		.loc 1 173 9 is_stmt 1
 1509              	.LBB280:
 1510              	.LBB281:
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sstatus], sstatus":[sstatus]"=r"(sstatus));
 1511              		.loc 2 130 5
 131:src/../h/riscv.hpp ****     return sstatus;
 1512              		.loc 2 131 5
 131:src/../h/riscv.hpp ****     return sstatus;
 1513              		.loc 2 131 72 is_stmt 0
 1514              	#APP
 1515              	# 131 "src/../h/riscv.hpp" 1
 1516              		csrr a5, sstatus
 1517              	# 0 "" 2
 1518              	#NO_APP
 1519 0634 2330F4FE 		sd	a5,-32(s0)
 132:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccqvXlZq.s 			page 41


 1520              		.loc 2 132 5 is_stmt 1
 132:src/../h/riscv.hpp **** }
 1521              		.loc 2 132 12 is_stmt 0
 1522 0638 833704FE 		ld	a5,-32(s0)
 1523              	.LBE281:
 1524              	.LBE280:
 173:src/riscv.cpp ****         TCB::timeSliceCounter=0;
 1525              		.loc 1 173 43
 1526 063c 233CF4FC 		sd	a5,-40(s0)
 174:src/riscv.cpp ****         TCB::dispatch();
 1527              		.loc 1 174 9 is_stmt 1
 174:src/riscv.cpp ****         TCB::dispatch();
 1528              		.loc 1 174 30 is_stmt 0
 1529 0640 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1529      83B70700 
 1530 0648 23B00700 		sd	zero,0(a5)
 175:src/riscv.cpp ****         w_sstatus(sstatus);
 1531              		.loc 1 175 9 is_stmt 1
 175:src/riscv.cpp ****         w_sstatus(sstatus);
 1532              		.loc 1 175 22 is_stmt 0
 1533 064c 97000000 		call	_ZN3TCB8dispatchEv@plt
 1533      E7800000 
 1534              	.LVL82:
 176:src/riscv.cpp ****         w_sepc(sepc);
 1535              		.loc 1 176 9 is_stmt 1
 176:src/riscv.cpp ****         w_sepc(sepc);
 1536              		.loc 1 176 18 is_stmt 0
 1537 0654 833784FD 		ld	a5,-40(s0)
 1538              	.LVL83:
 1539              	.LBB282:
 1540              	.LBB283:
 135:src/../h/riscv.hpp **** }
 1541              		.loc 2 135 5 is_stmt 1
 135:src/../h/riscv.hpp **** }
 1542              		.loc 2 135 72 is_stmt 0
 1543              	#APP
 1544              	# 135 "src/../h/riscv.hpp" 1
 1545              		csrw sstatus, a5
 1546              	# 0 "" 2
 1547              	.LVL84:
 1548              	#NO_APP
 1549              	.LBE283:
 1550              	.LBE282:
 177:src/riscv.cpp ****     }
 1551              		.loc 1 177 9 is_stmt 1
 177:src/riscv.cpp ****     }
 1552              		.loc 1 177 15 is_stmt 0
 1553 065c 833704FD 		ld	a5,-48(s0)
 1554              	.LVL85:
 1555              	.LBB284:
 1556              	.LBB285:
  89:src/../h/riscv.hpp **** }
 1557              		.loc 2 89 5 is_stmt 1
  89:src/../h/riscv.hpp **** }
 1558              		.loc 2 89 60 is_stmt 0
 1559              	#APP
 1560              	# 89 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccqvXlZq.s 			page 42


  90:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
 1561              		csrw sepc, a5
 1562              	# 0 "" 2
 1563              		.loc 2 90 1
 1564              	#NO_APP
 1565 0664 6FF05FFA 		j	.L73
 1566              	.LBE285:
 1567              	.LBE284:
 1568              	.LBE277:
 1569              	.LBE288:
 1570              		.cfi_endproc
 1571              	.LFE35:
 1573              		.globl	_ZN5Riscv12headSleepingE
 1574              		.bss
 1575              		.align	3
 1576              		.set	.LANCHOR0,. + 0
 1579              	_ZN5Riscv12headSleepingE:
 1580 0000 00000000 		.zero	8
 1580      00000000 
 1581              		.text
 1582              	.Letext0:
 1583              		.file 4 "src/../h/../lib/hw.h"
 1584              		.file 5 "src/../h/MemoryAllocator.hpp"
 1585              		.file 6 "src/../h/_sem.hpp"
 1586              		.file 7 "src/../h/../h/list.hpp"
 1587              		.file 8 "src/../h/Scheduler.hpp"
 1588              		.file 9 "src/../h/_console.hpp"
 1589              		.file 10 "src/../test/../h/syscall_c.hpp"
 1590              		.file 11 "src/../test/printing.hpp"
GAS LISTING /tmp/ccqvXlZq.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccqvXlZq.s:9      .text:0000000000000000 _ZN5Riscv17hardwareInterruptEv
     /tmp/ccqvXlZq.s:13     .text:0000000000000000 .L0 
     /tmp/ccqvXlZq.s:14     .text:0000000000000000 .L0 
     /tmp/ccqvXlZq.s:15     .text:0000000000000004 .L0 
     /tmp/ccqvXlZq.s:19     .text:0000000000000010 .L0 
     /tmp/ccqvXlZq.s:20     .text:0000000000000010 .L0 
     /tmp/ccqvXlZq.s:21     .text:0000000000000010 .L0 
     /tmp/ccqvXlZq.s:23     .text:0000000000000014 .L0 
     /tmp/ccqvXlZq.s:25     .text:0000000000000014 .L0 
     /tmp/ccqvXlZq.s:26     .text:0000000000000014 .L0 
     /tmp/ccqvXlZq.s:32     .text:0000000000000020 .L0 
     /tmp/ccqvXlZq.s:38     .text:0000000000000028 .L0 
     /tmp/ccqvXlZq.s:39     .text:0000000000000028 .L0 
     /tmp/ccqvXlZq.s:43     .text:0000000000000034 .L0 
     /tmp/ccqvXlZq.s:44     .text:0000000000000038 .L0 
     /tmp/ccqvXlZq.s:45     .text:0000000000000038 .L0 
     /tmp/ccqvXlZq.s:47     .text:000000000000003c .L0 
     /tmp/ccqvXlZq.s:48     .text:000000000000003c .L0 
     /tmp/ccqvXlZq.s:50     .text:0000000000000040 .L0 
     /tmp/ccqvXlZq.s:52     .text:0000000000000044 .L0 
     /tmp/ccqvXlZq.s:55     .text:0000000000000048 .L0 
     /tmp/ccqvXlZq.s:59     .text:0000000000000048 .L0 
     /tmp/ccqvXlZq.s:60     .text:0000000000000048 .L0 
     /tmp/ccqvXlZq.s:61     .text:0000000000000048 .L0 
     /tmp/ccqvXlZq.s:64     .text:0000000000000050 .L0 
     /tmp/ccqvXlZq.s:66     .text:0000000000000054 .L0 
     /tmp/ccqvXlZq.s:70     .text:0000000000000064 .L0 
     /tmp/ccqvXlZq.s:74     .text:000000000000006c .L0 
     /tmp/ccqvXlZq.s:75     .text:000000000000006c .L0 
     /tmp/ccqvXlZq.s:79     .text:0000000000000078 .L0 
     /tmp/ccqvXlZq.s:80     .text:0000000000000078 .L0 
     /tmp/ccqvXlZq.s:85     .text:0000000000000084 .L0 
     /tmp/ccqvXlZq.s:88     .text:0000000000000088 .L0 
     /tmp/ccqvXlZq.s:94     .text:0000000000000088 _ZN5Riscv10popSppSpieEv
     /tmp/ccqvXlZq.s:97     .text:0000000000000088 .L0 
     /tmp/ccqvXlZq.s:98     .text:0000000000000088 .L0 
     /tmp/ccqvXlZq.s:99     .text:000000000000008c .L0 
     /tmp/ccqvXlZq.s:101    .text:0000000000000090 .L0 
     /tmp/ccqvXlZq.s:103    .text:0000000000000094 .L0 
     /tmp/ccqvXlZq.s:109    .text:0000000000000094 .L0 
     /tmp/ccqvXlZq.s:110    .text:0000000000000094 .L0 
     /tmp/ccqvXlZq.s:111    .text:0000000000000094 .L0 
     /tmp/ccqvXlZq.s:121    .text:000000000000009c .L0 
     /tmp/ccqvXlZq.s:128    .text:00000000000000ac .L0 
     /tmp/ccqvXlZq.s:129    .text:00000000000000ac .L0 
     /tmp/ccqvXlZq.s:130    .text:00000000000000ac .L0 
     /tmp/ccqvXlZq.s:141    .text:00000000000000b4 .L0 
       src/riscv.cpp:205    .text:00000000000000b4 .L0 
     /tmp/ccqvXlZq.s:147    .text:00000000000000b8 .L0 
       src/riscv.cpp:206    .text:00000000000000b8 .L0 
     /tmp/ccqvXlZq.s:153    .text:00000000000000bc .L0 
     /tmp/ccqvXlZq.s:154    .text:00000000000000c0 .L0 
     /tmp/ccqvXlZq.s:155    .text:00000000000000c0 .L0 
     /tmp/ccqvXlZq.s:156    .text:00000000000000c0 .L0 
     /tmp/ccqvXlZq.s:158    .text:00000000000000c4 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 44


     /tmp/ccqvXlZq.s:161    .text:00000000000000c8 .L0 
     /tmp/ccqvXlZq.s:166    .text:00000000000000c8 .L0 
     /tmp/ccqvXlZq.s:167    .text:00000000000000c8 .L0 
     /tmp/ccqvXlZq.s:168    .text:00000000000000c8 .L0 
     /tmp/ccqvXlZq.s:175    .text:00000000000000d0 .L0 
     /tmp/ccqvXlZq.s:178    .text:00000000000000d4 .L0 
     /tmp/ccqvXlZq.s:184    .text:00000000000000d4 _ZN5Riscv10putToSleepEm
     /tmp/ccqvXlZq.s:187    .text:00000000000000d4 .L0 
     /tmp/ccqvXlZq.s:189    .text:00000000000000d4 .L0 
     /tmp/ccqvXlZq.s:190    .text:00000000000000d4 .L0 
     /tmp/ccqvXlZq.s:192    .text:00000000000000d8 .L0 
     /tmp/ccqvXlZq.s:193    .text:00000000000000dc .L0 
     /tmp/ccqvXlZq.s:198    .text:00000000000000ec .L0 
     /tmp/ccqvXlZq.s:199    .text:00000000000000ec .L0 
     /tmp/ccqvXlZq.s:200    .text:00000000000000ec .L0 
     /tmp/ccqvXlZq.s:201    .text:00000000000000ec .L0 
     /tmp/ccqvXlZq.s:203    .text:00000000000000f0 .L0 
     /tmp/ccqvXlZq.s:206    .text:00000000000000f4 .L0 
     /tmp/ccqvXlZq.s:207    .text:00000000000000f4 .L0 
     /tmp/ccqvXlZq.s:214    .text:0000000000000100 .L0 
     /tmp/ccqvXlZq.s:215    .text:0000000000000100 .L0 
     /tmp/ccqvXlZq.s:221    .text:0000000000000108 .L0 
     /tmp/ccqvXlZq.s:222    .text:0000000000000108 .L0 
     /tmp/ccqvXlZq.s:227    .text:0000000000000114 .L0 
     /tmp/ccqvXlZq.s:228    .text:0000000000000114 .L0 
     /tmp/ccqvXlZq.s:232    .text:000000000000011c .L0 
     /tmp/ccqvXlZq.s:233    .text:000000000000011c .L0 
     /tmp/ccqvXlZq.s:235    .text:0000000000000124 .L0 
     /tmp/ccqvXlZq.s:240    .text:0000000000000128 .L0 
     /tmp/ccqvXlZq.s:241    .text:0000000000000128 .L0 
     /tmp/ccqvXlZq.s:243    .text:000000000000012c .L0 
     /tmp/ccqvXlZq.s:245    .text:0000000000000130 .L0 
     /tmp/ccqvXlZq.s:246    .text:0000000000000130 .L0 
     /tmp/ccqvXlZq.s:248    .text:0000000000000134 .L0 
     /tmp/ccqvXlZq.s:249    .text:0000000000000134 .L0 
     /tmp/ccqvXlZq.s:251    .text:0000000000000138 .L0 
     /tmp/ccqvXlZq.s:252    .text:0000000000000138 .L0 
     /tmp/ccqvXlZq.s:256    .text:0000000000000144 .L0 
     /tmp/ccqvXlZq.s:257    .text:0000000000000144 .L0 
     /tmp/ccqvXlZq.s:262    .text:000000000000014c .L0 
     /tmp/ccqvXlZq.s:263    .text:000000000000014c .L0 
     /tmp/ccqvXlZq.s:266    .text:0000000000000158 .L0 
     /tmp/ccqvXlZq.s:267    .text:0000000000000158 .L0 
     /tmp/ccqvXlZq.s:270    .text:0000000000000160 .L0 
     /tmp/ccqvXlZq.s:271    .text:0000000000000160 .L0 
     /tmp/ccqvXlZq.s:273    .text:0000000000000164 .L0 
     /tmp/ccqvXlZq.s:274    .text:0000000000000168 .L0 
     /tmp/ccqvXlZq.s:275    .text:0000000000000168 .L0 
     /tmp/ccqvXlZq.s:277    .text:000000000000016c .L0 
     /tmp/ccqvXlZq.s:278    .text:000000000000016c .L0 
     /tmp/ccqvXlZq.s:280    .text:0000000000000170 .L0 
     /tmp/ccqvXlZq.s:283    .text:0000000000000174 .L0 
     /tmp/ccqvXlZq.s:285    .text:0000000000000178 .L0 
     /tmp/ccqvXlZq.s:289    .text:000000000000017c .L0 
     /tmp/ccqvXlZq.s:292    .text:000000000000017c .L0 
     /tmp/ccqvXlZq.s:293    .text:000000000000017c .L0 
     /tmp/ccqvXlZq.s:295    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 45


     /tmp/ccqvXlZq.s:296    .text:0000000000000180 .L0 
     /tmp/ccqvXlZq.s:298    .text:0000000000000184 .L0 
     /tmp/ccqvXlZq.s:299    .text:0000000000000184 .L0 
     /tmp/ccqvXlZq.s:305    .text:0000000000000190 .L0 
     /tmp/ccqvXlZq.s:306    .text:0000000000000190 .L0 
     /tmp/ccqvXlZq.s:309    .text:0000000000000194 .L0 
     /tmp/ccqvXlZq.s:310    .text:0000000000000194 .L0 
     /tmp/ccqvXlZq.s:314    .text:0000000000000198 .L0 
     /tmp/ccqvXlZq.s:315    .text:0000000000000198 .L0 
     /tmp/ccqvXlZq.s:316    .text:0000000000000198 .L0 
     /tmp/ccqvXlZq.s:318    .text:000000000000019c .L0 
     /tmp/ccqvXlZq.s:320    .text:00000000000001a0 .L0 
     /tmp/ccqvXlZq.s:322    .text:00000000000001a4 .L0 
     /tmp/ccqvXlZq.s:323    .text:00000000000001a4 .L0 
     /tmp/ccqvXlZq.s:326    .text:00000000000001a8 .L0 
     /tmp/ccqvXlZq.s:327    .text:00000000000001a8 .L0 
     /tmp/ccqvXlZq.s:328    .text:00000000000001a8 .L0 
     /tmp/ccqvXlZq.s:330    .text:00000000000001ac .L0 
     /tmp/ccqvXlZq.s:333    .text:00000000000001b0 .L0 
     /tmp/ccqvXlZq.s:336    .text:00000000000001b4 .L0 
     /tmp/ccqvXlZq.s:338    .text:00000000000001b8 .L0 
     /tmp/ccqvXlZq.s:339    .text:00000000000001b8 .L0 
     /tmp/ccqvXlZq.s:341    .text:00000000000001bc .L0 
     /tmp/ccqvXlZq.s:342    .text:00000000000001bc .L0 
     /tmp/ccqvXlZq.s:347    .text:00000000000001c8 .L0 
     /tmp/ccqvXlZq.s:348    .text:00000000000001c8 .L0 
     /tmp/ccqvXlZq.s:350    .text:00000000000001cc .L0 
     /tmp/ccqvXlZq.s:351    .text:00000000000001cc .L0 
     /tmp/ccqvXlZq.s:355    .text:00000000000001d4 .L0 
     /tmp/ccqvXlZq.s:356    .text:00000000000001d4 .L0 
     /tmp/ccqvXlZq.s:360    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:361    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:362    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:363    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:364    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:369    .text:00000000000001dc .L0 
     /tmp/ccqvXlZq.s:372    .text:00000000000001e0 .L0 
     /tmp/ccqvXlZq.s:373    .text:00000000000001e4 .L0 
     /tmp/ccqvXlZq.s:390    .text:00000000000001e4 _ZN5Riscv20handleEcallExceptionEv
     /tmp/ccqvXlZq.s:393    .text:00000000000001e4 .L0 
     /tmp/ccqvXlZq.s:394    .text:00000000000001e4 .L0 
     /tmp/ccqvXlZq.s:395    .text:00000000000001e8 .L0 
     /tmp/ccqvXlZq.s:399    .text:00000000000001f4 .L0 
     /tmp/ccqvXlZq.s:400    .text:00000000000001f4 .L0 
     /tmp/ccqvXlZq.s:401    .text:00000000000001f4 .L0 
     /tmp/ccqvXlZq.s:403    .text:00000000000001f8 .L0 
     /tmp/ccqvXlZq.s:407    .text:00000000000001f8 .L0 
     /tmp/ccqvXlZq.s:408    .text:00000000000001f8 .L0 
     /tmp/ccqvXlZq.s:409    .text:00000000000001f8 .L0 
  src/../h/riscv.hpp:76     .text:00000000000001f8 .L0 
     /tmp/ccqvXlZq.s:417    .text:0000000000000200 .L0 
     /tmp/ccqvXlZq.s:418    .text:0000000000000200 .L0 
     /tmp/ccqvXlZq.s:423    .text:0000000000000204 .L0 
     /tmp/ccqvXlZq.s:424    .text:0000000000000204 .L0 
       src/riscv.cpp:18     .text:0000000000000204 .L0 
     /tmp/ccqvXlZq.s:432    .text:000000000000020c .L0 
     /tmp/ccqvXlZq.s:433    .text:000000000000020c .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 46


       src/riscv.cpp:20     .text:000000000000020c .L0 
     /tmp/ccqvXlZq.s:441    .text:0000000000000214 .L0 
     /tmp/ccqvXlZq.s:442    .text:0000000000000214 .L0 
       src/riscv.cpp:22     .text:0000000000000214 .L0 
     /tmp/ccqvXlZq.s:450    .text:000000000000021c .L0 
     /tmp/ccqvXlZq.s:451    .text:000000000000021c .L0 
       src/riscv.cpp:24     .text:000000000000021c .L0 
     /tmp/ccqvXlZq.s:459    .text:0000000000000224 .L0 
     /tmp/ccqvXlZq.s:460    .text:0000000000000224 .L0 
       src/riscv.cpp:26     .text:0000000000000224 .L0 
     /tmp/ccqvXlZq.s:469    .text:000000000000022c .L0 
     /tmp/ccqvXlZq.s:470    .text:000000000000022c .L0 
     /tmp/ccqvXlZq.s:472    .text:0000000000000230 .L0 
     /tmp/ccqvXlZq.s:478    .text:0000000000000238 .L0 
     /tmp/ccqvXlZq.s:479    .text:0000000000000238 .L0 
     /tmp/ccqvXlZq.s:480    .text:0000000000000238 .L0 
  src/../h/riscv.hpp:85     .text:0000000000000238 .L0 
     /tmp/ccqvXlZq.s:488    .text:0000000000000240 .L0 
     /tmp/ccqvXlZq.s:489    .text:0000000000000240 .L0 
     /tmp/ccqvXlZq.s:493    .text:0000000000000244 .L0 
     /tmp/ccqvXlZq.s:495    .text:0000000000000248 .L0 
     /tmp/ccqvXlZq.s:499    .text:000000000000024c .L0 
     /tmp/ccqvXlZq.s:500    .text:000000000000024c .L0 
     /tmp/ccqvXlZq.s:501    .text:000000000000024c .L0 
  src/../h/riscv.hpp:131    .text:000000000000024c .L0 
     /tmp/ccqvXlZq.s:509    .text:0000000000000254 .L0 
     /tmp/ccqvXlZq.s:510    .text:0000000000000254 .L0 
     /tmp/ccqvXlZq.s:514    .text:0000000000000258 .L0 
     /tmp/ccqvXlZq.s:517    .text:000000000000025c .L0 
     /tmp/ccqvXlZq.s:518    .text:000000000000025c .L0 
     /tmp/ccqvXlZq.s:520    .text:0000000000000260 .L0 
     /tmp/ccqvXlZq.s:530    .text:0000000000000268 .L0 
     /tmp/ccqvXlZq.s:531    .text:0000000000000268 .L0 
     /tmp/ccqvXlZq.s:533    .text:000000000000026c .L0 
     /tmp/ccqvXlZq.s:545    .text:0000000000000274 .L0 
     /tmp/ccqvXlZq.s:546    .text:0000000000000274 .L0 
     /tmp/ccqvXlZq.s:548    .text:0000000000000278 .L0 
     /tmp/ccqvXlZq.s:562    .text:0000000000000280 .L0 
     /tmp/ccqvXlZq.s:563    .text:0000000000000280 .L0 
     /tmp/ccqvXlZq.s:565    .text:0000000000000284 .L0 
     /tmp/ccqvXlZq.s:581    .text:000000000000028c .L0 
     /tmp/ccqvXlZq.s:582    .text:000000000000028c .L0 
     /tmp/ccqvXlZq.s:584    .text:0000000000000290 .L0 
     /tmp/ccqvXlZq.s:602    .text:0000000000000298 .L0 
     /tmp/ccqvXlZq.s:603    .text:0000000000000298 .L0 
     /tmp/ccqvXlZq.s:605    .text:000000000000029c .L0 
     /tmp/ccqvXlZq.s:625    .text:00000000000002a4 .L0 
     /tmp/ccqvXlZq.s:626    .text:00000000000002a4 .L0 
     /tmp/ccqvXlZq.s:628    .text:00000000000002a8 .L0 
     /tmp/ccqvXlZq.s:650    .text:00000000000002b0 .L0 
     /tmp/ccqvXlZq.s:651    .text:00000000000002b0 .L0 
     /tmp/ccqvXlZq.s:653    .text:00000000000002b4 .L0 
     /tmp/ccqvXlZq.s:677    .text:00000000000002bc .L0 
     /tmp/ccqvXlZq.s:678    .text:00000000000002bc .L0 
     /tmp/ccqvXlZq.s:680    .text:00000000000002c0 .L0 
     /tmp/ccqvXlZq.s:706    .text:00000000000002c8 .L0 
     /tmp/ccqvXlZq.s:707    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 47


     /tmp/ccqvXlZq.s:709    .text:00000000000002cc .L0 
     /tmp/ccqvXlZq.s:737    .text:00000000000002d4 .L0 
     /tmp/ccqvXlZq.s:738    .text:00000000000002d4 .L0 
     /tmp/ccqvXlZq.s:740    .text:00000000000002d8 .L0 
     /tmp/ccqvXlZq.s:770    .text:00000000000002e0 .L0 
     /tmp/ccqvXlZq.s:771    .text:00000000000002e0 .L0 
     /tmp/ccqvXlZq.s:773    .text:00000000000002e4 .L0 
     /tmp/ccqvXlZq.s:805    .text:00000000000002ec .L0 
     /tmp/ccqvXlZq.s:806    .text:00000000000002ec .L0 
     /tmp/ccqvXlZq.s:808    .text:00000000000002f0 .L0 
     /tmp/ccqvXlZq.s:812    .text:00000000000002f8 .L0 
     /tmp/ccqvXlZq.s:813    .text:00000000000002f8 .L0 
     /tmp/ccqvXlZq.s:816    .text:00000000000002fc .L0 
     /tmp/ccqvXlZq.s:817    .text:00000000000002fc .L0 
     /tmp/ccqvXlZq.s:820    .text:0000000000000304 .L0 
       src/riscv.cpp:146    .text:0000000000000304 .L0 
     /tmp/ccqvXlZq.s:844    .text:000000000000030c .L0 
     /tmp/ccqvXlZq.s:845    .text:000000000000030c .L0 
     /tmp/ccqvXlZq.s:849    .text:0000000000000318 .L0 
       src/riscv.cpp:36     .text:0000000000000318 .L0 
     /tmp/ccqvXlZq.s:860    .text:000000000000031c .L0 
     /tmp/ccqvXlZq.s:861    .text:000000000000031c .L0 
     /tmp/ccqvXlZq.s:866    .text:0000000000000320 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000320 .L0 
     /tmp/ccqvXlZq.s:876    .text:0000000000000324 .L0 
     /tmp/ccqvXlZq.s:877    .text:0000000000000324 .L0 
     /tmp/ccqvXlZq.s:882    .text:0000000000000328 .L0 
  src/../h/riscv.hpp:89     .text:0000000000000328 .L0 
     /tmp/ccqvXlZq.s:894    .text:000000000000032c .L0 
     /tmp/ccqvXlZq.s:895    .text:0000000000000330 .L0 
     /tmp/ccqvXlZq.s:896    .text:0000000000000330 .L0 
     /tmp/ccqvXlZq.s:898    .text:0000000000000334 .L0 
     /tmp/ccqvXlZq.s:899    .text:0000000000000334 .L0 
     /tmp/ccqvXlZq.s:901    .text:0000000000000338 .L0 
     /tmp/ccqvXlZq.s:903    .text:000000000000033c .L0 
     /tmp/ccqvXlZq.s:907    .text:0000000000000340 .L0 
     /tmp/ccqvXlZq.s:914    .text:0000000000000340 .L0 
     /tmp/ccqvXlZq.s:915    .text:0000000000000340 .L0 
     /tmp/ccqvXlZq.s:919    .text:000000000000034c .L0 
       src/riscv.cpp:41     .text:000000000000034c .L0 
     /tmp/ccqvXlZq.s:932    .text:0000000000000354 .L0 
     /tmp/ccqvXlZq.s:933    .text:0000000000000354 .L0 
     /tmp/ccqvXlZq.s:937    .text:0000000000000358 .L0 
     /tmp/ccqvXlZq.s:939    .text:000000000000035c .L0 
     /tmp/ccqvXlZq.s:940    .text:000000000000035c .L0 
     /tmp/ccqvXlZq.s:950    .text:0000000000000368 .L0 
     /tmp/ccqvXlZq.s:951    .text:0000000000000368 .L0 
     /tmp/ccqvXlZq.s:957    .text:000000000000037c .L0 
     /tmp/ccqvXlZq.s:959    .text:0000000000000380 .L0 
     /tmp/ccqvXlZq.s:960    .text:0000000000000380 .L0 
     /tmp/ccqvXlZq.s:962    .text:0000000000000384 .L0 
     /tmp/ccqvXlZq.s:963    .text:0000000000000384 .L0 
     /tmp/ccqvXlZq.s:972    .text:0000000000000390 .L0 
     /tmp/ccqvXlZq.s:973    .text:0000000000000390 .L0 
     /tmp/ccqvXlZq.s:988    .text:000000000000039c .L0 
     /tmp/ccqvXlZq.s:989    .text:000000000000039c .L0 
     /tmp/ccqvXlZq.s:992    .text:00000000000003a4 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 48


       src/riscv.cpp:69     .text:00000000000003a4 .L0 
     /tmp/ccqvXlZq.s:1004   .text:00000000000003ac .L0 
     /tmp/ccqvXlZq.s:1005   .text:00000000000003ac .L0 
     /tmp/ccqvXlZq.s:1008   .text:00000000000003b8 .L0 
     /tmp/ccqvXlZq.s:1009   .text:00000000000003b8 .L0 
     /tmp/ccqvXlZq.s:1016   .text:00000000000003c4 .L0 
     /tmp/ccqvXlZq.s:1017   .text:00000000000003c4 .L0 
     /tmp/ccqvXlZq.s:1020   .text:00000000000003cc .L0 
       src/riscv.cpp:80     .text:00000000000003cc .L0 
     /tmp/ccqvXlZq.s:1033   .text:00000000000003d4 .L0 
     /tmp/ccqvXlZq.s:1034   .text:00000000000003d4 .L0 
     /tmp/ccqvXlZq.s:1037   .text:00000000000003d8 .L0 
     /tmp/ccqvXlZq.s:1038   .text:00000000000003d8 .L0 
     /tmp/ccqvXlZq.s:1047   .text:00000000000003e8 .L0 
     /tmp/ccqvXlZq.s:1048   .text:00000000000003e8 .L0 
     /tmp/ccqvXlZq.s:1052   .text:00000000000003ec .L0 
     /tmp/ccqvXlZq.s:1054   .text:00000000000003f0 .L0 
     /tmp/ccqvXlZq.s:1055   .text:00000000000003f0 .L0 
     /tmp/ccqvXlZq.s:1065   .text:00000000000003fc .L0 
     /tmp/ccqvXlZq.s:1066   .text:00000000000003fc .L0 
     /tmp/ccqvXlZq.s:1071   .text:000000000000040c .L0 
     /tmp/ccqvXlZq.s:1073   .text:0000000000000410 .L0 
     /tmp/ccqvXlZq.s:1074   .text:0000000000000410 .L0 
     /tmp/ccqvXlZq.s:1076   .text:0000000000000414 .L0 
     /tmp/ccqvXlZq.s:1077   .text:0000000000000414 .L0 
     /tmp/ccqvXlZq.s:1086   .text:0000000000000420 .L0 
     /tmp/ccqvXlZq.s:1087   .text:0000000000000420 .L0 
     /tmp/ccqvXlZq.s:1102   .text:000000000000042c .L0 
     /tmp/ccqvXlZq.s:1103   .text:000000000000042c .L0 
     /tmp/ccqvXlZq.s:1107   .text:0000000000000430 .L0 
     /tmp/ccqvXlZq.s:1109   .text:0000000000000434 .L0 
     /tmp/ccqvXlZq.s:1110   .text:0000000000000434 .L0 
     /tmp/ccqvXlZq.s:1120   .text:0000000000000440 .L0 
     /tmp/ccqvXlZq.s:1121   .text:0000000000000440 .L0 
     /tmp/ccqvXlZq.s:1124   .text:0000000000000448 .L0 
       src/riscv.cpp:117    .text:0000000000000448 .L0 
     /tmp/ccqvXlZq.s:1139   .text:0000000000000450 .L0 
     /tmp/ccqvXlZq.s:1140   .text:0000000000000450 .L0 
     /tmp/ccqvXlZq.s:1144   .text:0000000000000454 .L0 
     /tmp/ccqvXlZq.s:1146   .text:0000000000000458 .L0 
     /tmp/ccqvXlZq.s:1147   .text:0000000000000458 .L0 
     /tmp/ccqvXlZq.s:1157   .text:0000000000000464 .L0 
     /tmp/ccqvXlZq.s:1158   .text:0000000000000464 .L0 
     /tmp/ccqvXlZq.s:1161   .text:000000000000046c .L0 
       src/riscv.cpp:126    .text:000000000000046c .L0 
     /tmp/ccqvXlZq.s:1176   .text:0000000000000474 .L0 
     /tmp/ccqvXlZq.s:1177   .text:0000000000000474 .L0 
     /tmp/ccqvXlZq.s:1181   .text:0000000000000478 .L0 
     /tmp/ccqvXlZq.s:1183   .text:000000000000047c .L0 
     /tmp/ccqvXlZq.s:1184   .text:000000000000047c .L0 
     /tmp/ccqvXlZq.s:1194   .text:0000000000000488 .L0 
     /tmp/ccqvXlZq.s:1195   .text:0000000000000488 .L0 
     /tmp/ccqvXlZq.s:1198   .text:0000000000000490 .L0 
       src/riscv.cpp:135    .text:0000000000000490 .L0 
     /tmp/ccqvXlZq.s:1212   .text:0000000000000498 .L0 
     /tmp/ccqvXlZq.s:1213   .text:0000000000000498 .L0 
     /tmp/ccqvXlZq.s:1232   .text:00000000000004a8 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 49


     /tmp/ccqvXlZq.s:1233   .text:00000000000004a8 .L0 
     /tmp/ccqvXlZq.s:1237   .text:00000000000004b8 .L0 
     /tmp/ccqvXlZq.s:1238   .text:00000000000004b8 .L0 
     /tmp/ccqvXlZq.s:1244   .text:00000000000004cc .L0 
     /tmp/ccqvXlZq.s:1245   .text:00000000000004cc .L0 
     /tmp/ccqvXlZq.s:1251   .text:00000000000004dc .L0 
     /tmp/ccqvXlZq.s:1252   .text:00000000000004dc .L0 
     /tmp/ccqvXlZq.s:1253   .text:00000000000004dc .L0 
  src/../h/riscv.hpp:85     .text:00000000000004dc .L0 
     /tmp/ccqvXlZq.s:1261   .text:00000000000004e4 .L0 
     /tmp/ccqvXlZq.s:1262   .text:00000000000004e4 .L0 
     /tmp/ccqvXlZq.s:1266   .text:00000000000004e8 .L0 
     /tmp/ccqvXlZq.s:1272   .text:00000000000004fc .L0 
     /tmp/ccqvXlZq.s:1273   .text:00000000000004fc .L0 
     /tmp/ccqvXlZq.s:1278   .text:000000000000050c .L0 
     /tmp/ccqvXlZq.s:1279   .text:000000000000050c .L0 
     /tmp/ccqvXlZq.s:1281   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1287   .text:0000000000000510 _ZN5Riscv18updateSleepingListEv
     /tmp/ccqvXlZq.s:1290   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1291   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1293   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1294   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1296   .text:0000000000000518 .L0 
     /tmp/ccqvXlZq.s:1301   .text:000000000000051c .L0 
     /tmp/ccqvXlZq.s:1302   .text:000000000000051c .L0 
     /tmp/ccqvXlZq.s:1304   .text:0000000000000520 .L0 
     /tmp/ccqvXlZq.s:1306   .text:0000000000000524 .L0 
     /tmp/ccqvXlZq.s:1308   .text:0000000000000528 .L0 
     /tmp/ccqvXlZq.s:1315   .text:0000000000000530 .L0 
     /tmp/ccqvXlZq.s:1316   .text:0000000000000534 .L0 
     /tmp/ccqvXlZq.s:1319   .text:000000000000053c .L0 
     /tmp/ccqvXlZq.s:1320   .text:000000000000053c .L0 
     /tmp/ccqvXlZq.s:1322   .text:0000000000000540 .L0 
     /tmp/ccqvXlZq.s:1327   .text:0000000000000540 .L0 
     /tmp/ccqvXlZq.s:1328   .text:0000000000000540 .L0 
     /tmp/ccqvXlZq.s:1333   .text:0000000000000544 .L0 
     /tmp/ccqvXlZq.s:1334   .text:0000000000000544 .L0 
     /tmp/ccqvXlZq.s:1339   .text:0000000000000548 .L0 
     /tmp/ccqvXlZq.s:1340   .text:0000000000000548 .L0 
     /tmp/ccqvXlZq.s:1344   .text:0000000000000554 .L0 
     /tmp/ccqvXlZq.s:1345   .text:0000000000000554 .L0 
     /tmp/ccqvXlZq.s:1349   .text:0000000000000560 .L0 
     /tmp/ccqvXlZq.s:1350   .text:0000000000000560 .L0 
     /tmp/ccqvXlZq.s:1352   .text:0000000000000564 .L0 
     /tmp/ccqvXlZq.s:1354   .text:0000000000000568 .L0 
     /tmp/ccqvXlZq.s:1355   .text:0000000000000568 .L0 
     /tmp/ccqvXlZq.s:1359   .text:0000000000000570 .L0 
     /tmp/ccqvXlZq.s:1360   .text:0000000000000570 .L0 
     /tmp/ccqvXlZq.s:1361   .text:0000000000000570 .L0 
     /tmp/ccqvXlZq.s:1363   .text:0000000000000578 .L0 
     /tmp/ccqvXlZq.s:1365   .text:000000000000057c .L0 
     /tmp/ccqvXlZq.s:1367   .text:0000000000000580 .L0 
     /tmp/ccqvXlZq.s:1369   .text:0000000000000584 .L0 
     /tmp/ccqvXlZq.s:1370   .text:0000000000000584 .L0 
     /tmp/ccqvXlZq.s:1375   .text:0000000000000588 .L0 
     /tmp/ccqvXlZq.s:1376   .text:0000000000000588 .L0 
     /tmp/ccqvXlZq.s:1381   .text:000000000000058c .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 50


     /tmp/ccqvXlZq.s:1382   .text:000000000000058c .L0 
     /tmp/ccqvXlZq.s:1386   .text:0000000000000598 .L0 
     /tmp/ccqvXlZq.s:1387   .text:0000000000000598 .L0 
     /tmp/ccqvXlZq.s:1391   .text:00000000000005a4 .L0 
     /tmp/ccqvXlZq.s:1392   .text:00000000000005a4 .L0 
     /tmp/ccqvXlZq.s:1394   .text:00000000000005a8 .L0 
     /tmp/ccqvXlZq.s:1396   .text:00000000000005ac .L0 
     /tmp/ccqvXlZq.s:1397   .text:00000000000005ac .L0 
     /tmp/ccqvXlZq.s:1400   .text:00000000000005b4 .L0 
     /tmp/ccqvXlZq.s:1406   .text:00000000000005b8 .L0 
     /tmp/ccqvXlZq.s:1407   .text:00000000000005bc .L0 
     /tmp/ccqvXlZq.s:1409   .text:00000000000005c0 .L0 
     /tmp/ccqvXlZq.s:1410   .text:00000000000005c0 .L0 
     /tmp/ccqvXlZq.s:1412   .text:00000000000005c4 .L0 
     /tmp/ccqvXlZq.s:1414   .text:00000000000005c8 .L0 
     /tmp/ccqvXlZq.s:1420   .text:00000000000005c8 _ZN5Riscv14timerInterruptEv
     /tmp/ccqvXlZq.s:1423   .text:00000000000005c8 .L0 
     /tmp/ccqvXlZq.s:1424   .text:00000000000005c8 .L0 
     /tmp/ccqvXlZq.s:1425   .text:00000000000005cc .L0 
     /tmp/ccqvXlZq.s:1428   .text:00000000000005d4 .L0 
     /tmp/ccqvXlZq.s:1429   .text:00000000000005d4 .L0 
     /tmp/ccqvXlZq.s:1431   .text:00000000000005d8 .L0 
     /tmp/ccqvXlZq.s:1433   .text:00000000000005d8 .L0 
     /tmp/ccqvXlZq.s:1434   .text:00000000000005d8 .L0 
     /tmp/ccqvXlZq.s:1437   .text:00000000000005e0 .L0 
     /tmp/ccqvXlZq.s:1438   .text:00000000000005e0 .L0 
     /tmp/ccqvXlZq.s:1444   .text:00000000000005f4 .L0 
     /tmp/ccqvXlZq.s:1445   .text:00000000000005f4 .L0 
     /tmp/ccqvXlZq.s:1451   .text:0000000000000600 .L0 
     /tmp/ccqvXlZq.s:1452   .text:0000000000000600 .L0 
     /tmp/ccqvXlZq.s:1457   .text:0000000000000604 .L0 
     /tmp/ccqvXlZq.s:1464   .text:0000000000000608 .L0 
     /tmp/ccqvXlZq.s:1465   .text:0000000000000608 .L0 
     /tmp/ccqvXlZq.s:1466   .text:0000000000000608 .L0 
     /tmp/ccqvXlZq.s:1476   .text:0000000000000610 .L0 
     /tmp/ccqvXlZq.s:1477   .text:0000000000000614 .L0 
     /tmp/ccqvXlZq.s:1478   .text:0000000000000614 .L0 
     /tmp/ccqvXlZq.s:1480   .text:0000000000000618 .L0 
     /tmp/ccqvXlZq.s:1481   .text:0000000000000618 .L0 
     /tmp/ccqvXlZq.s:1483   .text:000000000000061c .L0 
     /tmp/ccqvXlZq.s:1486   .text:0000000000000620 .L0 
     /tmp/ccqvXlZq.s:1492   .text:0000000000000620 .L0 
     /tmp/ccqvXlZq.s:1493   .text:0000000000000620 .L0 
     /tmp/ccqvXlZq.s:1494   .text:0000000000000620 .L0 
  src/../h/riscv.hpp:85     .text:0000000000000620 .L0 
     /tmp/ccqvXlZq.s:1502   .text:0000000000000628 .L0 
     /tmp/ccqvXlZq.s:1503   .text:0000000000000628 .L0 
     /tmp/ccqvXlZq.s:1507   .text:000000000000062c .L0 
     /tmp/ccqvXlZq.s:1511   .text:0000000000000630 .L0 
     /tmp/ccqvXlZq.s:1512   .text:0000000000000630 .L0 
     /tmp/ccqvXlZq.s:1513   .text:0000000000000630 .L0 
  src/../h/riscv.hpp:131    .text:0000000000000630 .L0 
     /tmp/ccqvXlZq.s:1521   .text:0000000000000638 .L0 
     /tmp/ccqvXlZq.s:1522   .text:0000000000000638 .L0 
     /tmp/ccqvXlZq.s:1526   .text:000000000000063c .L0 
     /tmp/ccqvXlZq.s:1528   .text:0000000000000640 .L0 
     /tmp/ccqvXlZq.s:1529   .text:0000000000000640 .L0 
GAS LISTING /tmp/ccqvXlZq.s 			page 51


     /tmp/ccqvXlZq.s:1532   .text:000000000000064c .L0 
     /tmp/ccqvXlZq.s:1533   .text:000000000000064c .L0 
     /tmp/ccqvXlZq.s:1536   .text:0000000000000654 .L0 
     /tmp/ccqvXlZq.s:1537   .text:0000000000000654 .L0 
     /tmp/ccqvXlZq.s:1542   .text:0000000000000658 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000658 .L0 
     /tmp/ccqvXlZq.s:1552   .text:000000000000065c .L0 
     /tmp/ccqvXlZq.s:1553   .text:000000000000065c .L0 
     /tmp/ccqvXlZq.s:1558   .text:0000000000000660 .L0 
  src/../h/riscv.hpp:89     .text:0000000000000660 .L0 
     /tmp/ccqvXlZq.s:1565   .text:0000000000000664 .L0 
     /tmp/ccqvXlZq.s:1570   .text:0000000000000668 .L0 
     /tmp/ccqvXlZq.s:1579   .bss:0000000000000000 _ZN5Riscv12headSleepingE
     /tmp/ccqvXlZq.s:1576   .bss:0000000000000000 .LANCHOR0
     /tmp/ccqvXlZq.s:1591   .text:0000000000000668 .L0 
     /tmp/ccqvXlZq.s:66     .text:0000000000000054 .L0 
     /tmp/ccqvXlZq.s:75     .text:000000000000006c .L0 
     /tmp/ccqvXlZq.s:121    .text:000000000000009c .L0 
     /tmp/ccqvXlZq.s:207    .text:00000000000000f4 .L0 
     /tmp/ccqvXlZq.s:233    .text:000000000000011c .L0 
     /tmp/ccqvXlZq.s:257    .text:0000000000000144 .L0 
     /tmp/ccqvXlZq.s:263    .text:000000000000014c .L0 
     /tmp/ccqvXlZq.s:299    .text:0000000000000184 .L0 
     /tmp/ccqvXlZq.s:1005   .text:00000000000003ac .L0 
     /tmp/ccqvXlZq.s:378    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccqvXlZq.s:1233   .text:00000000000004a8 .L0 
     /tmp/ccqvXlZq.s:381    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccqvXlZq.s:1245   .text:00000000000004cc .L0 
     /tmp/ccqvXlZq.s:384    .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccqvXlZq.s:1273   .text:00000000000004fc .L0 
     /tmp/ccqvXlZq.s:1294   .text:0000000000000510 .L0 
     /tmp/ccqvXlZq.s:1345   .text:0000000000000554 .L0 
     /tmp/ccqvXlZq.s:1361   .text:0000000000000570 .L0 
     /tmp/ccqvXlZq.s:1387   .text:0000000000000598 .L0 
     /tmp/ccqvXlZq.s:1438   .text:00000000000005e0 .L0 
     /tmp/ccqvXlZq.s:1445   .text:00000000000005f4 .L0 
     /tmp/ccqvXlZq.s:1529   .text:0000000000000640 .L0 
     /tmp/ccqvXlZq.s:54     .text:0000000000000048 .L3
     /tmp/ccqvXlZq.s:35     .text:0000000000000028 .L2
     /tmp/ccqvXlZq.s:160    .text:00000000000000c8 .L6
     /tmp/ccqvXlZq.s:137    .text:00000000000000b4 .L7
     /tmp/ccqvXlZq.s:359    .text:00000000000001dc .L18
     /tmp/ccqvXlZq.s:288    .text:000000000000017c .L23
     /tmp/ccqvXlZq.s:301    .text:0000000000000190 .L13
     /tmp/ccqvXlZq.s:258    .text:000000000000014c .L12
     /tmp/ccqvXlZq.s:334    .text:00000000000001b4 .L14
     /tmp/ccqvXlZq.s:313    .text:0000000000000198 .L15
     /tmp/ccqvXlZq.s:353    .text:00000000000001d4 .L24
     /tmp/ccqvXlZq.s:345    .text:00000000000001c8 .L17
     /tmp/ccqvXlZq.s:1217   .text:00000000000004a8 .L26
     /tmp/ccqvXlZq.s:829    .text:000000000000030c .L50
     /tmp/ccqvXlZq.s:906    .text:0000000000000340 .L51
     /tmp/ccqvXlZq.s:928    .text:0000000000000354 .L52
     /tmp/ccqvXlZq.s:981    .text:000000000000039c .L53
     /tmp/ccqvXlZq.s:1001   .text:00000000000003ac .L54
     /tmp/ccqvXlZq.s:1012   .text:00000000000003c4 .L55
     /tmp/ccqvXlZq.s:1029   .text:00000000000003d4 .L56
GAS LISTING /tmp/ccqvXlZq.s 			page 52


     /tmp/ccqvXlZq.s:1043   .text:00000000000003e8 .L57
     /tmp/ccqvXlZq.s:1095   .text:000000000000042c .L58
     /tmp/ccqvXlZq.s:1132   .text:0000000000000450 .L59
     /tmp/ccqvXlZq.s:1169   .text:0000000000000474 .L60
     /tmp/ccqvXlZq.s:1206   .text:0000000000000498 .L61
     /tmp/ccqvXlZq.s:856    .text:000000000000031c .L28
     /tmp/ccqvXlZq.s:947    .text:0000000000000368 .L31
     /tmp/ccqvXlZq.s:970    .text:0000000000000390 .L62
     /tmp/ccqvXlZq.s:1062   .text:00000000000003fc .L38
     /tmp/ccqvXlZq.s:1084   .text:0000000000000420 .L63
     /tmp/ccqvXlZq.s:1117   .text:0000000000000440 .L41
     /tmp/ccqvXlZq.s:1154   .text:0000000000000464 .L43
     /tmp/ccqvXlZq.s:1191   .text:0000000000000488 .L45
     /tmp/ccqvXlZq.s:1276   .text:000000000000050c .L47
     /tmp/ccqvXlZq.s:1309   .text:000000000000052c .L68
     /tmp/ccqvXlZq.s:1311   .text:0000000000000530 .L71
     /tmp/ccqvXlZq.s:1401   .text:00000000000005b8 .L64
     /tmp/ccqvXlZq.s:1357   .text:0000000000000570 .L66
     /tmp/ccqvXlZq.s:1485   .text:0000000000000620 .L75
     /tmp/ccqvXlZq.s:1458   .text:0000000000000608 .L73
     /tmp/ccqvXlZq.s:3778   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccqvXlZq.s:5517   .debug_str:0000000000000964 .LASF195
     /tmp/ccqvXlZq.s:5575   .debug_str:0000000000000ba9 .LASF196
     /tmp/ccqvXlZq.s:5303   .debug_str:0000000000000323 .LASF197
     /tmp/ccqvXlZq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccqvXlZq.s:1582   .text:0000000000000668 .Letext0
     /tmp/ccqvXlZq.s:5195   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccqvXlZq.s:5325   .debug_str:00000000000003e5 .LASF0
     /tmp/ccqvXlZq.s:5353   .debug_str:00000000000004da .LASF1
     /tmp/ccqvXlZq.s:5461   .debug_str:00000000000007f3 .LASF2
     /tmp/ccqvXlZq.s:5469   .debug_str:000000000000083f .LASF4
     /tmp/ccqvXlZq.s:5335   .debug_str:0000000000000456 .LASF3
     /tmp/ccqvXlZq.s:5207   .debug_str:000000000000003f .LASF5
     /tmp/ccqvXlZq.s:5435   .debug_str:0000000000000738 .LASF6
     /tmp/ccqvXlZq.s:5423   .debug_str:00000000000006db .LASF7
     /tmp/ccqvXlZq.s:5345   .debug_str:00000000000004a6 .LASF8
     /tmp/ccqvXlZq.s:5301   .debug_str:0000000000000313 .LASF9
     /tmp/ccqvXlZq.s:5309   .debug_str:0000000000000369 .LASF10
     /tmp/ccqvXlZq.s:5233   .debug_str:000000000000011a .LASF11
     /tmp/ccqvXlZq.s:5291   .debug_str:00000000000002d7 .LASF12
     /tmp/ccqvXlZq.s:5251   .debug_str:00000000000001ac .LASF13
     /tmp/ccqvXlZq.s:5231   .debug_str:000000000000010a .LASF14
     /tmp/ccqvXlZq.s:5501   .debug_str:0000000000000926 .LASF15
     /tmp/ccqvXlZq.s:5273   .debug_str:000000000000023a .LASF16
     /tmp/ccqvXlZq.s:5485   .debug_str:00000000000008a5 .LASF17
     /tmp/ccqvXlZq.s:5529   .debug_str:0000000000000a54 .LASF72
     /tmp/ccqvXlZq.s:5399   .debug_str:0000000000000626 .LASF74
     /tmp/ccqvXlZq.s:5355   .debug_str:00000000000004ed .LASF101
     /tmp/ccqvXlZq.s:5547   .debug_str:0000000000000ae3 .LASF103
     /tmp/ccqvXlZq.s:5239   .debug_str:0000000000000141 .LASF18
     /tmp/ccqvXlZq.s:5265   .debug_str:0000000000000208 .LASF20
     /tmp/ccqvXlZq.s:5333   .debug_str:0000000000000434 .LASF19
     /tmp/ccqvXlZq.s:5499   .debug_str:0000000000000919 .LASF21
     /tmp/ccqvXlZq.s:5343   .debug_str:0000000000000497 .LASF22
     /tmp/ccqvXlZq.s:5481   .debug_str:0000000000000881 .LASF23
     /tmp/ccqvXlZq.s:5413   .debug_str:0000000000000697 .LASF24
     /tmp/ccqvXlZq.s:5513   .debug_str:0000000000000952 .LASF25
GAS LISTING /tmp/ccqvXlZq.s 			page 53


     /tmp/ccqvXlZq.s:5559   .debug_str:0000000000000b3b .LASF84
     /tmp/ccqvXlZq.s:5583   .debug_str:0000000000000bdd .LASF29
     /tmp/ccqvXlZq.s:5281   .debug_str:000000000000027d .LASF26
     /tmp/ccqvXlZq.s:5515   .debug_str:0000000000000957 .LASF27
     /tmp/ccqvXlZq.s:5261   .debug_str:00000000000001ea .LASF28
     /tmp/ccqvXlZq.s:5451   .debug_str:00000000000007a0 .LASF30
     /tmp/ccqvXlZq.s:5341   .debug_str:000000000000048e .LASF31
     /tmp/ccqvXlZq.s:5279   .debug_str:0000000000000274 .LASF32
     /tmp/ccqvXlZq.s:5577   .debug_str:0000000000000bb7 .LASF33
     /tmp/ccqvXlZq.s:5421   .debug_str:00000000000006ce .LASF86
     /tmp/ccqvXlZq.s:5567   .debug_str:0000000000000b75 .LASF34
     /tmp/ccqvXlZq.s:5235   .debug_str:0000000000000129 .LASF35
     /tmp/ccqvXlZq.s:5313   .debug_str:000000000000038c .LASF68
     /tmp/ccqvXlZq.s:5321   .debug_str:00000000000003c7 .LASF70
     /tmp/ccqvXlZq.s:5543   .debug_str:0000000000000ad5 .LASF36
     /tmp/ccqvXlZq.s:5533   .debug_str:0000000000000a6b .LASF38
     /tmp/ccqvXlZq.s:5457   .debug_str:00000000000007df .LASF40
     /tmp/ccqvXlZq.s:5405   .debug_str:0000000000000660 .LASF42
     /tmp/ccqvXlZq.s:5441   .debug_str:0000000000000756 .LASF37
     /tmp/ccqvXlZq.s:5445   .debug_str:0000000000000764 .LASF39
     /tmp/ccqvXlZq.s:5395   .debug_str:000000000000061a .LASF41
     /tmp/ccqvXlZq.s:5347   .debug_str:00000000000004b9 .LASF43
     /tmp/ccqvXlZq.s:5573   .debug_str:0000000000000ba1 .LASF44
     /tmp/ccqvXlZq.s:5525   .debug_str:0000000000000a3a .LASF45
     /tmp/ccqvXlZq.s:5391   .debug_str:000000000000060d .LASF46
     /tmp/ccqvXlZq.s:5403   .debug_str:000000000000064c .LASF47
     /tmp/ccqvXlZq.s:5361   .debug_str:000000000000050e .LASF48
     /tmp/ccqvXlZq.s:5449   .debug_str:000000000000078c .LASF49
     /tmp/ccqvXlZq.s:5599   .debug_str:0000000000000c79 .LASF50
     /tmp/ccqvXlZq.s:5331   .debug_str:0000000000000420 .LASF51
     /tmp/ccqvXlZq.s:5209   .debug_str:0000000000000046 .LASF52
     /tmp/ccqvXlZq.s:5465   .debug_str:000000000000080b .LASF53
     /tmp/ccqvXlZq.s:5459   .debug_str:00000000000007e8 .LASF54
     /tmp/ccqvXlZq.s:5593   .debug_str:0000000000000c3f .LASF55
     /tmp/ccqvXlZq.s:5563   .debug_str:0000000000000b63 .LASF56
     /tmp/ccqvXlZq.s:5581   .debug_str:0000000000000bc7 .LASF57
     /tmp/ccqvXlZq.s:5553   .debug_str:0000000000000b0c .LASF58
     /tmp/ccqvXlZq.s:5377   .debug_str:0000000000000589 .LASF59
     /tmp/ccqvXlZq.s:5495   .debug_str:0000000000000908 .LASF60
     /tmp/ccqvXlZq.s:5471   .debug_str:0000000000000846 .LASF61
     /tmp/ccqvXlZq.s:5473   .debug_str:0000000000000859 .LASF62
     /tmp/ccqvXlZq.s:5237   .debug_str:000000000000012e .LASF63
     /tmp/ccqvXlZq.s:5269   .debug_str:0000000000000216 .LASF64
     /tmp/ccqvXlZq.s:5319   .debug_str:00000000000003b5 .LASF65
     /tmp/ccqvXlZq.s:5329   .debug_str:000000000000041a .LASF66
     /tmp/ccqvXlZq.s:5263   .debug_str:00000000000001f6 .LASF67
     /tmp/ccqvXlZq.s:5571   .debug_str:0000000000000b92 .LASF69
     /tmp/ccqvXlZq.s:5307   .debug_str:000000000000034d .LASF71
     /tmp/ccqvXlZq.s:5551   .debug_str:0000000000000b01 .LASF73
     /tmp/ccqvXlZq.s:5283   .debug_str:0000000000000289 .LASF75
     /tmp/ccqvXlZq.s:5223   .debug_str:00000000000000b8 .LASF76
     /tmp/ccqvXlZq.s:5385   .debug_str:00000000000005c6 .LASF77
     /tmp/ccqvXlZq.s:5597   .debug_str:0000000000000c64 .LASF78
     /tmp/ccqvXlZq.s:5561   .debug_str:0000000000000b41 .LASF80
     /tmp/ccqvXlZq.s:5219   .debug_str:000000000000008c .LASF79
     /tmp/ccqvXlZq.s:5365   .debug_str:0000000000000521 .LASF81
     /tmp/ccqvXlZq.s:5587   .debug_str:0000000000000bfe .LASF82
GAS LISTING /tmp/ccqvXlZq.s 			page 54


     /tmp/ccqvXlZq.s:5483   .debug_str:0000000000000886 .LASF83
     /tmp/ccqvXlZq.s:5297   .debug_str:00000000000002fc .LASF95
     /tmp/ccqvXlZq.s:5415   .debug_str:00000000000006a8 .LASF85
     /tmp/ccqvXlZq.s:5479   .debug_str:000000000000087a .LASF87
     /tmp/ccqvXlZq.s:5351   .debug_str:00000000000004d5 .LASF88
     /tmp/ccqvXlZq.s:5527   .debug_str:0000000000000a4e .LASF89
     /tmp/ccqvXlZq.s:5455   .debug_str:00000000000007c2 .LASF90
     /tmp/ccqvXlZq.s:5407   .debug_str:0000000000000675 .LASF91
     /tmp/ccqvXlZq.s:5337   .debug_str:0000000000000468 .LASF92
     /tmp/ccqvXlZq.s:5477   .debug_str:000000000000086f .LASF93
     /tmp/ccqvXlZq.s:5491   .debug_str:00000000000008e0 .LASF94
     /tmp/ccqvXlZq.s:5381   .debug_str:00000000000005b1 .LASF96
     /tmp/ccqvXlZq.s:5509   .debug_str:0000000000000948 .LASF97
     /tmp/ccqvXlZq.s:5411   .debug_str:000000000000068a .LASF98
     /tmp/ccqvXlZq.s:5397   .debug_str:0000000000000621 .LASF99
     /tmp/ccqvXlZq.s:5409   .debug_str:000000000000067a .LASF100
     /tmp/ccqvXlZq.s:5211   .debug_str:0000000000000051 .LASF102
     /tmp/ccqvXlZq.s:5215   .debug_str:000000000000005c .LASF104
     /tmp/ccqvXlZq.s:5267   .debug_str:0000000000000211 .LASF105
     /tmp/ccqvXlZq.s:5387   .debug_str:00000000000005e6 .LASF106
     /tmp/ccqvXlZq.s:5503   .debug_str:0000000000000932 .LASF107
     /tmp/ccqvXlZq.s:5489   .debug_str:00000000000008ce .LASF108
     /tmp/ccqvXlZq.s:5315   .debug_str:0000000000000397 .LASF109
     /tmp/ccqvXlZq.s:5379   .debug_str:000000000000059f .LASF110
     /tmp/ccqvXlZq.s:5595   .debug_str:0000000000000c57 .LASF111
     /tmp/ccqvXlZq.s:5601   .debug_str:0000000000000c81 .LASF112
     /tmp/ccqvXlZq.s:5201   .debug_str:0000000000000019 .LASF113
     /tmp/ccqvXlZq.s:5289   .debug_str:00000000000002c9 .LASF114
     /tmp/ccqvXlZq.s:5229   .debug_str:0000000000000101 .LASF115
     /tmp/ccqvXlZq.s:5311   .debug_str:0000000000000377 .LASF116
     /tmp/ccqvXlZq.s:5243   .debug_str:0000000000000159 .LASF117
     /tmp/ccqvXlZq.s:5447   .debug_str:0000000000000777 .LASF118
     /tmp/ccqvXlZq.s:5323   .debug_str:00000000000003df .LASF119
     /tmp/ccqvXlZq.s:5285   .debug_str:00000000000002a1 .LASF120
     /tmp/ccqvXlZq.s:5203   .debug_str:0000000000000029 .LASF121
     /tmp/ccqvXlZq.s:5199   .debug_str:0000000000000006 .LASF122
     /tmp/ccqvXlZq.s:5437   .debug_str:000000000000073f .LASF123
     /tmp/ccqvXlZq.s:5557   .debug_str:0000000000000b34 .LASF124
     /tmp/ccqvXlZq.s:5427   .debug_str:00000000000006f7 .LASF125
     /tmp/ccqvXlZq.s:5545   .debug_str:0000000000000ade .LASF141
     /tmp/ccqvXlZq.s:5493   .debug_str:0000000000000903 .LASF126
     /tmp/ccqvXlZq.s:5393   .debug_str:0000000000000615 .LASF127
     /tmp/ccqvXlZq.s:5523   .debug_str:0000000000000a35 .LASF128
     /tmp/ccqvXlZq.s:5487   .debug_str:00000000000008bb .LASF129
     /tmp/ccqvXlZq.s:5287   .debug_str:00000000000002b2 .LASF130
     /tmp/ccqvXlZq.s:5463   .debug_str:0000000000000801 .LASF198
     /tmp/ccqvXlZq.s:5453   .debug_str:00000000000007ab .LASF199
     /tmp/ccqvXlZq.s:5349   .debug_str:00000000000004cc .LASF131
     /tmp/ccqvXlZq.s:5221   .debug_str:000000000000009b .LASF132
     /tmp/ccqvXlZq.s:5275   .debug_str:0000000000000250 .LASF133
     /tmp/ccqvXlZq.s:5277   .debug_str:0000000000000258 .LASF134
     /tmp/ccqvXlZq.s:5417   .debug_str:00000000000006b8 .LASF135
     /tmp/ccqvXlZq.s:5555   .debug_str:0000000000000b16 .LASF136
     /tmp/ccqvXlZq.s:5603   .debug_str:0000000000000c8e .LASF137
     /tmp/ccqvXlZq.s:5591   .debug_str:0000000000000c24 .LASF138
     /tmp/ccqvXlZq.s:5371   .debug_str:000000000000056c .LASF139
     /tmp/ccqvXlZq.s:5299   .debug_str:0000000000000309 .LASF140
GAS LISTING /tmp/ccqvXlZq.s 			page 55


     /tmp/ccqvXlZq.s:5317   .debug_str:000000000000039d .LASF200
     /tmp/ccqvXlZq.s:5589   .debug_str:0000000000000c10 .LASF201
     /tmp/ccqvXlZq.s:5507   .debug_str:0000000000000942 .LASF142
     /tmp/ccqvXlZq.s:5359   .debug_str:0000000000000509 .LASF143
     /tmp/ccqvXlZq.s:5257   .debug_str:00000000000001dc .LASF144
     /tmp/ccqvXlZq.s:5245   .debug_str:0000000000000163 .LASF145
     /tmp/ccqvXlZq.s:5389   .debug_str:00000000000005f6 .LASF146
     /tmp/ccqvXlZq.s:5293   .debug_str:00000000000002e6 .LASF147
     /tmp/ccqvXlZq.s:5227   .debug_str:00000000000000ea .LASF148
     /tmp/ccqvXlZq.s:5433   .debug_str:000000000000071f .LASF202
     /tmp/ccqvXlZq.s:5585   .debug_str:0000000000000bec .LASF149
     /tmp/ccqvXlZq.s:5327   .debug_str:00000000000003f2 .LASF150
     /tmp/ccqvXlZq.s:5569   .debug_str:0000000000000b80 .LASF151
     /tmp/ccqvXlZq.s:5249   .debug_str:0000000000000184 .LASF152
     /tmp/ccqvXlZq.s:5443   .debug_str:000000000000075d .LASF153
     /tmp/ccqvXlZq.s:5467   .debug_str:0000000000000823 .LASF154
     /tmp/ccqvXlZq.s:5295   .debug_str:00000000000002f5 .LASF155
     /tmp/ccqvXlZq.s:5197   .debug_str:0000000000000000 .LASF156
     /tmp/ccqvXlZq.s:5367   .debug_str:000000000000053d .LASF157
     /tmp/ccqvXlZq.s:5375   .debug_str:000000000000057b .LASF158
     /tmp/ccqvXlZq.s:5511   .debug_str:000000000000094d .LASF159
     /tmp/ccqvXlZq.s:5339   .debug_str:0000000000000485 .LASF160
     /tmp/ccqvXlZq.s:5205   .debug_str:0000000000000031 .LASF161
     /tmp/ccqvXlZq.s:5271   .debug_str:000000000000021c .LASF162
     /tmp/ccqvXlZq.s:5401   .debug_str:000000000000063d .LASF163
     /tmp/ccqvXlZq.s:5217   .debug_str:000000000000006d .LASF164
     /tmp/ccqvXlZq.s:5439   .debug_str:0000000000000747 .LASF165
     /tmp/ccqvXlZq.s:5537   .debug_str:0000000000000a90 .LASF166
     /tmp/ccqvXlZq.s:5357   .debug_str:00000000000004fa .LASF167
     /tmp/ccqvXlZq.s:5225   .debug_str:00000000000000cb .LASF168
     /tmp/ccqvXlZq.s:5429   .debug_str:0000000000000701 .LASF169
     /tmp/ccqvXlZq.s:5369   .debug_str:000000000000054c .LASF170
     /tmp/ccqvXlZq.s:5535   .debug_str:0000000000000a80 .LASF171
     /tmp/ccqvXlZq.s:5539   .debug_str:0000000000000aaf .LASF172
     /tmp/ccqvXlZq.s:5531   .debug_str:0000000000000a60 .LASF173
     /tmp/ccqvXlZq.s:5419   .debug_str:00000000000006c4 .LASF174
     /tmp/ccqvXlZq.s:5255   .debug_str:00000000000001c3 .LASF203
     /tmp/ccqvXlZq.s:1288   .text:0000000000000510 .LFB39
     /tmp/ccqvXlZq.s:1415   .text:00000000000005c8 .LFE39
     /tmp/ccqvXlZq.s:1325   .text:0000000000000540 .LBB266
     /tmp/ccqvXlZq.s:1402   .text:00000000000005b8 .LBE266
     /tmp/ccqvXlZq.s:4805   .debug_loc:0000000000000000 .LLST31
     /tmp/ccqvXlZq.s:1330   .text:0000000000000544 .LBB267
     /tmp/ccqvXlZq.s:1337   .text:0000000000000548 .LBE267
     /tmp/ccqvXlZq.s:4816   .debug_loc:0000000000000036 .LLST32
     /tmp/ccqvXlZq.s:4824   .debug_loc:000000000000005a .LLST33
     /tmp/ccqvXlZq.s:1372   .text:0000000000000588 .LBB269
     /tmp/ccqvXlZq.s:1379   .text:000000000000058c .LBE269
     /tmp/ccqvXlZq.s:4831   .debug_loc:000000000000007d .LLST34
     /tmp/ccqvXlZq.s:4839   .debug_loc:00000000000000a1 .LLST35
     /tmp/ccqvXlZq.s:1342   .text:0000000000000554 .LVL69
     /tmp/ccqvXlZq.s:1356   .text:0000000000000570 .LVL71
     /tmp/ccqvXlZq.s:1384   .text:0000000000000598 .LVL74
     /tmp/ccqvXlZq.s:1398   .text:00000000000005b4 .LVL76
     /tmp/ccqvXlZq.s:185    .text:00000000000000d4 .LFB38
     /tmp/ccqvXlZq.s:374    .text:00000000000001e4 .LFE38
     /tmp/ccqvXlZq.s:5541   .debug_str:0000000000000ad0 .LASF185
GAS LISTING /tmp/ccqvXlZq.s 			page 56


     /tmp/ccqvXlZq.s:4846   .debug_loc:00000000000000c4 .LLST4
     /tmp/ccqvXlZq.s:5383   .debug_str:00000000000005be .LASF175
     /tmp/ccqvXlZq.s:4879   .debug_loc:000000000000014c .LLST5
     /tmp/ccqvXlZq.s:303    .text:0000000000000190 .LBB96
     /tmp/ccqvXlZq.s:365    .text:00000000000001dc .LBE96
     /tmp/ccqvXlZq.s:5519   .debug_str:0000000000000a28 .LASF176
     /tmp/ccqvXlZq.s:4890   .debug_loc:0000000000000182 .LLST8
     /tmp/ccqvXlZq.s:4897   .debug_loc:00000000000001a5 .LLST9
     /tmp/ccqvXlZq.s:5213   .debug_str:0000000000000057 .LASF177
     /tmp/ccqvXlZq.s:4913   .debug_loc:00000000000001ef .LLST10
     /tmp/ccqvXlZq.s:210    .text:0000000000000100 .LBB92
     /tmp/ccqvXlZq.s:219    .text:0000000000000108 .LBE92
     /tmp/ccqvXlZq.s:4928   .debug_loc:0000000000000238 .LLST6
     /tmp/ccqvXlZq.s:4936   .debug_loc:000000000000025c .LLST7
     /tmp/ccqvXlZq.s:225    .text:0000000000000114 .LVL16
     /tmp/ccqvXlZq.s:268    .text:0000000000000160 .LVL17
     /tmp/ccqvXlZq.s:95     .text:0000000000000088 .LFB37
     /tmp/ccqvXlZq.s:179    .text:00000000000000d4 .LFE37
     /tmp/ccqvXlZq.s:106    .text:0000000000000094 .LBB86
     /tmp/ccqvXlZq.s:119    .text:000000000000009c .LBE86
     /tmp/ccqvXlZq.s:4943   .debug_loc:000000000000027f .LLST2
     /tmp/ccqvXlZq.s:126    .text:00000000000000ac .LBB88
     /tmp/ccqvXlZq.s:139    .text:00000000000000b4 .LBE88
     /tmp/ccqvXlZq.s:4952   .debug_loc:00000000000002a4 .LLST3
     /tmp/ccqvXlZq.s:164    .text:00000000000000c8 .LBB90
     /tmp/ccqvXlZq.s:177    .text:00000000000000d4 .LBE90
     /tmp/ccqvXlZq.s:10     .text:0000000000000000 .LFB36
     /tmp/ccqvXlZq.s:89     .text:0000000000000088 .LFE36
     /tmp/ccqvXlZq.s:5373   .debug_str:0000000000000571 .LASF178
     /tmp/ccqvXlZq.s:4961   .debug_loc:00000000000002ca .LLST0
     /tmp/ccqvXlZq.s:72     .text:000000000000006c .LBB84
     /tmp/ccqvXlZq.s:83     .text:0000000000000084 .LBE84
     /tmp/ccqvXlZq.s:4968   .debug_loc:00000000000002ed .LLST1
     /tmp/ccqvXlZq.s:82     .text:0000000000000084 .LVL6
     /tmp/ccqvXlZq.s:27     .text:000000000000001c .LVL0
     /tmp/ccqvXlZq.s:41     .text:0000000000000034 .LVL3
     /tmp/ccqvXlZq.s:62     .text:0000000000000050 .LVL4
     /tmp/ccqvXlZq.s:1421   .text:00000000000005c8 .LFB35
     /tmp/ccqvXlZq.s:1571   .text:0000000000000668 .LFE35
     /tmp/ccqvXlZq.s:1488   .text:0000000000000620 .LBB277
     /tmp/ccqvXlZq.s:1568   .text:0000000000000668 .LBE277
     /tmp/ccqvXlZq.s:5521   .debug_str:0000000000000a30 .LASF179
     /tmp/ccqvXlZq.s:5565   .debug_str:0000000000000b6d .LASF180
     /tmp/ccqvXlZq.s:1490   .text:0000000000000620 .LBB278
     /tmp/ccqvXlZq.s:1505   .text:000000000000062c .LBE278
     /tmp/ccqvXlZq.s:1509   .text:0000000000000630 .LBB280
     /tmp/ccqvXlZq.s:1524   .text:000000000000063c .LBE280
     /tmp/ccqvXlZq.s:1539   .text:0000000000000658 .LBB282
     /tmp/ccqvXlZq.s:1550   .text:000000000000065c .LBE282
     /tmp/ccqvXlZq.s:4976   .debug_loc:0000000000000311 .LLST37
     /tmp/ccqvXlZq.s:1555   .text:0000000000000660 .LBB284
     /tmp/ccqvXlZq.s:1567   .text:0000000000000668 .LBE284
     /tmp/ccqvXlZq.s:1534   .text:0000000000000654 .LVL82
     /tmp/ccqvXlZq.s:1448   .text:0000000000000600 .LBB275
     /tmp/ccqvXlZq.s:1455   .text:0000000000000604 .LBE275
     /tmp/ccqvXlZq.s:4983   .debug_loc:0000000000000334 .LLST36
     /tmp/ccqvXlZq.s:1462   .text:0000000000000608 .LBB286
GAS LISTING /tmp/ccqvXlZq.s 			page 57


     /tmp/ccqvXlZq.s:1474   .text:0000000000000610 .LBE286
     /tmp/ccqvXlZq.s:4990   .debug_loc:0000000000000357 .LLST38
     /tmp/ccqvXlZq.s:1435   .text:00000000000005e0 .LVL77
     /tmp/ccqvXlZq.s:391    .text:00000000000001e4 .LFB34
     /tmp/ccqvXlZq.s:1282   .text:0000000000000510 .LFE34
     /tmp/ccqvXlZq.s:5253   .debug_str:00000000000001bc .LASF181
     /tmp/ccqvXlZq.s:4998   .debug_loc:000000000000037b .LLST11
     /tmp/ccqvXlZq.s:5163   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccqvXlZq.s:842    .text:000000000000030c .LBB217
     /tmp/ccqvXlZq.s:857    .text:000000000000031c .LBE217
     /tmp/ccqvXlZq.s:5017   .debug_loc:00000000000003d7 .LLST28
     /tmp/ccqvXlZq.s:847    .text:0000000000000318 .LVL30
     /tmp/ccqvXlZq.s:912    .text:0000000000000340 .LBB204
     /tmp/ccqvXlZq.s:925    .text:0000000000000350 .LBE204
     /tmp/ccqvXlZq.s:5241   .debug_str:0000000000000154 .LASF182
     /tmp/ccqvXlZq.s:5024   .debug_loc:00000000000003fa .LLST27
     /tmp/ccqvXlZq.s:917    .text:000000000000034c .LVL37
     /tmp/ccqvXlZq.s:930    .text:0000000000000354 .LBB190
     /tmp/ccqvXlZq.s:984    .text:000000000000039c .LBE190
     /tmp/ccqvXlZq.s:5497   .debug_str:000000000000090f .LASF183
     /tmp/ccqvXlZq.s:5031   .debug_loc:000000000000041d .LLST25
     /tmp/ccqvXlZq.s:948    .text:0000000000000368 .LBB192
     /tmp/ccqvXlZq.s:982    .text:000000000000039c .LBE192
     /tmp/ccqvXlZq.s:5579   .debug_str:0000000000000bc0 .LASF184
     /tmp/ccqvXlZq.s:5038   .debug_loc:0000000000000440 .LLST26
     /tmp/ccqvXlZq.s:955    .text:000000000000037c .LVL40
     /tmp/ccqvXlZq.s:986    .text:000000000000039c .LBB179
     /tmp/ccqvXlZq.s:998    .text:00000000000003a8 .LBE179
     /tmp/ccqvXlZq.s:5045   .debug_loc:0000000000000463 .LLST24
     /tmp/ccqvXlZq.s:990    .text:00000000000003a4 .LVL42
     /tmp/ccqvXlZq.s:1014   .text:00000000000003c4 .LBB161
     /tmp/ccqvXlZq.s:1026   .text:00000000000003d0 .LBE161
     /tmp/ccqvXlZq.s:5052   .debug_loc:0000000000000486 .LLST23
     /tmp/ccqvXlZq.s:1018   .text:00000000000003cc .LVL45
     /tmp/ccqvXlZq.s:1031   .text:00000000000003d4 .LBB153
     /tmp/ccqvXlZq.s:1041   .text:00000000000003e4 .LBE153
     /tmp/ccqvXlZq.s:5059   .debug_loc:00000000000004a9 .LLST22
     /tmp/ccqvXlZq.s:1040   .text:00000000000003e4 .LVL48
     /tmp/ccqvXlZq.s:1045   .text:00000000000003e8 .LBB144
     /tmp/ccqvXlZq.s:1098   .text:000000000000042c .LBE144
     /tmp/ccqvXlZq.s:5066   .debug_loc:00000000000004cc .LLST20
     /tmp/ccqvXlZq.s:1063   .text:00000000000003fc .LBB146
     /tmp/ccqvXlZq.s:1096   .text:000000000000042c .LBE146
     /tmp/ccqvXlZq.s:5073   .debug_loc:00000000000004ef .LLST21
     /tmp/ccqvXlZq.s:1069   .text:000000000000040c .LVL50
     /tmp/ccqvXlZq.s:1100   .text:000000000000042c .LBB136
     /tmp/ccqvXlZq.s:1135   .text:0000000000000450 .LBE136
     /tmp/ccqvXlZq.s:5080   .debug_loc:0000000000000512 .LLST18
     /tmp/ccqvXlZq.s:1118   .text:0000000000000440 .LBB138
     /tmp/ccqvXlZq.s:1133   .text:0000000000000450 .LBE138
     /tmp/ccqvXlZq.s:5087   .debug_loc:0000000000000535 .LLST19
     /tmp/ccqvXlZq.s:1122   .text:0000000000000448 .LVL53
     /tmp/ccqvXlZq.s:1137   .text:0000000000000450 .LBB129
     /tmp/ccqvXlZq.s:1172   .text:0000000000000474 .LBE129
     /tmp/ccqvXlZq.s:5094   .debug_loc:0000000000000558 .LLST16
     /tmp/ccqvXlZq.s:1155   .text:0000000000000464 .LBB131
     /tmp/ccqvXlZq.s:1170   .text:0000000000000474 .LBE131
GAS LISTING /tmp/ccqvXlZq.s 			page 58


     /tmp/ccqvXlZq.s:5101   .debug_loc:000000000000057b .LLST17
     /tmp/ccqvXlZq.s:1159   .text:000000000000046c .LVL56
     /tmp/ccqvXlZq.s:1174   .text:0000000000000474 .LBB123
     /tmp/ccqvXlZq.s:1209   .text:0000000000000498 .LBE123
     /tmp/ccqvXlZq.s:5108   .debug_loc:000000000000059e .LLST14
     /tmp/ccqvXlZq.s:1192   .text:0000000000000488 .LBB125
     /tmp/ccqvXlZq.s:1207   .text:0000000000000498 .LBE125
     /tmp/ccqvXlZq.s:5115   .debug_loc:00000000000005c1 .LLST15
     /tmp/ccqvXlZq.s:1196   .text:0000000000000490 .LVL59
     /tmp/ccqvXlZq.s:810    .text:00000000000002f8 .LBB121
     /tmp/ccqvXlZq.s:826    .text:0000000000000308 .LBE121
     /tmp/ccqvXlZq.s:5122   .debug_loc:00000000000005e4 .LLST12
     /tmp/ccqvXlZq.s:5129   .debug_loc:0000000000000607 .LLST13
     /tmp/ccqvXlZq.s:818    .text:0000000000000304 .LVL28
     /tmp/ccqvXlZq.s:476    .text:0000000000000238 .LBB104
     /tmp/ccqvXlZq.s:491    .text:0000000000000244 .LBE104
     /tmp/ccqvXlZq.s:497    .text:000000000000024c .LBB106
     /tmp/ccqvXlZq.s:512    .text:0000000000000258 .LBE106
     /tmp/ccqvXlZq.s:863    .text:0000000000000320 .LBB231
     /tmp/ccqvXlZq.s:874    .text:0000000000000324 .LBE231
     /tmp/ccqvXlZq.s:5136   .debug_loc:000000000000062a .LLST29
     /tmp/ccqvXlZq.s:879    .text:0000000000000328 .LBB233
     /tmp/ccqvXlZq.s:890    .text:000000000000032c .LBE233
     /tmp/ccqvXlZq.s:5143   .debug_loc:000000000000064d .LLST30
     /tmp/ccqvXlZq.s:1010   .text:00000000000003c0 .LVL44
     /tmp/ccqvXlZq.s:1215   .text:00000000000004a4 .LVL61
     /tmp/ccqvXlZq.s:405    .text:00000000000001f8 .LBB100
     /tmp/ccqvXlZq.s:421    .text:0000000000000204 .LBE100
     /tmp/ccqvXlZq.s:1249   .text:00000000000004dc .LBB249
     /tmp/ccqvXlZq.s:1264   .text:00000000000004e8 .LBE249
     /tmp/ccqvXlZq.s:1235   .text:00000000000004b8 .LVL62
     /tmp/ccqvXlZq.s:1242   .text:00000000000004cc .LVL63
     /tmp/ccqvXlZq.s:1247   .text:00000000000004dc .LVL64
     /tmp/ccqvXlZq.s:1270   .text:00000000000004fc .LVL65
     /tmp/ccqvXlZq.s:1275   .text:000000000000050c .LVL66
     /tmp/ccqvXlZq.s:5549   .debug_str:0000000000000afc .LASF186
     /tmp/ccqvXlZq.s:5259   .debug_str:00000000000001e5 .LASF188
     /tmp/ccqvXlZq.s:5505   .debug_str:0000000000000939 .LASF187
     /tmp/ccqvXlZq.s:5363   .debug_str:0000000000000516 .LASF189
     /tmp/ccqvXlZq.s:5431   .debug_str:0000000000000711 .LASF190
     /tmp/ccqvXlZq.s:5247   .debug_str:0000000000000171 .LASF191
     /tmp/ccqvXlZq.s:5305   .debug_str:0000000000000341 .LASF192
     /tmp/ccqvXlZq.s:5475   .debug_str:0000000000000860 .LASF193
     /tmp/ccqvXlZq.s:5425   .debug_str:00000000000006ee .LASF194
     /tmp/ccqvXlZq.s:1347   .text:0000000000000560 .LVL70
     /tmp/ccqvXlZq.s:1389   .text:00000000000005a4 .LVL75
     /tmp/ccqvXlZq.s:1329   .text:0000000000000544 .LVL67
     /tmp/ccqvXlZq.s:1335   .text:0000000000000548 .LVL68
     /tmp/ccqvXlZq.s:1371   .text:0000000000000588 .LVL72
     /tmp/ccqvXlZq.s:1377   .text:000000000000058c .LVL73
     /tmp/ccqvXlZq.s:188    .text:00000000000000d4 .LVL12
     /tmp/ccqvXlZq.s:223    .text:000000000000010c .LVL15
     /tmp/ccqvXlZq.s:281    .text:0000000000000170 .LVL18
     /tmp/ccqvXlZq.s:287    .text:000000000000017c .LVL19
     /tmp/ccqvXlZq.s:358    .text:00000000000001dc .LVL24
     /tmp/ccqvXlZq.s:370    .text:00000000000001e0 .LVL25
     /tmp/ccqvXlZq.s:307    .text:0000000000000194 .LVL20
GAS LISTING /tmp/ccqvXlZq.s 			page 59


     /tmp/ccqvXlZq.s:311    .text:0000000000000198 .LVL21
     /tmp/ccqvXlZq.s:324    .text:00000000000001a8 .LVL22
     /tmp/ccqvXlZq.s:331    .text:00000000000001b0 .LVL23
     /tmp/ccqvXlZq.s:209    .text:0000000000000100 .LVL13
     /tmp/ccqvXlZq.s:217    .text:0000000000000108 .LVL14
     /tmp/ccqvXlZq.s:105    .text:0000000000000094 .LVL7
     /tmp/ccqvXlZq.s:116    .text:000000000000009c .LVL8
     /tmp/ccqvXlZq.s:125    .text:00000000000000ac .LVL9
     /tmp/ccqvXlZq.s:135    .text:00000000000000b4 .LVL10
     /tmp/ccqvXlZq.s:29     .text:0000000000000020 .LVL1
     /tmp/ccqvXlZq.s:34     .text:0000000000000028 .LVL2
     /tmp/ccqvXlZq.s:77     .text:0000000000000078 .LVL5
     /tmp/ccqvXlZq.s:1538   .text:0000000000000658 .LVL83
     /tmp/ccqvXlZq.s:1547   .text:000000000000065c .LVL84
     /tmp/ccqvXlZq.s:1447   .text:0000000000000600 .LVL78
     /tmp/ccqvXlZq.s:1453   .text:0000000000000604 .LVL79
     /tmp/ccqvXlZq.s:1461   .text:0000000000000608 .LVL80
     /tmp/ccqvXlZq.s:1471   .text:0000000000000610 .LVL81
     /tmp/ccqvXlZq.s:419    .text:0000000000000204 .LVL26
     /tmp/ccqvXlZq.s:854    .text:000000000000031c .LVL31
     /tmp/ccqvXlZq.s:905    .text:0000000000000340 .LVL36
     /tmp/ccqvXlZq.s:934    .text:0000000000000358 .LVL39
     /tmp/ccqvXlZq.s:980    .text:000000000000039c .LVL41
     /tmp/ccqvXlZq.s:1049   .text:00000000000003ec .LVL49
     /tmp/ccqvXlZq.s:1094   .text:000000000000042c .LVL51
     /tmp/ccqvXlZq.s:927    .text:0000000000000354 .LVL38
     /tmp/ccqvXlZq.s:1000   .text:00000000000003ac .LVL43
     /tmp/ccqvXlZq.s:1028   .text:00000000000003d4 .LVL46
     /tmp/ccqvXlZq.s:1035   .text:00000000000003d8 .LVL47
     /tmp/ccqvXlZq.s:1104   .text:0000000000000430 .LVL52
     /tmp/ccqvXlZq.s:1131   .text:0000000000000450 .LVL54
     /tmp/ccqvXlZq.s:1141   .text:0000000000000454 .LVL55
     /tmp/ccqvXlZq.s:1168   .text:0000000000000474 .LVL57
     /tmp/ccqvXlZq.s:1178   .text:0000000000000478 .LVL58
     /tmp/ccqvXlZq.s:1205   .text:0000000000000498 .LVL60
     /tmp/ccqvXlZq.s:814    .text:00000000000002fc .LVL27
     /tmp/ccqvXlZq.s:828    .text:000000000000030c .LVL29
     /tmp/ccqvXlZq.s:862    .text:0000000000000320 .LVL32
     /tmp/ccqvXlZq.s:871    .text:0000000000000324 .LVL33
     /tmp/ccqvXlZq.s:878    .text:0000000000000328 .LVL34
     /tmp/ccqvXlZq.s:887    .text:000000000000032c .LVL35
     /tmp/ccqvXlZq.s:1592   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccqvXlZq.s:474    .text:0000000000000238 .LBB103
     /tmp/ccqvXlZq.s:523    .text:0000000000000268 .LBE103
     /tmp/ccqvXlZq.s:527    .text:0000000000000268 .LBB236
     /tmp/ccqvXlZq.s:537    .text:0000000000000274 .LBE236
     /tmp/ccqvXlZq.s:541    .text:0000000000000274 .LBB237
     /tmp/ccqvXlZq.s:553    .text:0000000000000280 .LBE237
     /tmp/ccqvXlZq.s:557    .text:0000000000000280 .LBB238
     /tmp/ccqvXlZq.s:571    .text:000000000000028c .LBE238
     /tmp/ccqvXlZq.s:575    .text:000000000000028c .LBB239
     /tmp/ccqvXlZq.s:591    .text:0000000000000298 .LBE239
     /tmp/ccqvXlZq.s:595    .text:0000000000000298 .LBB240
     /tmp/ccqvXlZq.s:613    .text:00000000000002a4 .LBE240
     /tmp/ccqvXlZq.s:617    .text:00000000000002a4 .LBB241
     /tmp/ccqvXlZq.s:637    .text:00000000000002b0 .LBE241
     /tmp/ccqvXlZq.s:641    .text:00000000000002b0 .LBB242
GAS LISTING /tmp/ccqvXlZq.s 			page 60


     /tmp/ccqvXlZq.s:663    .text:00000000000002bc .LBE242
     /tmp/ccqvXlZq.s:667    .text:00000000000002bc .LBB243
     /tmp/ccqvXlZq.s:691    .text:00000000000002c8 .LBE243
     /tmp/ccqvXlZq.s:695    .text:00000000000002c8 .LBB244
     /tmp/ccqvXlZq.s:721    .text:00000000000002d4 .LBE244
     /tmp/ccqvXlZq.s:725    .text:00000000000002d4 .LBB245
     /tmp/ccqvXlZq.s:753    .text:00000000000002e0 .LBE245
     /tmp/ccqvXlZq.s:757    .text:00000000000002e0 .LBB246
     /tmp/ccqvXlZq.s:787    .text:00000000000002ec .LBE246
     /tmp/ccqvXlZq.s:791    .text:00000000000002ec .LBB247
     /tmp/ccqvXlZq.s:891    .text:000000000000032c .LBE247
     /tmp/ccqvXlZq.s:909    .text:0000000000000340 .LBB248
     /tmp/ccqvXlZq.s:1230   .text:00000000000004a8 .LBE248

UNDEFINED SYMBOLS
plic_claim
plic_complete
_ZN8_console14inputBuff_fullEv
CONSOLE_STATUS
CONSOLE_RX_DATA
_ZN8_console13inputBuff_putEc
_ZN3TCB14newThrUserModeE
_ZN3TCB7runningE
_ZN15MemoryAllocator5allocEm
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator4freeEPv
_ZN3TCB12createThreadEPFvPvEPcS0_
_ZN3TCB4exitEv
_ZN8_console14inputBuff_takeEv
_ZN8_console14outputBuff_putEc
_ZN4_sem4openEi
_ZN4_sem4waitEv
_ZN4_sem5closeEv
_ZN4_sem6signalEv
_ZN3TCB4joinEPS_
_Z11printStringPKc
_Z8printIntiii
_ZN9Scheduler3putEP3TCB
